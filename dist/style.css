@charset "UTF-8";
* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-size: 16px;
  height: 100%;
  min-height: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  height: 100%;
  min-height: 100%;
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.42;
  color: #000;
  margin: 0;
  padding: 0;
  background-color: #ffffff;
}

#wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  min-height: 100%;
  min-width: 100%;
}

#middle {
  -webkit-box-flex: 1;
  -ms-flex: 1 0 auto;
      flex: 1 0 auto;
}

#footer {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
      flex: 0 0 auto;
}

.container {
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding-left: 40px;
  padding-right: 40px;
}
@media (max-width: 768px) {
  .container {
    padding-right: 15px;
    padding-left: 15px;
  }
}

.row {
  display: -webkit-box;
  display: -webkit-inline-box;
  display: inline-flex;
  display: -ms-flex;
  display: -ms-inline-flexbox;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
          flex-flow: row wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  margin-left: -12px;
  margin-right: -12px;
}

.flex {
  display: -webkit-box;
  display: -webkit-inline-box;
  display: inline-flex;
  display: -ms-flex;
  display: -ms-inline-flexbox;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.valign-center {
  -webkit-box-align: center;
  -ms-flex-align: center;
  -ms-align-items: center;
  align-items: center;
}

.justify-center {
  -ms-justify-content: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.space-between {
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

[class*=col-] {
  width: 100%;
  padding-left: 12px;
  padding-right: 12px;
}

.clear {
  padding-left: 0px;
  padding-right: 0px;
}

/*  12-column */
.col-1 {
  -ms-flex: 0 0 8.33333%;
  -webkit-box-flex: 0;
          flex: 0 0 8.33333%;
  max-width: 8.33333%;
}

.col-2 {
  -ms-flex: 0 0 16.66667%;
  -webkit-box-flex: 0;
          flex: 0 0 16.66667%;
  max-width: 16.66667%;
}

.col-3 {
  -ms-flex: 0 0 25%;
  -webkit-box-flex: 0;
          flex: 0 0 25%;
  max-width: 25%;
}

.col-4 {
  -ms-flex: 0 0 33.33333%;
  -webkit-box-flex: 0;
          flex: 0 0 33.33333%;
  max-width: 33.33333%;
}

.col-5 {
  -ms-flex: 0 0 41.66667%;
  -webkit-box-flex: 0;
          flex: 0 0 41.66667%;
  max-width: 41.66667%;
}

.col-6 {
  -ms-flex: 0 0 50%;
  -webkit-box-flex: 0;
          flex: 0 0 50%;
  max-width: 50%;
}

.col-7 {
  -ms-flex: 0 0 58.33333%;
  -webkit-box-flex: 0;
          flex: 0 0 58.33333%;
  max-width: 58.33333%;
}

.col-8 {
  -ms-flex: 0 0 66.66667%;
  -webkit-box-flex: 0;
          flex: 0 0 66.66667%;
  max-width: 66.66667%;
}

.col-9 {
  -ms-flex: 0 0 75%;
  -webkit-box-flex: 0;
          flex: 0 0 75%;
  max-width: 75%;
}

.col-10 {
  -ms-flex: 0 0 83.33333%;
  -webkit-box-flex: 0;
          flex: 0 0 83.33333%;
  max-width: 83.33333%;
}

.col-11 {
  -ms-flex: 0 0 91.66667%;
  -webkit-box-flex: 0;
          flex: 0 0 91.66667%;
  max-width: 91.66667%;
}

.col-12 {
  -ms-flex: 0 0 100%;
  -webkit-box-flex: 0;
          flex: 0 0 100%;
  max-width: 100%;
}

@media (min-width: 320px) {
  .col-ss-0 {
    display: none;
  }

  .col-ss-1 {
    -ms-flex: 0 0 8.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 8.33333%;
    max-width: 8.33333%;
  }

  .col-ss-2 {
    -ms-flex: 0 0 16.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 16.66667%;
    max-width: 16.66667%;
  }

  .col-ss-3 {
    -ms-flex: 0 0 25%;
    -webkit-box-flex: 0;
            flex: 0 0 25%;
    max-width: 25%;
  }

  .col-ss-4 {
    -ms-flex: 0 0 33.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 33.33333%;
    max-width: 33.33333%;
  }

  .col-ss-5 {
    -ms-flex: 0 0 41.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 41.66667%;
    max-width: 41.66667%;
  }

  .col-ss-6 {
    -ms-flex: 0 0 50%;
    -webkit-box-flex: 0;
            flex: 0 0 50%;
    max-width: 50%;
  }

  .col-ss-7 {
    -ms-flex: 0 0 58.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 58.33333%;
    max-width: 58.33333%;
  }

  .col-ss-8 {
    -ms-flex: 0 0 66.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 66.66667%;
    max-width: 66.66667%;
  }

  .col-ss-9 {
    -ms-flex: 0 0 75%;
    -webkit-box-flex: 0;
            flex: 0 0 75%;
    max-width: 75%;
  }

  .col-ss-10 {
    -ms-flex: 0 0 83.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 83.33333%;
    max-width: 83.33333%;
  }

  .col-ss-11 {
    -ms-flex: 0 0 91.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 91.66667%;
    max-width: 91.66667%;
  }

  .col-ss-12 {
    -ms-flex: 0 0 100%;
    -webkit-box-flex: 0;
            flex: 0 0 100%;
    max-width: 100%;
  }
}
@media (min-width: 400px) {
  .col-us-0 {
    display: none;
  }

  .col-us-1 {
    -ms-flex: 0 0 8.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 8.33333%;
    max-width: 8.33333%;
  }

  .col-us-2 {
    -ms-flex: 0 0 16.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 16.66667%;
    max-width: 16.66667%;
  }

  .col-us-3 {
    -ms-flex: 0 0 25%;
    -webkit-box-flex: 0;
            flex: 0 0 25%;
    max-width: 25%;
  }

  .col-us-4 {
    -ms-flex: 0 0 33.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 33.33333%;
    max-width: 33.33333%;
  }

  .col-us-5 {
    -ms-flex: 0 0 41.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 41.66667%;
    max-width: 41.66667%;
  }

  .col-us-6 {
    -ms-flex: 0 0 50%;
    -webkit-box-flex: 0;
            flex: 0 0 50%;
    max-width: 50%;
  }

  .col-us-7 {
    -ms-flex: 0 0 58.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 58.33333%;
    max-width: 58.33333%;
  }

  .col-us-8 {
    -ms-flex: 0 0 66.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 66.66667%;
    max-width: 66.66667%;
  }

  .col-us-9 {
    -ms-flex: 0 0 75%;
    -webkit-box-flex: 0;
            flex: 0 0 75%;
    max-width: 75%;
  }

  .col-us-10 {
    -ms-flex: 0 0 83.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 83.33333%;
    max-width: 83.33333%;
  }

  .col-us-11 {
    -ms-flex: 0 0 91.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 91.66667%;
    max-width: 91.66667%;
  }

  .col-us-12 {
    -ms-flex: 0 0 100%;
    -webkit-box-flex: 0;
            flex: 0 0 100%;
    max-width: 100%;
  }
}
@media (min-width: 576px) {
  .col-xs-1 {
    -ms-flex: 0 0 8.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 8.33333%;
    max-width: 8.33333%;
  }

  .col-xs-2 {
    -ms-flex: 0 0 16.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 16.66667%;
    max-width: 16.66667%;
  }

  .col-xs-3 {
    -ms-flex: 0 0 25%;
    -webkit-box-flex: 0;
            flex: 0 0 25%;
    max-width: 25%;
  }

  .col-xs-4 {
    -ms-flex: 0 0 33.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 33.33333%;
    max-width: 33.33333%;
  }

  .col-xs-5 {
    -ms-flex: 0 0 41.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 41.66667%;
    max-width: 41.66667%;
  }

  .col-xs-6 {
    -ms-flex: 0 0 50%;
    -webkit-box-flex: 0;
            flex: 0 0 50%;
    max-width: 50%;
  }

  .col-xs-7 {
    -ms-flex: 0 0 58.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 58.33333%;
    max-width: 58.33333%;
  }

  .col-xs-8 {
    -ms-flex: 0 0 66.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 66.66667%;
    max-width: 66.66667%;
  }

  .col-xs-9 {
    -ms-flex: 0 0 75%;
    -webkit-box-flex: 0;
            flex: 0 0 75%;
    max-width: 75%;
  }

  .col-xs-10 {
    -ms-flex: 0 0 83.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 83.33333%;
    max-width: 83.33333%;
  }

  .col-xs-11 {
    -ms-flex: 0 0 91.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 91.66667%;
    max-width: 91.66667%;
  }

  .col-xs-12 {
    -ms-flex: 0 0 100%;
    -webkit-box-flex: 0;
            flex: 0 0 100%;
    max-width: 100%;
  }
}
@media (min-width: 768px) {
  .col-sm-1 {
    -ms-flex: 0 0 8.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 8.33333%;
    max-width: 8.33333%;
  }

  .col-sm-2 {
    -ms-flex: 0 0 16.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 16.66667%;
    max-width: 16.66667%;
  }

  .col-sm-3 {
    -ms-flex: 0 0 25%;
    -webkit-box-flex: 0;
            flex: 0 0 25%;
    max-width: 25%;
  }

  .col-sm-4 {
    -ms-flex: 0 0 33.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 33.33333%;
    max-width: 33.33333%;
  }

  .col-sm-5 {
    -ms-flex: 0 0 41.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 41.66667%;
    max-width: 41.66667%;
  }

  .col-sm-6 {
    -ms-flex: 0 0 50%;
    -webkit-box-flex: 0;
            flex: 0 0 50%;
    max-width: 50%;
  }

  .col-sm-7 {
    -ms-flex: 0 0 58.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 58.33333%;
    max-width: 58.33333%;
  }

  .col-sm-8 {
    -ms-flex: 0 0 66.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 66.66667%;
    max-width: 66.66667%;
  }

  .col-sm-9 {
    -ms-flex: 0 0 75%;
    -webkit-box-flex: 0;
            flex: 0 0 75%;
    max-width: 75%;
  }

  .col-sm-10 {
    -ms-flex: 0 0 83.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 83.33333%;
    max-width: 83.33333%;
  }

  .col-sm-11 {
    -ms-flex: 0 0 91.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 91.66667%;
    max-width: 91.66667%;
  }

  .col-sm-12 {
    -ms-flex: 0 0 100%;
    -webkit-box-flex: 0;
            flex: 0 0 100%;
    max-width: 100%;
  }
}
@media (min-width: 1024px) {
  .col-md-1 {
    -ms-flex: 0 0 8.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 8.33333%;
    max-width: 8.33333%;
  }

  .col-md-2 {
    -ms-flex: 0 0 16.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 16.66667%;
    max-width: 16.66667%;
  }

  .col-md-3 {
    -ms-flex: 0 0 25%;
    -webkit-box-flex: 0;
            flex: 0 0 25%;
    max-width: 25%;
  }

  .col-md-4 {
    -ms-flex: 0 0 33.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 33.33333%;
    max-width: 33.33333%;
  }

  .col-md-5 {
    -ms-flex: 0 0 41.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 41.66667%;
    max-width: 41.66667%;
  }

  .col-md-6 {
    -ms-flex: 0 0 50%;
    -webkit-box-flex: 0;
            flex: 0 0 50%;
    max-width: 50%;
  }

  .col-md-7 {
    -ms-flex: 0 0 58.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 58.33333%;
    max-width: 58.33333%;
  }

  .col-md-8 {
    -ms-flex: 0 0 66.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 66.66667%;
    max-width: 66.66667%;
  }

  .col-md-9 {
    -ms-flex: 0 0 75%;
    -webkit-box-flex: 0;
            flex: 0 0 75%;
    max-width: 75%;
  }

  .col-md-10 {
    -ms-flex: 0 0 83.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 83.33333%;
    max-width: 83.33333%;
  }

  .col-md-11 {
    -ms-flex: 0 0 91.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 91.66667%;
    max-width: 91.66667%;
  }

  .col-md-12 {
    -ms-flex: 0 0 100%;
    -webkit-box-flex: 0;
            flex: 0 0 100%;
    max-width: 100%;
  }
}
@media (min-width: 1170px) {
  .col-lg-1 {
    -ms-flex: 0 0 8.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 8.33333%;
    max-width: 8.33333%;
  }

  .col-lg-2 {
    -ms-flex: 0 0 16.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 16.66667%;
    max-width: 16.66667%;
  }

  .col-lg-3 {
    -ms-flex: 0 0 25%;
    -webkit-box-flex: 0;
            flex: 0 0 25%;
    max-width: 25%;
  }

  .col-lg-4 {
    -ms-flex: 0 0 33.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 33.33333%;
    max-width: 33.33333%;
  }

  .col-lg-5 {
    -ms-flex: 0 0 41.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 41.66667%;
    max-width: 41.66667%;
  }

  .col-lg-6 {
    -ms-flex: 0 0 50%;
    -webkit-box-flex: 0;
            flex: 0 0 50%;
    max-width: 50%;
  }

  .col-lg-7 {
    -ms-flex: 0 0 58.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 58.33333%;
    max-width: 58.33333%;
  }

  .col-lg-8 {
    -ms-flex: 0 0 66.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 66.66667%;
    max-width: 66.66667%;
  }

  .col-lg-9 {
    -ms-flex: 0 0 75%;
    -webkit-box-flex: 0;
            flex: 0 0 75%;
    max-width: 75%;
  }

  .col-lg-10 {
    -ms-flex: 0 0 83.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 83.33333%;
    max-width: 83.33333%;
  }

  .col-lg-11 {
    -ms-flex: 0 0 91.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 91.66667%;
    max-width: 91.66667%;
  }

  .col-lg-12 {
    -ms-flex: 0 0 100%;
    -webkit-box-flex: 0;
            flex: 0 0 100%;
    max-width: 100%;
  }
}
@media (min-width: 1330px) {
  .col-l-1 {
    -ms-flex: 0 0 8.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 8.33333%;
    max-width: 8.33333%;
  }

  .col-l-2 {
    -ms-flex: 0 0 16.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 16.66667%;
    max-width: 16.66667%;
  }

  .col-l-3 {
    -ms-flex: 0 0 25%;
    -webkit-box-flex: 0;
            flex: 0 0 25%;
    max-width: 25%;
  }

  .col-l-4 {
    -ms-flex: 0 0 33.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 33.33333%;
    max-width: 33.33333%;
  }

  .col-l-5 {
    -ms-flex: 0 0 41.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 41.66667%;
    max-width: 41.66667%;
  }

  .col-l-6 {
    -ms-flex: 0 0 50%;
    -webkit-box-flex: 0;
            flex: 0 0 50%;
    max-width: 50%;
  }

  .col-l-7 {
    -ms-flex: 0 0 58.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 58.33333%;
    max-width: 58.33333%;
  }

  .col-l-8 {
    -ms-flex: 0 0 66.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 66.66667%;
    max-width: 66.66667%;
  }

  .col-l-9 {
    -ms-flex: 0 0 75%;
    -webkit-box-flex: 0;
            flex: 0 0 75%;
    max-width: 75%;
  }

  .col-l-10 {
    -ms-flex: 0 0 83.33333%;
    -webkit-box-flex: 0;
            flex: 0 0 83.33333%;
    max-width: 83.33333%;
  }

  .col-l-11 {
    -ms-flex: 0 0 91.66667%;
    -webkit-box-flex: 0;
            flex: 0 0 91.66667%;
    max-width: 91.66667%;
  }

  .col-l-12 {
    -ms-flex: 0 0 100%;
    -webkit-box-flex: 0;
            flex: 0 0 100%;
    max-width: 100%;
  }
}
@media (min-width: 1170px) {
  .col-xl-1 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 10%;
            flex: 0 0 10%;
    max-width: 10%;
  }

  .col-xl-2 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 20%;
            flex: 0 0 20%;
    max-width: 20%;
  }

  .col-xl-3 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 30%;
            flex: 0 0 30%;
    max-width: 30%;
  }

  .col-xl-4 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 40%;
            flex: 0 0 40%;
    max-width: 40%;
  }

  .col-xl-5 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%;
    max-width: 50%;
  }

  .col-xl-6 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 60%;
            flex: 0 0 60%;
    max-width: 60%;
  }

  .col-xl-7 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 70%;
            flex: 0 0 70%;
    max-width: 70%;
  }

  .col-xl-8 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 80%;
            flex: 0 0 80%;
    max-width: 80%;
  }

  .col-xl-9 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 90%;
            flex: 0 0 90%;
    max-width: 90%;
  }

  .col-xl-10 {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    max-width: 100%;
  }
}
.main-contacts-tel-arrow {
  display: inline-block;
  position: absolute;
  margin-left: 6px;
  bottom: 2px;
  max-width: 12px;
  cursor: pointer;
}
.main-contacts-tel-arrow img {
  min-width: 12px;
}

.main-contacts-tel-numbers {
  display: none;
  position: absolute;
  z-index: 1;
  background: #fff;
  border: 1px solid black;
}

.numbers-open {
  display: block;
}

.header {
  position: relative;
  margin-bottom: 17px;
  transition: transform 0.4s, background-color 0.2s, -webkit-transform 0.4s;
  will-change: transform;
}
@media (max-width: 1024px) {
  .header {
    padding: 11px 0;
    -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
            box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }
}
.header .menu {
  background: #f5f5f5;
  padding: 10px 0px;
  font-size: 0.875rem;
}
@media (max-width: 1024px) {
  .header .menu {
    display: none !important;
  }
}
.header .menu li {
  display: inline-block;
}
.header .menu li a {
  margin-right: 32px;
  color: #000;
}
.header .menu li a:hover {
  text-decoration: underline;
}
@media (max-width: 1300px) {
  .header .menu li a {
    margin-right: 16px;
  }
}
@media (max-width: 1170px) {
  .header .menu li a {
    margin-right: 10px;
  }
}
.header .menu-wrap {
  text-align: right;
}
@media (max-width: 1170px) {
  .header .menu-wrap {
    text-align: left;
  }
}
.header .menu-time {
  display: inline-block;
  position: relative;
  margin-right: 56px;
}
@media (max-width: 1170px) {
  .header .menu-time {
    margin-right: 30px;
  }
}
.header .menu-address {
  position: relative;
  display: inline-block;
}
.header .menu-icon {
  position: absolute;
  bottom: -2px;
  left: -26px;
  max-width: 24px;
  height: 24px;
}
.header .menu-icon img {
  max-height: 24px;
}
.header .main {
  padding: 18px 0px;
}
.header .main-container {
  gap: 32px;
}
@media (max-width: 1170px) {
  .header .main-container {
    gap: 20px;
  }
}
@media (max-width: 1024px) {
  .header .main-container {
    gap: 0;
  }
}
@media (max-width: 1024px) {
  .header .main {
    padding: 0px;
    height: 100%;
  }
}
.header .main-card {
  display: none;
}
@media (max-width: 1024px) {
  .header .main-card {
    display: inline-block;
    margin-left: 12px;
  }
}
.header .main-logo {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 192px;
          flex: 0 0 192px;
  max-width: 192px;
}
@media (max-width: 1024px) {
  .header .main-logo {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    max-width: initial;
    -webkit-box-flex: 1;
        -ms-flex: auto;
            flex: auto;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}
.header .main-logo-img {
  height: 40px;
}
.header .main-logo img {
  max-height: 40px;
}
.header .main-catalog {
  white-space: nowrap;
  height: 40px;
  line-height: 40px;
  background-color: #bc0000;
  color: #fff;
  font-size: 0.875rem;
  font-weight: 600;
  border-radius: 5px;
  padding: 0px 14px;
}
@media (max-width: 1024px) {
  .header .main-catalog {
    display: inline-block;
    height: 48px;
    width: 48px;
    line-height: 48px;
  }
}
@media (max-width: 1024px) {
  .header .main-catalog-wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: end;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 134px;
            flex: 0 0 134px;
    max-width: 134px;
    padding-left: 24px;
  }
}
@media (max-width: 1024px) and (max-width: 400px) {
  .header .main-catalog-wrapper {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 108px;
            flex: 0 0 108px;
    padding-left: 12px;
  }
}
.header .main-catalog-text {
  display: inline-block;
}
@media (max-width: 1270px) {
  .header .main-catalog-text {
    display: none;
  }
}
.header .main-toggler {
  position: relative;
  display: inline-block;
  width: 18px;
  height: 2px;
  border-radius: 2px;
  background-color: #fff;
  bottom: -2px;
  margin-right: 8px;
}
@media (max-width: 1350px) {
  .header .main-toggler {
    margin-right: 4px;
  }
}
.header .main-toggler:after {
  content: "";
  display: inline-block;
  position: absolute;
  width: 18px;
  height: 2px;
  border-radius: 2px;
  background-color: #fff;
  top: -6px;
}
.header .main-toggler::before {
  content: "";
  display: inline-block;
  position: absolute;
  width: 18px;
  height: 2px;
  border-radius: 2px;
  background-color: #fff;
  top: -12px;
}
.header .main-contacts {
  font-weight: 600;
  white-space: nowrap;
  padding-right: 12px;
}
.header .main-contacts a {
  color: #000;
}
@media (max-width: 1024px) {
  .header .main-contacts {
    display: none;
  }
}
.header .main-contacts-tel, .header .main-contacts-email {
  display: block;
  position: relative;
  padding-left: 26px;
}
@media (max-width: 1170px) {
  .header .main-contacts-tel, .header .main-contacts-email {
    font-size: 0.875rem;
  }
}
.header .main-contacts-tel:hover, .header .main-contacts-email:hover {
  text-decoration: underline;
}
.header .main-contacts-icon {
  position: absolute;
  -webkit-transform: translate(0%, -50%);
      -ms-transform: translate(0%, -50%);
          transform: translate(0%, -50%);
  top: 50%;
  left: 0;
  max-width: 20px;
  height: 20px;
}
.header .main-contacts-icon img {
  max-height: 20px;
}
.header .main-menu {
  white-space: nowrap;
  text-align: center;
}
@media (max-width: 1024px) {
  .header .main-menu {
    display: none;
  }
}
.header .main-menu-services {
  display: inline-block;
  cursor: pointer;
  margin-left: 26px;
  -webkit-transition: 0.1s ease;
  -o-transition: 0.1s ease;
  transition: 0.1s ease;
}
@media (max-width: 1170px) {
  .header .main-menu-services {
    margin-left: 10px;
  }
}
.header .main-menu-services:hover {
  opacity: 0.5;
}
.header .main-menu-services-img {
  position: relative;
}
.header .main-menu-services-svg {
  max-width: 24px;
  max-height: 24px;
}
.header .main-menu-services-text {
  font-size: 0.875rem;
}
@media (max-width: 1170px) {
  .header .main-menu-services-text {
    font-size: 0.8125rem;
  }
}
.header .main-menu-services-label {
  position: absolute;
  width: 30px;
  height: 16px;
  background: #bc0000;
  border-radius: 10px;
  font-size: 0.75rem;
  font-weight: 600;
  text-align: center;
  overflow: hidden;
  white-space: nowrap;
  color: #fff;
  -webkit-transform: translate(0, -50%);
      -ms-transform: translate(0, -50%);
          transform: translate(0, -50%);
  top: 3px;
  left: 50%;
}
.header .nav {
  background: #fff;
  gap: 2px;
}
@media (max-width: 1024px) {
  .header .nav {
    display: none;
  }
}
.header .nav-wrapper {
  background: #f5f5f5;
}
.header .nav-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: relative;
  padding: 15px 15px;
  background: #f5f5f5;
  text-align: center;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 20%;
          flex: 0 0 20%;
  max-width: 20%;
  color: #000;
}
.header .nav-item:hover {
  background: #ededed;
}
.header .nav-item-img {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.header .nav-item-img img {
  max-height: 32px;
}
@media (max-width: 1340px) {
  .header .nav-item-img {
    left: 10px;
  }
}
@media (max-width: 1240px) {
  .header .nav-item-img {
    left: 0;
  }
}
.header .nav-select {
  color: #bc0000;
}
.header .mob-menu {
  display: none;
}
@media (max-width: 1024px) {
  .header .mob-menu {
    display: block;
    padding-right: 24px;
  }
}
@media (max-width: 1024px) and (max-width: 400px) {
  .header .mob-menu {
    padding-right: 12px;
  }
}
@media (max-width: 1024px) {
  .header .mob-menu-img {
    display: inline-block;
    max-width: 32px;
    height: 32px;
    margin-left: 16px;
  }
}
@media (max-width: 1024px) and (max-width: 400px) {
  .header .mob-menu-img {
    margin-left: 8px;
  }
}
@media (max-width: 1024px) {
  .header .mob-menu-img img {
    max-height: 32px;
  }
}
@media (max-width: 1024px) and (max-width: 350px) {
  .header .mob-menu-img img {
    max-height: 28px;
  }
}

.mobile-separ {
  display: none;
}

.mobile-card {
  display: none;
  max-width: 32px;
}
.mobile-card img {
  max-height: 32px;
}
@media (max-width: 350px) {
  .mobile-card img {
    max-height: 28px;
  }
}
@media (max-width: 1024px) {
  .mobile-card {
    display: inline-block;
    margin-right: 32px;
  }
}
@media (max-width: 1024px) and (max-width: 400px) {
  .mobile-card {
    margin-right: 16px;
  }
}

@media (max-width: 1024px) {
  .mobile-separ {
    position: relative;
    display: inline-block;
  }
  .mobile-separ::after {
    content: "";
    position: absolute;
    display: inline-block;
    width: 1px;
    height: 80px;
    background: #d3d3d3;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    top: 50%;
    left: 50%;
  }
}
.main-search-form {
  position: relative;
  width: 100%;
}
@media (max-width: 1024px) {
  .main-search-form {
    display: none;
  }
}
.main-search-input {
  width: 100%;
  border-color: #d3d3d3;
  padding-right: 87px;
}
.main-search-btn {
  border: none;
  height: 40px;
  width: 80px;
  padding: 0;
  position: absolute;
  background-color: #2a4455;
  -webkit-transform: translate(0%, -50%);
      -ms-transform: translate(0%, -50%);
          transform: translate(0%, -50%);
  top: 50%;
  right: 0;
  border-radius: 0 5px 5px 0;
}
.main-search-btn-img {
  max-width: 24px;
  height: 24px;
  position: relative;
  bottom: -2px;
  display: inline-block;
}
.main-search-btn-img img {
  max-height: 24px;
}

.header.headerCard_fixed {
  -webkit-box-shadow: none;
          box-shadow: none;
}

.header_fixed {
  position: fixed;
  background: #fff;
  z-index: 999;
  left: 0;
  top: 0;
  right: 0;
  width: 100%;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  -webkit-transform: translate3d(0px, 0px, 0px);
          transform: translate3d(0px, 0px, 0px);
}
.header_fixed .main {
  padding: 17px 0px;
}

.wrapper_fixed {
  padding-top: 195px;
}

.headerCard_fixed {
  -webkit-box-shadow: initial;
          box-shadow: initial;
  border-bottom: 1px solid #d3d3d3;
}

.footer {
  padding: 40px 0px;
  background: #1d262c;
  color: #fff;
}
@media (max-width: 768px) {
  .footer {
    padding: 32px 0px 37px 0px;
  }
}
@media (max-width: 768px) {
  .footer ul li {
    margin-bottom: 15px;
  }
}
.footer ul li a {
  color: #fff;
  opacity: 0.5;
  font-size: 0.875rem;
}
.footer ul li a:hover {
  text-decoration: underline;
}
@media (max-width: 768px) {
  .footer ul li a {
    margin-bottom: 15px;
  }
}
.footer-top {
  padding-bottom: 27px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}
@media (max-width: 768px) {
  .footer-top {
    border-bottom: none;
    padding-bottom: 0;
  }
}
.footer-top-title {
  font-weight: 700;
  margin-bottom: 12px;
  position: relative;
}
@media (max-width: 768px) {
  .footer-top-title {
    margin-bottom: 0;
  }
  .footer-top-title.footer-open {
    margin-bottom: 22px;
  }
  .footer-top-title:after {
    content: "";
    display: inline-block;
    position: absolute;
    border-top: 2px solid #fff;
    border-right: 2px solid #fff;
    -webkit-transform: rotate(135deg);
        -ms-transform: rotate(135deg);
            transform: rotate(135deg);
    width: 8px;
    height: 8px;
    right: 0;
    top: 5px;
  }
  .footer-top-title.footer-open:after {
    -webkit-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
            transform: rotate(-45deg);
  }
  .footer-top-title + ul {
    display: none;
  }
  .footer-top-title.footer-open + ul {
    display: block;
  }
}
@media (max-width: 768px) {
  .footer-top-services {
    margin-bottom: 44px;
  }
  .footer-top-services .footer-top-wrap {
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
}
@media (max-width: 768px) {
  .footer-top-wrap {
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    padding: 20px 15px;
    margin: 0px -20px;
  }
}
@media (max-width: 1170px) {
  .footer-top-about-wrapper {
    margin-bottom: 19px;
  }
}
@media (max-width: 1170px) and (max-width: 768px) {
  .footer-top-about-wrapper {
    margin-bottom: 0;
  }
}
@media (max-width: 1170px) {
  .footer-top-info-wrapper {
    margin-bottom: 16px;
  }
}
@media (max-width: 1170px) and (max-width: 768px) {
  .footer-top-info-wrapper {
    margin-bottom: 0;
  }
}
@media (max-width: 768px) {
  .footer-top-contact {
    text-align: center;
  }
}
.footer-top-pay {
  margin-bottom: 27px;
}
.footer-top-logo {
  margin-bottom: 7px;
  max-width: 150px;
}
.footer-top-logo img {
  max-height: 48px;
}
.footer-top-wrapper {
  margin-bottom: 27px;
}
@media (max-width: 768px) {
  .footer-top-wrapper {
    margin-bottom: 0;
  }
}
.footer-top-resource .footer-top-title {
  display: none;
}
@media (max-width: 768px) {
  .footer-top-resource .footer-top-title {
    display: block;
  }
  .footer-top-resource .footer-top-title + .footer-top-media-wrapper {
    display: none;
  }
  .footer-top-resource .footer-top-title.footer-open + .footer-top-media-wrapper {
    display: inline-block;
  }
  .footer-top-resource .footer-top-title + .footer-bottom-info {
    display: none;
  }
  .footer-top-resource .footer-top-title.footer-open + .footer-bottom-info {
    display: inline-block;
  }
}
@media (max-width: 1170px) {
  .footer-top-resource {
    margin-bottom: 20px;
  }
}
@media (max-width: 1170px) and (max-width: 768px) {
  .footer-top-resource {
    margin-bottom: 0;
  }
}
.footer-top-resource-sub {
  margin-bottom: 34px;
}
.footer-top-resource-wrapper {
  font-size: 0.875rem;
  opacity: 0.5;
}
@media (max-width: 768px) {
  .footer-top-resource-wrapper {
    margin-bottom: 40px;
  }
}
.footer-contacts {
  margin-bottom: 25px;
}
.footer-contacts-link {
  display: block;
  color: #fff;
  font-size: 1.375rem;
  font-weight: 600;
  margin-bottom: 12px;
}
@media (max-width: 1240px) and (min-width: 1170px) {
  .footer-contacts-link {
    font-size: 1.25rem;
  }
}
.footer-contacts-link:hover {
  text-decoration: underline;
}
.footer-contacts-link-img {
  display: inline-block;
  position: relative;
  bottom: -2px;
  margin-right: 10px;
  max-width: 20px;
}
.footer-street {
  max-width: 215px;
  opacity: 0.5;
  margin-bottom: 20px;
}
@media (max-width: 768px) {
  .footer-street {
    max-width: initial;
  }
}
.footer-clock {
  opacity: 0.5;
}
@media (max-width: 1170px) {
  .footer-clock {
    margin-bottom: 26px;
  }
}
.footer-bottom {
  padding-top: 31px;
}
@media (max-width: 768px) {
  .footer-bottom {
    padding-top: 0;
  }
}
@media (max-width: 768px) {
  .footer-bottom-links {
    margin-bottom: 40px;
    text-align: center;
  }
}
.footer-bottom-links-title {
  font-weight: 700;
  margin-bottom: 11px;
}
.footer-bottom-links-link {
  max-width: 40px;
  margin-right: 8px;
}
.footer-bottom-links-link img {
  max-height: 40px;
}
@media (max-width: 768px) {
  .footer-bottom-socials {
    text-align: center;
    margin-bottom: 40px;
  }
}
@media (max-width: 1170px) {
  .footer-bottom-socials-wrapper {
    margin-bottom: 20px;
  }
}
@media (max-width: 1170px) and (max-width: 768px) {
  .footer-bottom-socials-wrapper {
    text-align: center;
  }
}
.footer-bottom-socials-title {
  font-weight: 700;
  margin-bottom: 11px;
}
.footer-bottom-socials-link {
  position: relative;
  display: inline-block;
  border: 1px solid #fff;
  border-radius: 5px;
  margin-right: 8px;
  min-width: 40px;
  min-height: 40px;
  opacity: 0.5;
}
.footer-bottom-socials-link:hover {
  opacity: 1;
}
.footer-bottom-socials-link svg {
  position: absolute;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
  width: 24px;
  height: 24px;
  fill: #fff;
}
.footer-bottom-reit-title {
  font-weight: 700;
  margin-bottom: 11px;
}
.footer-bottom-reit-link {
  display: block;
  width: 190px;
  border: 1px solid #fff;
  border-radius: 4px;
  padding: 0px 12px;
  margin-bottom: 8px;
  height: 40px;
  line-height: 38px;
  vertical-align: middle;
}
@media (max-width: 1240px) and (min-width: 1170px) {
  .footer-bottom-reit-link {
    width: 175px;
  }
}
.footer-bottom-reit-link span {
  font-weight: 600;
  color: #fff;
}
.footer-bottom-reit-link .fix-map {
  top: 5px;
}
@media (max-width: 1170px) {
  .footer-bottom-reit-link {
    display: inline-block;
    margin-right: 16px;
  }
}
.footer-bottom-reit-map {
  display: inline-block;
  max-width: 100px;
  margin-right: 15px;
  position: relative;
  top: 3px;
}
@media (max-width: 1240px) and (min-width: 1170px) {
  .footer-bottom-reit-map {
    margin-right: 0;
  }
}
.footer-bottom-reit-map img {
  max-height: 24px;
}
.footer-bottom-reit-star {
  display: inline-block;
  max-width: 20px;
  position: relative;
  top: 2px;
}
.footer-bottom-reit-star img {
  max-height: 20px;
}
.footer-bottom-info {
  opacity: 0.5;
}
.footer-bottom-info-subtitle {
  margin-bottom: 60px;
}
@media (max-width: 1170px) {
  .footer-bottom-info-subtitle {
    margin-bottom: 20px;
  }
}
.footer-bottom-info-coopyright {
  font-size: 0.75rem;
}

.footer-top-wrap {
  margin-bottom: 27px;
}

@media (max-width: 1170px) {
  .col-none {
    display: none;
  }
}
@media (max-width: 768px) {
  .col-none-7 {
    display: none;
  }
}
p {
  padding: 5px 0px;
}

ul,
ol,
li {
  padding: 0px;
  margin: 0px;
  list-style: none;
}

h1,
h2,
h3,
h4,
h5,
.h1,
.h2,
.h3,
.h4,
.h5 {
  font-family: "Open Sans", sans-serif;
  color: #000;
  text-transform: none;
  line-height: 1.42;
  font-weight: 700;
}

h1,
.h1 {
  font-size: 2.5rem;
}

h2,
.h2 {
  font-size: 2rem;
}

h3,
.h3 {
  font-size: 1.375rem;
}

h4,
.h4 {
  font-size: 1.125rem;
}

h5,
.h5 {
  font-size: 1rem;
}

a {
  color: #1a66ae;
  text-decoration: none;
  outline: none;
}

b,
ul,
li {
  padding: 0;
  margin: 0;
}

img {
  max-width: 100%;
  height: auto;
}

button {
  cursor: pointer;
}

.ui-btn {
  display: inline-block;
  height: 48px;
  line-height: 46px;
  background: #fff;
  font-family: "Open Sans", sans-serif;
  font-weight: 600;
  font-size: 1rem;
  color: #000;
  text-align: center;
  cursor: pointer;
  border: 1px solid transparent;
  white-space: nowrap;
  overflow: hidden;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease;
  border-radius: 5px;
}
.ui-btn:hover {
  opacity: 0.8;
}

.page-stickers {
  margin-bottom: 13px;
  overflow-x: auto;
  white-space: nowrap;
}

/* хром, сафари */
.page-stickers::-webkit-scrollbar {
  width: 0;
}

/* ie 10+ */
.page-stickers {
  -ms-overflow-style: none;
}

/* фф (свойство больше не работает, других способов тоже нет)*/
.page-stickers {
  overflow: -moz-scrollbars-none;
}

.ui-sticker {
  display: inline-block;
  height: 32px;
  line-height: 30px;
  border: 1px solid transparent;
  background: transparent;
  padding: 0 16px;
  text-align: center;
  font-family: "Open Sans", sans-serif;
  font-size: 0.875rem;
  font-weight: 600;
  cursor: pointer;
  border-radius: 5px;
  margin-right: 8px;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease;
}

.sticker-yellow {
  color: #ffc100;
  border-color: #ffc100;
}
.sticker-yellow:hover {
  color: #fff;
  background: #ffc100;
}

.sticker-blue {
  color: #1a66ae;
  border-color: #1a66ae;
}
.sticker-blue:hover {
  color: #fff;
  background: #1a66ae;
}

.sticker-green {
  color: #559e53;
  border-color: #559e53;
}
.sticker-green:hover {
  color: #fff;
  background: #559e53;
}

.sticker-purple {
  color: #7d3e8c;
  border-color: #7d3e8c;
}
.sticker-purple:hover {
  color: #fff;
  background: #7d3e8c;
}

.sticker-red {
  color: #bc0000;
  border-color: #bc0000;
}
.sticker-red:hover {
  color: #fff;
  background: #bc0000;
}

.sticker-orange {
  color: #f28705;
  border-color: #f28705;
}
.sticker-orange:hover {
  color: #fff;
  background: #f28705;
}

.sticker-cyan {
  color: #83dbe4;
  border-color: #83dbe4;
}
.sticker-cyan:hover {
  color: #fff;
  background: #83dbe4;
}

[class*=-breadcrumbs] {
  text-align: left;
}
[class*=-breadcrumbs] a {
  font-size: 0.875rem;
  font-weight: 400;
  color: #000;
  display: inline-block;
  text-decoration: none;
}
[class*=-breadcrumbs] a:hover {
  text-decoration: underline;
}
[class*=-breadcrumbs] :last-child {
  opacity: 0.5;
  text-decoration: none;
}
[class*=-breadcrumbs] :last-child i {
  display: none;
}
[class*=-breadcrumbs] i {
  margin-left: 8px;
  margin-right: 8px;
  font-size: 10px;
}

.page-breadcrumbs {
  margin-bottom: 28px;
}
@media (max-width: 400px) {
  .page-breadcrumbs {
    margin-bottom: 24px;
  }
}

@media (max-width: 1024px) {
  .page-breadcrumbs {
    overflow-x: auto;
    white-space: nowrap;
  }
  .page-breadcrumbs i,
.page-breadcrumbs a {
    display: none;
  }
  .page-breadcrumbs a:nth-last-child(-n+3) {
    display: inline-block;
  }
  .page-breadcrumbs i:nth-last-child(-n+2) {
    display: inline-block;
  }
}
.page-breadcrumbs::-webkit-scrollbar {
  width: 0;
}

.page-breadcrumbs {
  -ms-overflow-style: none;
}

.page-breadcrumbs {
  overflow: -moz-scrollbars-none;
}

.ui-input {
  display: inline-block;
  height: 40px;
  line-height: 38px;
  background: #fff;
  padding: 0px 16px;
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
  font-size: 0.875rem;
  color: #000;
  border: 1px solid #808080;
  white-space: nowrap;
  overflow: hidden;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease;
  border-radius: 5px;
}
.ui-input:hover {
  opacity: 0.8;
}

[class*=-rating] {
  display: inline-block;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

[class*=-rating-value] {
  display: inline-block;
  line-height: 1;
  padding-left: 8px;
  font-family: "Open Sans", sans-serif;
  font-weight: 700;
  font-size: 1rem;
  color: rgba(0, 0, 0, 0.7);
}

[class*=-rating-body] {
  display: inline-block;
  position: relative;
  font-size: 1.5625rem;
}
[class*=-rating-body]::before {
  content: "★★★★★";
  display: block;
  color: #D3D3D3;
}

[class*=-rating-items] {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

[class*=-rating-item] {
  height: 100%;
  opacity: 0;
}

[class*=-rating-active] {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  overflow: hidden;
}
[class*=-rating-active]::before {
  content: "★★★★★";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  color: #FFC100;
}

.doc-link-download {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  border: 1px solid #D3D3D3;
  padding: 7px 16px;
  border-radius: 5px;
  width: 100%;
  height: 64px;
  margin-bottom: 16px;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease;
}
.doc-link-download-title {
  width: 70%;
  font-weight: 600;
  font-size: 0.875rem;
  color: #000;
}
@media (max-width: 1355px) {
  .doc-link-download-title {
    width: 213px;
  }
}
.doc-link-download-format {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.doc-link-download-format-info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
  margin-right: 16px;
}
@media (max-width: 1024px) {
  .doc-link-download-format-info {
    display: none;
  }
}
.doc-link-download-format-info span {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(0, 0, 0, 0.5);
}
.doc-link-download-format-icon {
  line-height: 0;
}
.doc-link-download:hover {
  border: 1px solid #fff;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
}

.product-item {
  display: inline-block;
  position: relative;
  padding: 16px 20px 24px 20px;
  margin-right: 16px;
  width: 100%;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
}
.product-item-links {
  margin-bottom: 10px;
}
.product-item-installments {
  display: inline-block;
  width: calc(100% - 50px);
  height: 24px;
  line-height: 24px;
  background-color: #2a4455;
  padding: 0 16px;
  margin-right: 8px;
  white-space: nowrap;
  overflow: hidden;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  color: #ffffff;
  border-radius: 5px;
}
.product-item-installments:hover {
  opacity: 0.5;
}
.product-item-open {
  display: inline-block;
  position: relative;
  height: 24px;
  border: 1px solid #d3d3d3;
  width: 36px;
  vertical-align: top;
  border-radius: 5px;
  white-space: nowrap;
}
.product-item-open:hover {
  opacity: 0.5;
}
.product-item-open img {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}
.product-item-img {
  display: block;
  text-align: center;
  margin-bottom: 45px;
  max-height: 200px;
}
.product-item-stats {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-bottom: 12px;
}
.product-item-rait {
  text-align: center;
  width: 64px;
  height: 24px;
  border: 1px solid #ffc100;
  border-radius: 5px;
}
.product-item-rait-span {
  font-weight: 600;
  font-size: 0.875rem;
}
.product-item-code {
  opacity: 0.5;
  font-size: 0.875rem;
  white-space: nowrap;
}
.product-item-code-number {
  font-weight: 600;
}
.product-item-title {
  display: inline-block;
  margin-bottom: 13px;
  line-height: 1.3;
  font-weight: 600;
  white-space: initial;
  color: #000;
}
.product-item-title:hover {
  text-decoration: underline;
}
.product-item-price {
  margin-bottom: 12px;
  font-size: 1.375rem;
  font-weight: 700;
}
.product-item-price-span {
  font-size: 1rem;
  font-weight: 400;
}
.product-item-price-old {
  display: none;
  font-size: 1rem;
  font-family: "Poppins", sans-serif;
  color: #808080;
  font-weight: 500;
}
.product-item-buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.product-item-btn {
  width: calc(100% - 98px);
  height: 40px;
  line-height: 40px;
  margin-right: 8px;
  text-align: center;
  color: #ffffff;
  background-color: #bc0000;
  border-radius: 5px;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  padding: 0 12px;
  overflow: hidden;
}
.product-item-btn-span {
  font-weight: 700;
}
.product-item-btn:hover {
  background-color: #991c12;
}
.product-item-btn img {
  display: none;
}
.product-item-like {
  position: relative;
  display: inline-block;
  width: 40px;
  height: 40px;
  margin-right: 20px;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  border-radius: 5px;
}
.product-item-like img {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}
.product-item-like:hover {
  opacity: 0.5;
}
.product-item-add {
  display: inline-block;
  margin-top: 5px;
}
.product-item-add:hover {
  opacity: 0.5;
}
.product-item-show {
  display: none;
  position: absolute;
  z-index: 2;
}
.product-item-show ul {
  position: relative;
  z-index: 11;
}
.product-item-show-link {
  display: inline-block;
  margin-bottom: 8px;
  height: 24px;
  line-height: 22px;
  padding: 0 16px;
  text-align: center;
  background-color: #ffffff;
  border-radius: 5px;
}
.product-item-description {
  display: none;
  width: 100%;
  position: absolute;
  left: 16px;
  top: 99%;
  background-color: #ffffff;
  z-index: 4;
  padding: 0 16px;
  margin: 0 -16px;
  -webkit-box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.1);
          box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.1);
  border-radius: 5px;
}
.product-item-info {
  margin-bottom: 5px;
  font-size: 0.875rem;
}
@media (max-width: 1024px) {
  .product-item-info {
    font-size: 0.75rem;
  }
}
.product-item-info-span {
  font-weight: 600;
}

.product-blue {
  color: #1a66ae;
  border: 1px solid #1a66ae;
}
.product-blue:hover {
  color: #ffffff;
  background-color: #1a66ae;
}

.product-green {
  color: #559e53;
  border: 1px solid #559e53;
}
.product-green:hover {
  color: #ffffff;
  background-color: #559e53;
}

.product-purple {
  color: #7d3e8c;
  border: 1px solid #7d3e8c;
}
.product-purple:hover {
  color: #ffffff;
  background-color: #7d3e8c;
}

.product-red {
  color: #bc0000;
  border: 1px solid #bc0000;
}
.product-red:hover {
  color: #ffffff;
  background-color: #bc0000;
}

.product-orange {
  color: #f28705;
  border: 1px solid #f28705;
}
.product-orange:hover {
  color: #ffffff;
  background-color: #f28705;
}

.product-cyan {
  color: #83dbe4;
  border: 1px solid #83dbe4;
}
.product-cyan:hover {
  color: #ffffff;
  background-color: #83dbe4;
}

.product-price {
  display: block;
}

.product-item-btn-span {
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.product-height:hover {
  height: 559px;
}
.product-height .product-item-description {
  top: 88%;
}

.product-height-auto {
  height: auto !important;
}
.product-height-auto:hover .product-item {
  margin-bottom: 70px;
}

.product-open .product-item-like {
  -webkit-box-shadow: none;
          box-shadow: none;
}
.product-open .product-item-show {
  display: block;
}
.product-open .product-item-img {
  opacity: 0.5;
}
.product-open .product-item-btn {
  background-color: #2a4455;
}
.product-open .product-item-btn:hover {
  background-color: #3f5766;
}
.product-open .product-item-price-old {
  display: inline;
}
.product-open .product-item-description {
  display: block;
  padding-bottom: 20px;
}
.product-open .product-item-open img {
  -webkit-transform: translate(-50%, -50%) rotate(180deg);
      -ms-transform: translate(-50%, -50%) rotate(180deg);
          transform: translate(-50%, -50%) rotate(180deg);
}

.product-sale .product-item-price {
  color: #bc0000;
}
.product-sale .product-item-price-old {
  display: inline-block;
}

.circle-info {
  display: inline-block;
  position: relative;
  z-index: 1;
  top: 2px;
  height: 16px;
  width: 16px;
  border: 1px solid #d3d3d3;
  border-radius: 5px;
  cursor: pointer;
}
.circle-info:hover {
  background-color: #d3d3d3;
}
.circle-info:hover .circle-info-svg {
  fill: #fff;
}
.circle-info-svg {
  position: absolute;
  width: 5px;
  height: 8px;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
  fill: #d3d3d3;
}
.circle-info-text {
  display: none;
  position: absolute;
  width: 318px;
  left: 23px;
  background: #ffffff;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  border-radius: 3px;
  padding: 17px 18px 19px 25px;
  font-size: 0.875rem;
  line-height: 1.3;
  font-weight: 400;
}
.circle-info:hover .circle-info-text {
  display: inline-block;
}

.btn-feedback {
  width: 200px;
  height: 48px;
  line-height: 48px;
  background: #f5f5f5;
  border-radius: 5px;
  font-weight: 600;
  text-align: center;
}

@media (max-width: 576px) {
  .col-0 {
    display: none;
  }
}
.card-sticky {
  display: none;
  position: fixed;
  background: #fff;
  width: 100%;
  z-index: 10;
  -webkit-box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
}
.card-sticky-wrapper {
  padding: 10px 0px;
}
.card-sticky-btn {
  width: 100%;
  background: #bc0000;
  color: #fff;
}
@media (max-width: 1024px) {
  .card-sticky-btn {
    font-size: 0;
  }
}
@media (max-width: 576px) {
  .card-sticky-btn {
    max-width: 116px;
  }
}
.card-sticky-btn-wrapper {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 576px) {
  .card-sticky-btn-wrapper {
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: end;
  }
}
.card-sticky-btn-img {
  display: none;
  max-width: 46px;
  line-height: 0;
  vertical-align: middle;
}
@media (max-width: 400px) {
  .card-sticky-btn-img {
    max-width: 36px;
  }
}
.card-sticky-btn-img img {
  max-height: 38px;
}
@media (max-width: 1024px) {
  .card-sticky-btn-img {
    display: inline-block;
  }
}
.card-sticky-item-img {
  max-width: 72px;
  margin-right: 24px;
}
.card-sticky-item-img img {
  max-height: 72px;
}
.card-sticky-item-title {
  font-size: 1.125rem;
  font-weight: 600;
  color: rgba(0, 0, 0, 0.7);
  margin-bottom: 4px;
}
@media (max-width: 1024px) {
  .card-sticky .card-item-wrap {
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}
@media (max-width: 576px) {
  .card-sticky .card-item-wrap {
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: start;
  }
}
@media (max-width: 1024px) {
  .card-sticky .card-item-rating {
    display: none;
  }
}
.card-sticky .card-item-price-currency {
  margin: 0;
}
@media (max-width: 1024px) {
  .card-sticky .card-item-price-currency {
    font-size: 1rem;
  }
}
@media (max-width: 400px) {
  .card-sticky .card-item-price-currency {
    font-size: 0.9375rem;
  }
}
@media (max-width: 400px) {
  .card-sticky .card-item-price-current {
    font-size: 1.5rem;
  }
}
.card-sticky .card-item-counter {
  margin-bottom: 0;
}
@media (max-width: 1024px) {
  .card-sticky .card-item-counter {
    display: none;
  }
}

.card-breackpoint-open {
  display: block;
}

.ui-ul {
  padding-left: 15px;
}
.ui-ul li {
  position: relative;
}
.ui-ul li:before {
  content: "";
  position: absolute;
  -webkit-transform: translate(0%, -50%);
      -ms-transform: translate(0%, -50%);
          transform: translate(0%, -50%);
  left: -15px;
  top: 50%;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: #ffc100;
}

.card-item {
  margin-bottom: 85px;
}
@media (max-width: 1024px) {
  .card-item {
    margin-bottom: 0;
  }
}
.card-item-txt {
  padding: 0 0 0 24px;
}
.card-item-headline {
  margin-bottom: 22px;
}
.card-item-headline-title {
  font-weight: 700;
  font-size: 2.5rem;
  color: #000000;
  margin-bottom: 7px;
  line-height: 1.36;
}
@media (max-width: 1024px) {
  .card-item-headline-title {
    font-size: 28px;
  }
}
@media (max-width: 600px) {
  .card-item-headline-title {
    font-size: 22px;
  }
}
.card-item-headline-code {
  display: none;
  color: rgba(0, 0, 0, 0.7);
  margin-bottom: 10px;
}
.card-item-headline-code span {
  font-weight: 600;
}
@media (max-width: 1024px) {
  .card-item-headline-code {
    display: block;
  }
}
.card-item-headline-links {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-line-pack: center;
      align-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 768px) {
  .card-item-headline-links {
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }
  .card-item-headline-links span {
    display: none;
  }
}
@media (max-width: 385px) {
  .card-item-headline-links .card-item-reviews {
    display: none;
  }
}
.card-item-reviews {
  font-weight: 400;
  font-size: 1rem;
  color: #1a66ae;
  margin-right: 25px;
  margin-left: 8px;
  line-height: 0;
}
.card-item-reviews:hover {
  opacity: 0.35;
}
.card-item-fav {
  display: inline-block;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-right: 25px;
  font-weight: 400;
  font-size: 1rem;
  color: #1a66ae;
}
.card-item-fav:hover {
  opacity: 0.35;
}
.card-item-fav img {
  position: relative;
  top: 4px;
  margin-right: 5px;
}
.card-item-comparison {
  display: inline-block;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  font-weight: 400;
  font-size: 1rem;
  color: #1a66ae;
}
.card-item-comparison:hover {
  opacity: 0.35;
}
.card-item-comparison img {
  position: relative;
  top: 4px;
  margin-right: 5px;
}
.card-item-controller {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}
@media (max-width: 385px) {
  .card-item-controller {
    margin-top: 10px;
  }
}
.card-item-about {
  padding: 24px 24px 48px 32px;
  border: 1px solid #d3d3d3;
  border-radius: 8px 8px 0px 0px;
  border-bottom: none;
}
@media (max-width: 1024px) {
  .card-item-about {
    padding: 0;
    border: none;
  }
}
@media (max-width: 1024px) {
  .card-item-about .col-xl-5:nth-child(2) {
    display: none;
  }
}
.card-item-slider {
  position: relative;
}
@media (max-width: 1170px) {
  .card-item-slider {
    margin-bottom: 20px;
  }
}
@media (max-width: 1024px) {
  .card-item-slider {
    margin-bottom: 0;
  }
}
.card-item-slider-el {
  max-width: 348px;
  margin: 0px auto;
  padding: 0 10px;
}
.card-item-slider-el .swiper.el {
  padding: 0 5px;
}
.card-item-slider-el .swiper-button-next,
.card-item-slider-el .swiper-button-prev {
  top: 92%;
  font-size: 20px;
  right: 0;
}
@media (max-width: 768px) {
  .card-item-slider-el .swiper-button-next,
.card-item-slider-el .swiper-button-prev {
    display: none;
  }
}
.card-item-slider-el .swiper-button-prev {
  left: 0;
}
@media (max-width: 768px) {
  .card-item-slider-el .swiper-button-prev {
    display: none;
  }
}
.card-item-slider-el .swiper-button-next:after {
  font-size: 25px;
  color: #071c28;
}
.card-item-slider-el .swiper-button-prev:after {
  font-size: 25px;
  color: #071c28;
}
.card-item-slider-el .swiper-slide {
  text-align: center;
}
.card-item-slider-el .swiper-slide:hover {
  border: 1px solid #2a4455;
  cursor: pointer;
}
.card-item-slider-el .swiper-slide {
  border: 1px solid #fff;
  border-radius: 5px;
  line-height: 0;
  padding: 5px;
}
.card-item-slider-el .swiper-slide-active {
  border: 1px solid #2a4455;
  border-radius: 5px;
}
.card-item-slider-el .swiper-wrapper {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}
@media (max-width: 768px) {
  .card-item-slider .card-item-slider-el {
    display: none;
  }
}
.card-item-slider-preview .swiper-button-next,
.card-item-slider-preview .swiper-button-prev {
  top: 40%;
  font-size: 20px;
  right: 0;
}
@media (max-width: 768px) {
  .card-item-slider-preview .swiper-button-next,
.card-item-slider-preview .swiper-button-prev {
    display: none;
  }
}
.card-item-slider-preview .swiper-button-prev {
  left: 0;
}
@media (max-width: 768px) {
  .card-item-slider-preview .swiper-button-prev {
    display: none;
  }
}
.card-item-slider-preview .swiper-button-next:after {
  font-size: 25px;
  color: #071c28;
}
.card-item-slider-preview .swiper-button-prev:after {
  font-size: 25px;
  color: #071c28;
}
.card-item-slider-preview .swiper-slide {
  text-align: center;
}
.card-item-slider-preview .swiper-slide img {
  padding: 30px;
}
.card-item-slider-preview .swiper-pagination {
  display: none;
}
@media (max-width: 768px) {
  .card-item-slider-preview .swiper-pagination {
    display: block;
  }
}
.card-item-slider-preview .swiper-pagination-bullet {
  width: var(--swiper-pagination-bullet-width, var(--swiper-pagination-bullet-size, 24px));
  height: var(--swiper-pagination-bullet-height, var(--swiper-pagination-bullet-size, 2px));
  border-radius: 2px;
}
.card-item-slider-preview .swiper-pagination-bullet-active {
  background-color: #2a4455;
}
.card-item-caption {
  font-weight: 700;
  font-size: 1.375rem;
  color: #000000;
  margin-bottom: 18px;
}
.card-item-specifications-desc {
  padding-bottom: 16px;
  border-bottom: 1px solid #d3d3d3;
  margin-bottom: 22px;
}
.card-item-specifications-desc .ui-btn {
  display: block;
  width: 100%;
  border: 1px solid #d3d3d3;
  border-radius: 5px;
  height: 40px;
  padding: 0 12px;
  line-height: 38px;
}
.card-item-specifications-desc .ui-btn:hover {
  border: 1px solid #fff;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
}
.card-item-specifications-txt {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 5px;
  font-weight: 400;
  font-size: 0.875rem;
  color: rgba(0, 0, 0, 0.7);
}
.card-item-specifications-txt:nth-last-child(2) {
  margin-bottom: 15px;
}
.card-item-specifications-txt:nth-last-child(-n+3) .card-item-specifications-subtitle {
  color: #1a66ae;
}
.card-item-specifications-caption {
  width: 62%;
}
.card-item-specifications-subtitle {
  width: 38%;
  font-weight: 600;
  font-size: 0.875rem;
  color: #000;
}
.card-item-services {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}
@media (max-width: 1024px) {
  .card-item-services {
    margin-top: 48px;
  }
}
.card-item-services-desc .ui-btn {
  width: 100%;
  border: 1px solid #d3d3d3;
  border-radius: 5px;
  height: 40px;
  padding: 9px;
  line-height: 0;
}
.card-item-services-desc .ui-btn:hover {
  border: 1px solid #fff;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
}
.card-item-services-txt {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-bottom: 5px;
  font-weight: 400;
  font-size: 0.875rem;
  color: rgba(0, 0, 0, 0.7);
}
.card-item-services-subtitle {
  font-weight: 600;
  font-size: 0.875rem;
  color: rgba(0, 0, 0, 0.7);
}
.card-item-services-content {
  margin-bottom: 16px;
  padding-bottom: 16px;
  border-bottom: 1px solid #d3d3d3;
}
.card-item-services-warranty {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-bottom: 19px;
}
@media (max-width: 360px) {
  .card-item-services-warranty {
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}
.card-item-services-warranty .txt {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.card-item-services-warranty .txt img {
  margin-right: 7px;
}
.card-item-services-warranty .txt span {
  font-size: 14px;
}
.card-item-services-warranty .txt span:nth-child(2) {
  margin-right: 5px;
}
.card-item-services-warranty .txt span:nth-child(3) {
  font-weight: 600;
}
.card-item-services-btn {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  gap: 8px;
}
.card-item-services-btn svg {
  width: 32px;
  height: 32px;
}
.card-item-services-btn span {
  font-size: 16px;
}
@media (max-width: 360px) {
  .card-item-services-btn span {
    font-size: 14px;
  }
}
.card-item-services-btn .services-btn {
  border: 1px solid #d3d3d3;
  color: black;
  padding: 12px 24px 12px 24px;
  width: 33%;
  background: #fff;
  border-radius: 5px;
  white-space: nowrap;
  -webkit-transition: all 0.5s ease-out;
  -o-transition: all 0.5s ease-out;
  transition: all 0.5s ease-out;
}
.card-item-services-btn .services-btn:hover {
  border: 1px solid #fff;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
}
.card-item-services-btn .services-btn:hover svg {
  -webkit-transition: all 0.5s ease-out;
  -o-transition: all 0.5s ease-out;
  transition: all 0.5s ease-out;
  fill: #2a4455;
}
.card-item-services-btn .services-btn:hover span {
  color: #2a4455;
}
.card-item-services-btn .services-btn svg {
  fill: #d3d3d3;
}
@media (max-width: 482px) {
  .card-item-services-btn .services-btn {
    width: 100%;
    max-width: 100%;
    margin-bottom: 12px;
  }
}
@media (max-width: 360px) {
  .card-item-services-btn .services-btn {
    padding: 15px;
  }
}
.card-item-services-btn .services-btn .img-btn .footer-bottom-socials-svg {
  width: 42px;
}
.card-item-more-info {
  border: 1px solid #d3d3d3;
  border-radius: 0px 0px 8px 8px;
  overflow: hidden;
}
@media (max-width: 1024px) {
  .card-item-more-info {
    display: none;
  }
}
.card-item-more-info .tabs-nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  border-bottom: 1px solid #d3d3d3;
}
@media (max-width: 1024px) {
  .card-item-more-info .tabs-nav {
    display: none;
  }
}
.card-item-more-info .tabs-nav li {
  display: block;
  float: left;
  padding: 0;
  list-style: none;
}
.card-item-more-info .tabs-nav a {
  display: block;
  padding: 15px 20px;
  font-size: 1rem;
  text-decoration: none;
  text-align: center;
  color: #999;
  font-weight: 600;
  font-size: 1.125rem;
  color: #000;
}
.card-item-more-info .tabs-nav a.active {
  border-bottom: 2px solid #2a4455;
  color: #2a4455;
}
@media (max-width: 1172px) {
  .card-item-more-info .tabs-nav a {
    padding: 15px 5px;
  }
}
@media (max-width: 1024px) {
  .card-item-more-info .tabs-item {
    display: none !important;
  }
}
.card-item-more-info .tabs-items .accordion-items-title {
  display: none;
}
@media (max-width: 1024px) {
  .card-item-more-info .tabs-items .accordion-items-title {
    display: block;
    width: 100%;
    text-align: center;
    height: 56px;
    padding: 16px 0;
    border: 1px solid #d3d3d3;
    border-radius: 10px;
  }
}
@media (max-width: 1024px) {
  .card-item-more-info .tabs-items .accordion-content {
    display: none;
  }
}
.card-item-more-info .tabs-items .accordion-content.active {
  display: block;
  padding: 24px;
}
.card-item-more-info .tabs-items .accordion-content.tab2 {
  padding: 0;
}
.card-item-more-info .tabs-items .table {
  table-layout: fixed;
  width: 100%;
  border: 0px;
  border-collapse: collapse;
}
.card-item-more-info .tabs-items .table.bottom td {
  padding: 5px 10px;
  text-align: left;
}
.card-item-more-info .tabs-items .table.bottom td:nth-child(2) {
  color: #000;
}
.card-item-more-info .tabs-items .table th {
  font-weight: bold;
  padding: 5px;
  text-align: start;
  padding-left: 32px;
}
.card-item-more-info .tabs-items .table td {
  padding: 14px 10px;
  text-align: left;
  font-size: 0.875rem;
}
.card-item-more-info .tabs-items .table td .tooltip {
  position: relative;
  display: inline-block;
  margin-left: 16px;
  cursor: pointer;
}
.card-item-more-info .tabs-items .table td .tooltip-box {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}
.card-item-more-info .tabs-items .table td .tooltip img:hover {
  opacity: 0.52;
}
.card-item-more-info .tabs-items .table td .tooltip .tooltiptext {
  visibility: hidden;
  width: 400px;
  background: #ffffff;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  color: #000;
  border-radius: 6px;
  padding: 20px 16px;
  position: absolute;
  z-index: 1;
  top: 135%;
  left: -290%;
  margin-left: -60px;
  opacity: 0;
  -webkit-transition: opacity 0.3s;
  -o-transition: opacity 0.3s;
  transition: opacity 0.3s;
}
.card-item-more-info .tabs-items .table td .tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}
.card-item-more-info .tabs-items .table td:nth-child(1) {
  padding: 14px 0 14px 32px;
  padding-left: 32px;
  color: rgba(0, 0, 0, 0.7);
}
.card-item-more-info .tabs-items .table td:nth-child(2) {
  color: #1a66ae;
}
.card-item-more-info .tabs-items tbody tr:nth-child(even) {
  background: #fff;
}
.card-item-more-info .tabs-items tbody tr:nth-child(odd) {
  background: #f5f5f5;
}
.card-item-more-info .tabs-item {
  padding: 32px 39px 32px 37px;
}
.card-item-more-info .tabs-item.table {
  padding: 30px 0 0 0;
}
.card-item-more-info .tabs-item.video {
  padding: 40px 16px;
}
.card-item-more-info .tabs-item.video .video-content {
  padding: 0 12px;
  margin: 0 12px;
}
.card-item-more-info .tabs-item.video .video-content-box {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}
@media (max-width: 600px) {
  .card-item-more-info .tabs-item.video .video-content-box {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
  .card-item-more-info .tabs-item.video .video-content-box .video-content {
    margin: 0 0 25px 0;
    padding: 0;
  }
}
.card-item-more-info .tabs-item.video p {
  font-weight: 600;
  font-size: 14px;
  color: rgba(0, 0, 0, 0.5);
}
.card-item-more-info .tabs-item-text {
  margin-bottom: 24px;
}
.card-item-more-info .tabs-item-title {
  font-weight: 600;
  margin-bottom: 2px;
}
.card-item-more-info .tabs-item-list {
  padding-left: 15px;
}
.card-item-more-info .tabs-item-list li {
  position: relative;
  margin-bottom: 2px;
}
.card-item-more-info .tabs-item-list li::before {
  display: inline-block;
  position: absolute;
  left: -15px;
  top: 9px;
  content: "";
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: #ffc100;
}
.card-item-more-info .doc {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
@media (max-width: 1170px) {
  .card-item-more-info .doc {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
  .card-item-more-info .doc-picture {
    margin-bottom: 20px;
  }
  .card-item-more-info .doc .col-7 {
    max-width: 100%;
  }
  .card-item-more-info .doc .col-5 {
    max-width: 100%;
  }
}
.card-item-more-info .doc-picture {
  text-align: center;
}
.card-item-more-info .doc-picture img {
  padding: 16px;
  border: 1px solid #d3d3d3;
  border-radius: 5px;
  height: auto;
}
.card-reviews {
  margin-bottom: 86px;
}
.card-reviews .card-item-rating {
  display: none;
}
.card-reviews .reviews.ui-btn.all {
  margin-right: 0;
}
.card-reviews-btn {
  line-height: 0;
}
.card-reviews .swiper-next,
.card-reviews .swiper-rtl .swiper-prev {
  width: 40px;
  height: 40px;
  border-radius: 10px;
  -webkit-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
  background-color: #fff;
  position: absolute;
  z-index: 999;
  top: 46%;
  right: 20px;
  /* padding: 10px; */
  text-align: center;
  padding: 10px 0;
}
.card-reviews .swiper-next::after,
.card-reviews .swiper-rtl .swiper-prev::after {
  content: "";
}
.card-reviews .swiper-next img,
.card-reviews .swiper-rtl .swiper-prev img {
  width: 8px;
  height: auto;
}
@media (max-width: 1024px) {
  .card-reviews .swiper-next,
.card-reviews .swiper-rtl .swiper-prev {
    display: none;
  }
}
.card-reviews .swiper-prev,
.card-reviews .swiper-rtl .swiper-next {
  width: 40px;
  height: 40px;
  border-radius: 10px;
  -webkit-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
  background-color: #fff;
  position: absolute;
  z-index: 999;
  top: 46%;
  left: 20px;
  /* padding: 10px; */
  text-align: center;
  padding: 10px 0;
}
.card-reviews .swiper-prev::after,
.card-reviews .swiper-rtl .swiper-next::after {
  content: "";
}
.card-reviews .swiper-prev img,
.card-reviews .swiper-rtl .swiper-next img {
  width: 8px;
  height: auto;
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
}
@media (max-width: 1024px) {
  .card-reviews .swiper-prev,
.card-reviews .swiper-rtl .swiper-next {
    display: none;
  }
}
.card-reviews .swiper.reviews {
  padding: 20px 10px;
}
@media (max-width: 1024px) {
  .card-reviews .swiper.reviews {
    overflow-x: auto;
    overflow-y: hidden;
    padding-right: 12px;
    padding-left: 12px;
  }
  .card-reviews .swiper.reviews::-webkit-scrollbar {
    opacity: 0;
  }
}
@media (max-width: 450px) {
  .card-reviews .swiper.reviews {
    padding: 0;
    padding-left: 15px;
  }
}
.card-reviews .swiper.reviews .swiper-button-disabled {
  opacity: 1;
  background-color: #f5f5f5;
  -webkit-box-shadow: none;
          box-shadow: none;
}
.card-reviews .swiper.reviews .swiper-button-disabled img {
  opacity: 0.35;
}
.card-reviews-headline {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-bottom: 4px;
}
@media (max-width: 600px) {
  .card-reviews-headline {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    margin-bottom: 32px;
  }
}
@media (max-width: 1024px) {
  .card-reviews .swiper-button-next {
    display: none;
  }
}
@media (max-width: 1024px) {
  .card-reviews .swiper-button-prev {
    display: none;
  }
}
.card-reviews-txt {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 600px) {
  .card-reviews-txt {
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }
}
.card-reviews-txt-title {
  margin-right: 32px;
  font-weight: 700;
  font-size: 32px;
  color: #000;
}
@media (max-width: 1024px) {
  .card-reviews-txt-title {
    font-size: 28px;
  }
}
@media (max-width: 600px) {
  .card-reviews-txt-title {
    font-size: 22px;
  }
}
@media (max-width: 335px) {
  .card-reviews-txt-title {
    font-size: 16px;
  }
}
.card-reviews-txt-title span {
  font-weight: 400;
  font-size: 18px;
  color: rgba(0, 0, 0, 0.5);
}
@media (max-width: 335px) {
  .card-reviews-txt-title span {
    font-size: 12px;
  }
}
@media (max-width: 335px) {
  .card-reviews-txt-title .card-item-rating-value {
    font-size: 12px;
  }
}
@media (max-width: 335px) {
  .card-reviews-txt .card-item-rating {
    padding-top: 0;
  }
}
.card-reviews .reviews.ui-btn {
  width: 200px;
  background: #2a4455;
  color: #fff;
  border-radius: 5px;
}
@media (max-width: 600px) {
  .card-reviews .reviews.ui-btn {
    margin-top: 26px;
    width: 100%;
  }
}
.card-reviews .reviews.ui-btn.all {
  background: #f5f5f5;
  color: #000;
}
@media (max-width: 1024px) {
  .card-reviews .reviews.ui-btn.all {
    display: block;
    margin: 16px auto;
  }
}
@media (max-width: 600px) {
  .card-reviews .reviews.ui-btn.all {
    width: 100%;
    margin-top: 0;
    margin-bottom: 0;
  }
}
.card-reviews .reviews.ui-btn:hover {
  opacity: 0.5;
}
.card-reviews-content {
  height: 100%;
  border-radius: 8px;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
}
.card-reviews-content-header {
  padding: 20px 24px;
  background: #f5f5f5;
}
.card-reviews-content-txt {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  margin-bottom: 5px;
}
.card-reviews-content-name {
  font-weight: 600;
  font-size: 18px;
  color: #000;
}
.card-reviews-content-data {
  font-weight: 400;
  font-size: 14px;
  color: rgba(0, 0, 0, 0.5);
}
.card-reviews-content-body {
  padding: 20px 24px;
}
.card-reviews-content-body a {
  color: #1a66ae;
  font-weight: 600;
}
.card-reviews-content-body a:hover {
  opacity: 0.35;
}
.card-reviews-content-text {
  margin-bottom: 18px;
}
.card-reviews-content-title {
  font-weight: 700;
  font-size: 14px;
}
.card-reviews-content-desc {
  font-weight: 400;
  font-size: 14px;
}

.card-info-media .tabs-nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  border-bottom: 1px solid #d3d3d3;
}
@media (max-width: 1024px) {
  .card-info-media .tabs-nav {
    display: none;
  }
}
.card-info-media .tabs-nav li {
  display: block;
  float: left;
  padding: 0;
  list-style: none;
}
.card-info-media .tabs-nav a {
  display: block;
  padding: 15px 20px;
  font-size: 1rem;
  text-decoration: none;
  text-align: center;
  color: #999;
  font-weight: 600;
  font-size: 1.125rem;
  color: #000;
}
.card-info-media .tabs-nav a.active {
  border-bottom: 2px solid #2a4455;
  color: #2a4455;
}
@media (max-width: 1172px) {
  .card-info-media .tabs-nav a {
    padding: 15px 5px;
  }
}
@media (max-width: 1024px) {
  .card-info-media .tabs-item {
    display: none !important;
  }
}
.card-info-media .tabs-items {
  border: 1px solid #d3d3d3;
  border-radius: 10px;
}
@media (max-width: 1024px) {
  .card-info-media .tabs-items {
    margin-bottom: 55px;
  }
}
.card-info-media .tabs-items .accordion:nth-last-child(-n+2) .accordion-items-title {
  border-radius: 0 0 10px 10px;
}
.card-info-media .tabs-items .accordion.tab4 .accordion-items-title {
  border-bottom: none;
}
.card-info-media .tabs-items .accordion-items-title {
  display: none;
  position: relative;
}
.card-info-media .tabs-items .accordion-items-title .btn-acc {
  position: absolute;
  right: 24px;
  top: 50%;
  -webkit-transform: translate(0, -50%);
      -ms-transform: translate(0, -50%);
          transform: translate(0, -50%);
}
@media (max-width: 1024px) {
  .card-info-media .tabs-items .accordion-items-title {
    display: block;
    width: 100%;
    text-align: center;
    height: 56px;
    padding: 16px 0;
    border-bottom: 1px solid #d3d3d3;
    font-weight: 600;
  }
}
.card-info-media .tabs-items .accordion-content {
  padding: 16px;
}
@media (max-width: 1024px) {
  .card-info-media .tabs-items .accordion-content {
    display: none;
  }
}
.card-info-media .tabs-items .accordion-content.active {
  display: block;
  padding: 24px;
  border-bottom: 1px solid #d3d3d3;
}
.card-info-media .tabs-items .accordion-content.tab2 {
  padding: 0;
}
.card-info-media .tabs-items .accordion-content .doc {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 680px) {
  .card-info-media .tabs-items .accordion-content .doc {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
  .card-info-media .tabs-items .accordion-content .doc-picture {
    max-width: 100%;
    text-align: center;
  }
  .card-info-media .tabs-items .accordion-content .doc-link {
    width: 100%;
  }
}
.card-info-media .tabs-items .accordion-content .video-content {
  padding: 0 12px;
  margin: 0 12px;
}
.card-info-media .tabs-items .accordion-content .video-content-box {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}
.card-info-media .tabs-items .accordion-content .video-content p {
  font-weight: 600;
  font-size: 14px;
  color: rgba(0, 0, 0, 0.5);
}
.card-info-media .tabs-items .table {
  table-layout: fixed;
  width: 100%;
  border: 0px;
  border-collapse: collapse;
}
.card-info-media .tabs-items .table.bottom td {
  padding: 5px 10px;
  text-align: left;
}
.card-info-media .tabs-items .table.bottom td:nth-child(2) {
  color: #000;
}
.card-info-media .tabs-items .table th {
  font-weight: bold;
  padding: 5px;
  text-align: start;
  padding-left: 32px;
}
.card-info-media .tabs-items .table td {
  padding: 12px 10px;
  text-align: left;
  font-size: 0.875rem;
}
@media (max-width: 650px) {
  .card-info-media .tabs-items .table td {
    display: block;
  }
  .card-info-media .tabs-items .table td:nth-child(1) {
    padding: 10px 0 0 32px;
  }
  .card-info-media .tabs-items .table td:nth-child(2) {
    padding: 0 0 10px 32px;
  }
}
.card-info-media .tabs-items .table td .tooltip {
  position: relative;
  display: inline-block;
  margin-left: 16px;
}
.card-info-media .tabs-items .table td .tooltip-box {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}
.card-info-media .tabs-items .table td .tooltip .circle-info-svg {
  position: absolute;
  width: 5px;
  height: 8px;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
  fill: #d3d3d3;
}
.card-info-media .tabs-items .table td .tooltip .tooltiptext {
  visibility: hidden;
  width: 400px;
  background: #ffffff;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  color: #000;
  border-radius: 6px;
  padding: 20px 16px;
  position: absolute;
  z-index: 1;
  top: 135%;
  left: -290%;
  margin-left: -130px;
  opacity: 0;
  -webkit-transition: opacity 0.3s;
  -o-transition: opacity 0.3s;
  transition: opacity 0.3s;
}
.card-info-media .tabs-items .table td .tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}
.card-info-media .tabs-items .table td:nth-child(1) {
  padding-left: 32px;
  color: rgba(0, 0, 0, 0.7);
}
@media (max-width: 650px) {
  .card-info-media .tabs-items .table td:nth-child(2) {
    padding-left: 32px;
  }
}
.card-info-media .tabs-items .table td:nth-child(2) {
  color: #1a66ae;
}
.card-info-media .tabs-items .table tbody tr:nth-child(even) {
  background: #fff;
}
.card-info-media .tabs-items .table tbody tr:nth-child(odd) {
  background: #f5f5f5;
}
.card-info-media .tabs-item {
  padding: 32px 39px 32px 37px;
}
.card-info-media .tabs-item.table {
  padding: 30px 0 0 0;
}
.card-info-media .tabs-item-text {
  margin-bottom: 24px;
}
.card-info-media .tabs-item-title {
  font-weight: 600;
  margin-bottom: 2px;
}
.card-info-media .tabs-item-list {
  padding-left: 15px;
}
.card-info-media .tabs-item-list li {
  position: relative;
  margin-bottom: 2px;
}
.card-info-media .tabs-item-list li::before {
  display: inline-block;
  position: absolute;
  left: -15px;
  top: 9px;
  content: "";
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: #ffc100;
}

.popup-youtube {
  position: relative;
  display: inline-block;
}
.popup-youtube-btn {
  position: absolute;
  display: inline-block;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
  background: #bc0000;
  border-radius: 8px;
  width: 124px;
  height: 64px;
}
.popup-youtube-btn img {
  position: absolute;
  max-height: 32px;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
}

.popup-youtube {
  position: relative;
  display: inline-block;
  line-height: 0;
  border-radius: 8px;
  overflow: hidden;
}
.popup-youtube-wrapper {
  margin-bottom: 22px;
}
.popup-youtube-btn {
  position: absolute;
  display: inline-block;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
  background: #bc0000;
  border-radius: 8px;
  width: 124px;
  height: 64px;
}
.popup-youtube-btn img {
  position: absolute;
  max-height: 32px;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
}
.popup-youtube-two .popup-youtube-btn {
  width: 80px;
  height: 40px;
}
.popup-youtube-two .popup-youtube-btn img {
  max-height: 20px;
}

.popup-rev.mfp-image-holder .mfp-close,
.mfp-iframe-holder .mfp-close {
  right: 12px;
  text-align: initial;
  padding-right: 0;
  width: initial;
}

.mfp-iframe-holder .mfp-close {
  top: 0;
}

@media (min-width: 300px) {
  .col-video-300 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 312px;
        flex: 0 0 312px;
    max-width: 312px;
  }
}
.catalog .card-interest-wrap {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(2, 1fr);
  -webkit-column-gap: 24px;
     -moz-column-gap: 24px;
          column-gap: 24px;
}
@media (max-width: 1024px) {
  .catalog .card-interest-wrap {
    margin-right: -15px;
    padding-right: 15px;
    overflow-x: auto;
  }
  .catalog .card-interest-wrap .row:first-child {
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
  }
}
.catalog .card-interest-item {
  width: 200px;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  text-align: center;
  padding: 25px 18px;
  overflow: hidden;
}
.catalog .card-interest-item-img {
  min-width: initial;
  max-width: 95px;
  margin-right: 0;
  margin-bottom: 10px;
}
.catalog .card-interest-item:hover .card-interest-item-txt {
  color: #2a4455;
}
.catalog .card-interest-title {
  font-size: 2.5rem;
}
@media (max-width: 650px) {
  .catalog .card-interest-title {
    font-size: 2rem;
  }
}
@media (max-width: 450px) {
  .catalog .card-interest-title {
    font-size: 1.375rem;
  }
}
.catalog .popup-youtube-wrapper p {
  font-size: 0.875rem;
  font-weight: 600;
  color: rgba(0, 0, 0, 0.5);
}
.catalog-stickers {
  margin-bottom: 55px;
}
.catalog-stickers-wrap {
  display: block;
}
.catalog-stickers-wrap a {
  color: #000;
}
@media (max-width: 576px) {
  .catalog-stickers-wrap {
    white-space: nowrap;
    overflow-x: auto;
    margin-right: -15px;
    padding-right: 15px;
  }
}
.catalog-stickers .ui-sticker {
  border: 1px solid #d3d3d3;
  font-weight: 600;
  margin-bottom: 8px;
  white-space: nowrap;
}
.catalog-stickers .ui-sticker:hover {
  border: 1px solid #2a4455;
  color: #2a4455;
}
.catalog-stickers-btn {
  border: 1px solid #d3d3d3;
  margin-right: 0px;
}
.catalog-stickers-btn-text {
  display: inline-block;
}
.catalog-stickers-btn-img {
  display: inline-block;
  margin-right: 8px;
  max-width: 10px;
}
.catalog-stickers-btn-img img {
  max-height: 10px;
}
@media (max-width: 576px) {
  .catalog-stickers .sticker_item {
    display: none;
  }
}
.catalog-products {
  margin-bottom: 46px;
}
@media (max-width: 576px) {
  .catalog-products {
    margin-bottom: 40px;
  }
}
.catalog-products-title {
  margin-bottom: 22px;
  font-size: 2rem;
  font-weight: 700;
}
@media (max-width: 576px) {
  .catalog-products-title {
    font-size: 1.75rem;
  }
}
.catalog-products-stickers .ui-sticker {
  background-color: #f5f5f5;
  border: 1px solid #ffffff00;
}
@media (max-width: 1024px) {
  .catalog-products-wrap {
    display: none;
  }
}
.catalog-products-banner {
  border-radius: 8px;
  overflow: hidden;
  margin-bottom: 31px;
}
.catalog-products-search {
  width: 100%;
  padding: 0px 5px;
  background: #f5f5f5;
  height: 56px;
  line-height: 56px;
  text-align: center;
  border-radius: 8px;
  font-weight: 600;
  color: #848484;
  margin-bottom: 33px;
}
.catalog-products-search span {
  color: #000;
}
.catalog-products-field {
  margin-bottom: 33px;
}
.catalog-products-field-title {
  font-weight: 600;
  font-size: 0.875rem;
  margin-bottom: 12px;
}
.catalog-products-field-container {
  margin-bottom: 16px;
}
.catalog-products-field-label {
  display: block;
  margin-bottom: 12px;
  font-size: 0.875rem;
  font-weight: 600;
}
.catalog-products-field-input {
  border: 1px solid #d3d3d3;
  border-radius: 5px;
  height: 40px;
  padding: 0px 16px;
  color: #d3d3d3;
  -moz-appearance: textfield;
}
.catalog-products-field-input::-webkit-input-placeholder {
  color: #d3d3d3;
}
.catalog-products-field-input::-moz-placeholder {
  color: #d3d3d3;
}
.catalog-products-field-input:-ms-input-placeholder {
  color: #d3d3d3;
}
.catalog-products-field-input::-ms-input-placeholder {
  color: #d3d3d3;
}
.catalog-products-field-input::placeholder {
  color: #d3d3d3;
}
.catalog-products-field-checkbox {
  border: 1px solid #848484;
  border-radius: 3px;
}
.catalog-products-field-btn {
  width: 100%;
  font-size: 0.875rem;
  height: 32px;
  line-height: 32px;
  background: #f5f5f5;
}
.catalog-products-field-text {
  display: inline-block;
}
.catalog-products-field-img {
  display: inline-block;
  margin-right: 8px;
  height: 12px;
  width: 12px;
  max-width: 12px;
  background-image: url(.././images/icons/green-cross.svg);
  background-repeat: no-repeat;
  background-position: center;
}
.catalog-products-slider {
  height: 2px;
  border-radius: 5px;
  background: #d3d3d3;
  position: relative;
}
.catalog-products-slider-progress {
  height: 2px;
  position: absolute;
  left: 25%;
  right: 25%;
  border-radius: 5px;
  background: #071c28;
}
.catalog-products-range {
  position: relative;
}
.catalog-products-range-input {
  position: relative;
  top: -4px;
  height: 2px;
  width: 100%;
  pointer-events: none;
  background: none;
  -webkit-appearance: none;
}
.catalog-products-bar {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-bottom: 35px;
}
.catalog-products-bar .catalog-products-filter-filters {
  display: none;
}
@media (max-width: 1024px) {
  .catalog-products-bar .catalog-products-filter-txt {
    display: none;
  }
  .catalog-products-bar .catalog-products-filter-section {
    display: none;
  }
  .catalog-products-bar .catalog-products-filter-filters {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}
.catalog-products-filter {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 430px) {
  .catalog-products-filter img {
    display: none;
  }
}
.catalog-products-filter .catalog-products-filter-popular {
  display: inline-block;
  position: relative;
  margin-right: 15px;
  padding-right: 35px;
  outline: none;
  border: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  color: #000000a8;
  font-size: 1rem;
  cursor: pointer;
  background: url("../images/icons/catalog-products-arrows.svg") no-repeat right;
  background-position: right 2px center;
}
.catalog-products-filter .catalog-products-filter-popular:hover {
  opacity: 0.7;
}
@media (max-width: 500px) {
  .catalog-products-filter .catalog-products-filter-popular {
    margin-right: 0;
  }
}
.catalog-products-filter-section {
  margin-bottom: -4px;
  border: none;
}
.catalog-products-filter-filters {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  font-weight: 600;
  cursor: pointer;
  color: #000;
}
.catalog-products-filter-filters img {
  margin-right: 12px;
}
.catalog-products-filter-filters:hover {
  opacity: 0.5;
}
.catalog-products-filter img {
  margin-left: 20px;
  cursor: pointer;
}
.catalog-products-filter img:hover {
  opacity: 0.5;
}
.catalog-products-filter .filter-img {
  margin-left: 0;
}
.catalog-products-pagintaion {
  margin-bottom: 45px;
}
.catalog-products-pagintaion-more {
  display: inline-block;
  width: 100%;
  height: 48px;
  line-height: 48px;
  text-align: center;
  color: #000000;
  background-color: #f5f5f5;
  border-radius: 5px;
  margin-bottom: 30px;
}
.catalog-products-pagintaion-more:hover {
  opacity: 0.5;
}
.catalog-products-pagintaion-btns {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}
.catalog-products-pagintaion-btns img {
  cursor: pointer;
}
.catalog-products-pagintaion-btns img:hover {
  opacity: 0.5;
}
.catalog-products-pagintaion-btns img:first-child {
  margin-right: 16px;
}
.catalog-products-pagintaion-btns img:last-child {
  margin-left: 16px;
}
.catalog-products-pagintaion-btn {
  width: 40px;
  height: 40px;
  margin-right: 8px;
  line-height: 40px;
  border-radius: 5px;
  text-align: center;
  color: #000;
}
.catalog-products-pagintaion-btn:hover {
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
}
.catalog-products-pagintaion-dots {
  position: relative;
  display: inline-block;
  height: 40px;
  width: 40px;
  font-weight: 600;
  margin-right: 16px;
}
.catalog-products-pagintaion-dots .pagination-dots {
  content: "";
  position: absolute;
  width: 4px;
  height: 4px;
  background-color: #000000;
  border-radius: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
}
.catalog-products-pagintaion-dots .pagination-dots::before, .catalog-products-pagintaion-dots .pagination-dots::after {
  content: "";
  position: absolute;
  width: 4px;
  height: 4px;
  background-color: #000000;
  border-radius: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
}
.catalog-products-pagintaion-dots .pagination-dots::before {
  left: 14px;
}
.catalog-products-pagintaion-dots .pagination-dots::after {
  left: -10px;
}
.catalog-products-btn {
  width: 100%;
  border: 1px solid #d3d3d3;
  height: 40px;
  line-height: 38px;
  margin-bottom: 8px;
}
.catalog-products-reniev {
  height: 56px;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
}
.catalog-products-reniev-svg {
  position: relative;
  top: 3px;
  width: 26px;
  height: 22px;
  fill: #d3d3d3;
}
.catalog-products-reniev .calculator-btn {
  line-height: 56px;
  height: 100%;
  padding: 0 5px;
  width: 100%;
  background: #fff;
  color: #000;
  border-right: 1px solid #f5f5f5;
  font-weight: 400;
}
.catalog-products-reniev .calculator-btn span {
  font-weight: 600;
}
.catalog-products-reniev .calculator-reload {
  background: #fff;
  color: #000;
  height: 100%;
  -o-text-overflow: initial;
     text-overflow: initial;
}
.catalog-products .product-item {
  width: 100%;
  height: calc(100% - 24px);
  margin-bottom: 24px;
}
.catalog-info {
  margin-bottom: 54px;
}
.catalog-info-title {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 21px;
}
.catalog-info-text {
  margin-bottom: 18px;
}
.catalog-info-subtitle {
  font-weight: 700;
  margin-bottom: 2px;
}
.catalog-info-btn {
  height: 35px;
  line-height: 33px;
  padding: 0px 16px;
}
.catalog-info-list {
  padding-left: 15px;
  margin-bottom: 27px;
}
.catalog-info-list li {
  position: relative;
  margin-bottom: 2px;
}
.catalog-info-list li::before {
  content: "";
  position: absolute;
  left: -15px;
  top: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: #ffc100;
}
.catalog-info-list-hidden {
  display: none;
}
.catalog-question-and-acticles {
  margin-bottom: 60px;
}
@media (max-width: 1024px) {
  .catalog-question {
    margin-bottom: 48px;
  }
}
.catalog-question-title {
  margin-bottom: 26px;
  font-weight: 700;
  font-size: 2rem;
}
.catalog-question-item {
  margin-bottom: 16px;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
}
.catalog-question-item-title {
  padding: 17px 0px;
  background: #f5f5f5;
  padding-left: 56px;
  font-weight: 600;
  position: relative;
  border-radius: 8px;
}
.catalog-question-item-title .question-x {
  position: absolute;
  display: inline-block;
  -webkit-transform: translate(0%, -50%);
      -ms-transform: translate(0%, -50%);
          transform: translate(0%, -50%);
  top: 50%;
  left: 24px;
  width: 16px;
  height: 16px;
}
.catalog-question-item-title .question-x:before, .catalog-question-item-title .question-x:after {
  position: absolute;
  left: 8px;
  content: " ";
  height: 16px;
  width: 2px;
  background-color: #ffc100;
  border-radius: 2px;
}
.catalog-question-item-title .question-x:before {
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
}
.catalog-question-item-title .question-x:after {
  -webkit-transform: rotate(90deg);
      -ms-transform: rotate(90deg);
          transform: rotate(90deg);
}
.catalog-question-item-text {
  display: none;
  padding: 15px 16px 27px 0px;
  padding-left: 56px;
}
.catalog-video {
  margin-bottom: 85px;
}
@media (max-width: 1024px) {
  .catalog-video-wrap {
    margin-right: -20px;
    padding-right: 12px;
  }
}
@media (max-width: 1024px) {
  .catalog-video .row {
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    overflow-x: auto;
  }
}
.catalog-video .row::-webkit-scrollbar {
  width: 0;
}
.catalog-video .row {
  -ms-overflow-style: none;
}
.catalog-video .row {
  overflow: -moz-scrollbars-none;
}
.catalog-video-item {
  margin-bottom: 24px;
}
@media (max-width: 576px) {
  .catalog-video-item {
    text-align: center;
  }
}
.catalog-video-item-preview {
  border-radius: 8px;
  overflow: hidden;
  margin-bottom: 9px;
  line-height: 0;
}
.catalog-video-item-preview img {
  max-height: 176px;
}
.catalog-video-item-text {
  color: rgba(0, 0, 0, 0.5);
  font-weight: 600;
  font-size: 0.875rem;
}
.catalog-brands-header {
  margin-bottom: 24px;
}
.catalog-brands-main {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(2, 1fr);
  grid-gap: 24px;
}
@media (max-width: 1024px) {
  .catalog-brands-main {
    margin-right: -15px;
    padding-right: 15px;
    overflow-x: auto;
  }
}
.catalog-brands-title {
  display: inline-block;
  font-weight: 700;
  font-size: 2rem;
}
@media (max-width: 576px) {
  .catalog-brands-title {
    font-size: 1.375rem;
  }
}
.catalog-brands-btn {
  display: inline-block;
  color: #000;
}
@media (max-width: 450px) {
  .catalog-brands-btn {
    width: 100%;
  }
}
@media (max-width: 450px) {
  .catalog-brands .feedback_link {
    margin-bottom: 56px;
  }
}
.catalog-brands-item {
  display: block;
  width: 200px;
  height: calc(100% - 16px);
  padding: 16px 30px;
  margin-bottom: 16px;
  border-radius: 8px;
  -webkit-transition: 0.3s ease all;
  -o-transition: 0.3s ease all;
  transition: 0.3s ease all;
}
.catalog-brands-item:hover {
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
}
.catalog-brands-item-img {
  max-width: 140px;
}
.catalog-brands-item-img img {
  max-height: 48px;
}
.catalog-articles-title {
  margin-bottom: 24px;
}
.catalog-articles-item {
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  overflow: hidden;
}
.catalog-articles-item-img {
  line-height: 0;
  margin-bottom: 17px;
}
.catalog-articles-item-img img {
  max-height: 192px;
}
.catalog-articles-item-content {
  padding: 0px 24px 20px 24px;
}
.catalog-articles-item-date {
  font-size: 0.875rem;
  color: rgba(0, 0, 0, 0.5);
  margin-bottom: 11px;
}
.catalog-articles-item-title {
  font-weight: 700;
  margin-bottom: 4px;
}
.catalog-articles-item-text {
  font-size: 0.875rem;
  margin-bottom: 17px;
}
.catalog-articles-item-link {
  font-weight: 600;
  color: #1a66ae;
}
.catalog-articles-item-link:hover {
  text-decoration: underline;
}
.catalog .checkbox {
  position: relative;
  margin-bottom: 10px;
}
.catalog .checkbox-input {
  display: none;
}
.catalog .checkbox-input:checked + .checkbox-label::before {
  background-color: #071c28;
  border-radius: 5px;
}
.catalog .checkbox-input:checked + .checkbox-label::after {
  opacity: 1;
}
.catalog .checkbox-label {
  display: inline-block;
  padding-left: 28px;
  font-weight: 300;
  cursor: pointer;
  font-size: 0.875rem;
}
.catalog .checkbox-label::before {
  content: "";
  display: block;
  width: 16px;
  height: 16px;
  border: 1px solid #e5edf7;
  background-color: #ffffff;
  border-radius: 3px;
  cursor: pointer;
  overflow: hidden;
  position: absolute;
  top: 2px;
  left: 0;
  z-index: 1;
}
.catalog .checkbox-label::after {
  content: "";
  display: block;
  width: 18px;
  height: 18px;
  background: url("../images/icons/checkbox-arrow.svg") no-repeat;
  background-size: 10px 8px;
  background-position: center;
  opacity: 0;
  cursor: pointer;
  border-radius: 5px;
  position: absolute;
  top: 1px;
  left: 0;
  z-index: 2;
}
.catalog .contact {
  padding: 64px 0px;
  background: #f5f5f5;
}
.catalog .contact-item {
  height: calc(100% - 20px);
  margin-bottom: 20px;
  position: relative;
  overflow: hidden;
  background: #ffffff;
  padding: 35px;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  z-index: 1;
}
@media (max-width: 1024px) {
  .catalog .contact-item .main-search-form {
    display: block;
  }
}
.catalog .contact-item-title {
  font-weight: 700;
  font-size: 1.375rem;
  margin-bottom: 9px;
  max-width: 375px;
}
.catalog .contact-item-title-mail {
  margin-bottom: 27px;
}
.catalog .contact-item-text {
  font-size: 1rem;
  color: #848484;
  margin-bottom: 27px;
}
.catalog .contact-item-info {
  color: rgba(0, 0, 0, 0.5);
  font-size: 0.875rem;
}
.catalog .contact-item-info a {
  color: #1a66ae;
}
.catalog .contact-item-info a:hover {
  text-decoration: underline;
}
.catalog .contact-item-bg {
  position: absolute;
  right: -4px;
  bottom: -6px;
  z-index: -1;
}
@media (max-width: 680px) {
  .catalog .contact-item-bg {
    display: none;
  }
}
.catalog .contact .main-search-form {
  max-width: 352px;
  margin-bottom: 17px;
}
.catalog .contact .main-search-btn {
  background: #bc0000;
}

.calculator {
  padding-top: 54px;
  padding-bottom: 10px;
  background: #f5f5f5;
  margin-bottom: 64px;
}
.calculator-title {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 50px;
}
@media (max-width: 576px) {
  .calculator-title {
    font-size: 1.375rem;
    margin-bottom: 34px;
    text-align: center;
  }
}
.calculator-title span {
  color: #1a66ae;
}
.calculator-counter {
  margin-bottom: 45px;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: calc(100% - 45px);
}
@media (max-width: 576px) {
  .calculator-counter {
    height: calc(100% - 20px);
    margin-bottom: 20px;
  }
}
.calculator-counter-title {
  font-family: "Poppins", sans-serif;
  font-size: 1.125rem;
  font-weight: 600;
  margin-bottom: 8px;
}
.calculator-counter-text {
  margin-bottom: 21px;
}
.calculator-counter-field input {
  border: 1px solid #d3d3d3;
  border-radius: 5px;
  height: 40px;
  width: 144px;
  padding: 0px 16px;
}
.calculator-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}
@media (max-width: 1024px) {
  .calculator-wrapper {
    margin-bottom: 32px;
  }
}
.calculator-total {
  font-size: 5rem;
  font-weight: 700;
  margin-bottom: 24px;
}
.calculator-total-subtext {
  font-size: 1.125rem;
  position: relative;
  right: 12px;
}
.calculator-btn {
  color: #fff;
  font-weight: 600;
  border-radius: 0;
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
  padding: 0px 74px;
  background: #2a4455;
}
.calculator-btn-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.calculator-reload {
  background: #2a4455;
  border-radius: 0;
  border-left: 1px solid rgba(255, 255, 255, 0.5);
  border-top-right-radius: 8px;
  border-bottom-right-radius: 8px;
  padding: 0 15px;
}
.calculator-reload-img {
  max-width: 26px;
  display: inline-block;
  vertical-align: middle;
}
.calculator-reload-img-svg {
  position: relative;
  top: 3px;
  fill: #fff;
  width: 26px;
  height: 22px;
}

.sticker-hidden {
  display: none;
}

.sticker-hidden-open {
  display: inline-block;
}

.sticker-hidden-openB {
  display: block;
}

.catalog-products-price-input {
  width: 100%;
  gap: 8px;
  margin-bottom: 30px;
}

.catalog-products-price-input .catalog-products-price-field {
  display: inline-block;
  height: 40px;
}

.catalog-products-price-field input {
  width: 100%;
  height: 100%;
  padding: 0px 16px;
  outline: none;
  font-size: 19px;
  border-radius: 5px;
  border: 1px solid #d3d3d3;
  color: #d3d3d3;
  -moz-appearance: textfield;
}

input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
}

.catalog-products-slider .progress {
  height: 100%;
  left: 0;
  right: 0;
  position: absolute;
  border-radius: 5px;
  background: #071c28;
}

.catalog-products-range-input input {
  position: absolute;
  width: 100%;
  height: 5px;
  top: 1px;
  padding: 0;
  margin: 0;
  background: none;
  pointer-events: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

input[type=range]::-webkit-slider-thumb {
  height: 17px;
  width: 17px;
  border-radius: 50%;
  background: #071c28;
  pointer-events: auto;
  -webkit-appearance: none;
  -webkit-box-shadow: 0 0 6px rgba(0, 0, 0, 0.05);
          box-shadow: 0 0 6px rgba(0, 0, 0, 0.05);
}

input[type=range]::-moz-range-thumb {
  height: 17px;
  width: 17px;
  border: none;
  border-radius: 50%;
  background: #071c28;
  pointer-events: auto;
  -moz-appearance: none;
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.05);
}

.checkbox-hide {
  display: none;
}

.checkbox-on {
  display: inline-block;
}

.sticker-hidden-open-info {
  display: block;
}

.catalog-question-toggle .catalog-question-item-text {
  display: inline-block;
}
.catalog-question-toggle .question-x::before {
  -webkit-transform: rotate(90deg);
      -ms-transform: rotate(90deg);
          transform: rotate(90deg);
}

.catalog-search-form span.error {
  position: absolute;
  left: 0;
  bottom: -15px;
  color: #bc0000;
  font-size: 0.75rem;
}

.range-slider {
  position: relative;
}

.irs--round {
  height: initial;
}

.irs--round .irs-bar {
  top: 0;
}

.irs--round .irs-line {
  top: -1px;
  height: 2px;
}

.irs--round .irs-from,
.irs--round .irs-to,
.irs--round .irs-single {
  display: none;
}

.irs--round .irs-min,
.irs--round .irs-max {
  display: none;
}

.irs--round .irs-handle {
  background: #071c28;
  border: 4px solid #071c28;
  height: 16px;
  width: 16px;
  top: -7px;
}
.irs--round .irs-handle:hover {
  background: #071c28;
}

.irs--round .irs-handle.state_hover {
  background: #071c28;
}

.irs--round .irs-bar {
  background-color: #071c28;
  height: 2px;
}

@media (max-width: 1024px) {
  .catalog-products-grid .product-item-description {
    display: inline-block;
  }
  .catalog-products-grid .product-item-rait {
    display: none;
  }
  .catalog-products-grid .product-item-open {
    display: none;
  }
  .catalog-products-grid .product-item-img {
    margin-right: 18px;
    margin-bottom: 6px;
  }
  .catalog-products-grid .product-item-title {
    font-weight: 700;
  }
  .catalog-products-grid .product-item-btn {
    width: 84px;
  }
  .catalog-products-grid .product-item-btn img {
    display: inline-block;
    margin-top: 5px;
  }
  .catalog-products-grid .product-item-btn-span {
    display: none;
  }
  .catalog-products-grid .product-item-info {
    font-size: 14px;
  }
  .catalog-products-grid .product-item-info-adaptive {
    display: none;
  }
}
@media (max-width: 1024px) and (max-width: 1024px) {
  .catalog-products-grid .product-item-info-adaptive {
    display: block;
  }
}
@media (max-width: 1024px) {
  .catalog-products-grid .product-item-installments {
    white-space: nowrap;
    overflow: hidden;
    width: 90%;
    -o-text-overflow: ellipsis;
       text-overflow: ellipsis;
  }
}
@media (max-width: 1024px) {
  .catalog-products-grid .product-item-description {
    -webkit-box-shadow: none;
            box-shadow: none;
    position: relative;
    top: 0;
    left: 0;
  }
}
@media (max-width: 1024px) {
  .catalog-products-grid .product-img {
    width: 30% !important;
  }
}
@media (max-width: 1024px) and (max-width: 1300px) {
  .catalog-products-grid .product-item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    max-width: 100%;
  }
}
@media (max-width: 1024px) and (max-width: 1024px) {
  .catalog-products-grid .product-img {
    width: 27%;
    margin-right: 18px;
  }
  .catalog-products-grid .product-img .product-item-open {
    display: none;
  }
  .catalog-products-grid .product-img .product-item-rait {
    display: none;
  }
  .catalog-products-grid .product-img .product-item-installments {
    overflow: hidden;
    -o-text-overflow: ellipsis;
       text-overflow: ellipsis;
  }
  .catalog-products-grid .product-img .product-item-title {
    font-weight: 700;
  }
  .catalog-products-grid .product-img .product-item-img {
    margin-bottom: 5px;
  }
}

.catalog-products-line .col-12,
.catalog-products-line .col-sm-6,
.catalog-products-line .col-l-4 {
  max-width: 100%;
  -webkit-box-flex: 100%;
      -ms-flex: 100%;
          flex: 100%;
}
@media (max-width: 1024px) {
  .catalog-products-line .product-item-btn {
    max-width: 84px;
  }
  .catalog-products-line .product-item-btn-span {
    display: none;
  }
  .catalog-products-line .product-item-btn img {
    display: inline-block;
    margin-top: 5px;
  }
}
.catalog-products-line .product-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  min-width: 100%;
  padding-bottom: 16px;
}
@media (max-width: 1024px) {
  .catalog-products-line .product-item-open {
    display: none;
  }
}
@media (max-width: 1024px) {
  .catalog-products-line .product-item-installments {
    width: 100%;
  }
}
.catalog-products-line .product-item-title {
  font-weight: 700;
}
.catalog-products-line .product-item-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 73%;
}
.catalog-products-line .product-item-info {
  font-size: 0.875rem;
}
.catalog-products-line .product-item-description {
  display: block;
  -webkit-box-shadow: none;
          box-shadow: none;
  position: relative;
  top: 0;
  left: 0;
}
.catalog-products-line .product-item-img {
  margin-bottom: 25px;
}
.catalog-products-line .product-img {
  width: 26%;
  margin-right: 20px;
}
.catalog-products-line .product-info {
  width: 60%;
  margin-right: 16px;
}
.catalog-products-line .product-price {
  width: 37%;
}
@media (max-width: 690px) {
  .catalog-products-line .product-item-container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
  .catalog-products-line .product-item-rait {
    display: none;
  }
  .catalog-products-line .product-item-img {
    margin-bottom: 5px;
  }
  .catalog-products-line .product-img {
    width: 27% !important;
    margin-right: 36px;
  }
  .catalog-products-line .product-info {
    width: 100% !important;
  }
  .catalog-products-line .product-price {
    width: 100% !important;
  }
}

.catalog-img-opacity img {
  opacity: 0.3;
}

.slider_article {
  position: relative;
}
@media (max-width: 1024px) {
  .slider_article {
    margin-right: -25px;
    padding-right: 12px;
  }
}
@media (max-width: 450px) {
  .slider_article {
    margin-bottom: 15px;
  }
}
.slider_article .swiper-button-disabled {
  background-color: #f5f5f5;
  pointer-events: none;
}
@media (max-width: 1024px) {
  .slider_article .swiper-wrapper {
    overflow-x: auto;
    padding: 5px;
    margin: 0px -5px;
  }
}
@media (max-width: 1024px) {
  .slider_article .swiper-slide {
    max-width: 424px;
    margin-right: 24px;
  }
}

/* хром, сафари */
.swiper-wrapper::-webkit-scrollbar {
  width: 0;
}

/* ie 10+ */
.swiper-wrapper {
  -ms-overflow-style: none;
}

/* фф (свойство больше не работает, других способов тоже нет)*/
.swiper-wrapper {
  overflow: -moz-scrollbars-none;
}

.article-button-prev,
.article-button-next {
  position: absolute;
  width: 40px;
  height: 40px;
  background-image: url(./../images/icons/product-slider-right.svg);
  background-repeat: no-repeat;
  background-position: center;
  background-color: #ffffff;
  border-radius: 5px;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  cursor: pointer;
}
@media (max-width: 1024px) {
  .article-button-prev,
.article-button-next {
    display: none;
  }
}

.article-button-prev {
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
  top: 43%;
  left: 8px;
  z-index: 9;
}

.article-button-next {
  top: 43%;
  right: 8px;
  z-index: 9;
}

.catalog-stickers-wrap::-webkit-scrollbar {
  width: 0;
}

.catalog-stickers-wrap {
  -ms-overflow-style: none;
}

.catalog-stickers-wrap {
  overflow: -moz-scrollbars-none;
}

.catalog-brands-main::-webkit-scrollbar {
  width: 0;
}

.catalog-brands-main {
  -ms-overflow-style: none;
}

.catalog-brands-main {
  overflow: -moz-scrollbars-none;
}

.card-interest-wrap::-webkit-scrollbar {
  width: 0;
}

.card-interest-wrap {
  -ms-overflow-style: none;
}

.card-interest-wrap {
  overflow: -moz-scrollbars-none;
}

.catalog-products-img-open {
  background-image: url(.././images/icons/red-cross.svg);
}

.catalog-slider-adaptive .product-item {
  max-width: 312px;
}

.card-item-wrapper {
  padding: 27px 24px 20px 24px;
  margin-bottom: 24px;
  border-radius: 8px;
  background-color: #f5f5f5;
}
.card-item-wrapper-missing {
  text-align: center;
}
.card-item-warning {
  margin-bottom: 20px;
  color: #000000ab;
  font-size: 14px;
  text-align: center;
}
.card-item-counter {
  display: inline-block;
  margin-right: 55px;
  margin-bottom: 10px;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
@media (max-width: 1340px) {
  .card-item-counter {
    margin-right: 16px;
  }
}
.card-item-counter-txt {
  font-size: 0.75rem;
  font-weight: 400;
  margin-bottom: 5px;
  color: #000000ab;
}
.card-item-counter-btn {
  position: relative;
  display: inline-block;
  vertical-align: top;
  width: 50px;
  height: 40px;
  background-color: #d3d3d3;
  cursor: pointer;
}
.card-item-counter-btn:hover {
  background-color: #2a4455;
}
.card-item-counter-btn:last-child {
  margin-left: -10px;
}
.card-item-counter-btn:last-child img {
  top: 48%;
  left: 54%;
}
.card-item-counter-btn img {
  position: relative;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}
.card-item-counter-input {
  position: relative;
  display: inline-block;
  vertical-align: top;
  text-align: center;
  margin-left: -10px;
  width: 55px;
  height: 40px;
  font-size: 1.125rem;
  border: none;
  outline: none;
  border-top: 1px solid #d3d3d3;
  border-bottom: 1px solid #d3d3d3;
  z-index: 1;
}
.card-item-price {
  display: inline-block;
  vertical-align: top;
}
.card-item-price-txt {
  font-size: 0.75rem;
  line-height: 1.3;
}
.card-item-price-old {
  display: inline-block;
  margin-right: 8px;
  font-weight: 600;
  font-size: 1.125rem;
  color: #808080;
  line-height: 1.5;
}
.card-item-price-new {
  display: inline-block;
  vertical-align: text-top;
  padding-left: 8px;
  padding-right: 8px;
  background-color: #ffc100;
  height: 18px;
  line-height: 18px;
  color: #ffffff;
  font-size: 0.875rem;
  line-height: 18px;
}
.card-item-price-current {
  font-size: 1.75rem;
  color: #bc0000;
  font-weight: 700;
}
.card-item-price-currency {
  margin-bottom: 18px;
  font-size: 1.125rem;
}
.card-item-line {
  background-color: #ffffff;
  height: 1px;
  margin-left: -24px;
  margin-right: -24px;
  margin-bottom: 24px;
}
.card-item-btn {
  width: 100%;
  margin-bottom: 8px;
  background-color: #bc0000;
  border-radius: 5px;
  color: #ffffff;
}
.card-item-btn:hover {
  opacity: 0.5;
}
.card-item-btn:nth-of-type(2) {
  margin-bottom: 24px;
  border: 1px solid #bc0000;
  background-color: #ffffff;
  color: #bc0000;
}
.card-item-btn:nth-of-type(2):hover {
  opacity: 0.5;
}
.card-item-question {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}
@media (max-width: 400px) {
  .card-item-question {
    text-align: center;
  }
}
.card-item-question img {
  margin-right: 6px;
  max-width: 20px;
}
.card-item-question-link {
  display: inline-block;
  vertical-align: text-bottom;
  color: #1a66ae;
}
.card-item-question-link:hover {
  text-decoration: underline;
}
.card-item-title {
  margin-bottom: 12px;
  font-size: 1.125rem;
  font-weight: 600;
  line-height: 1.5;
}
.card-item-features {
  display: inline-block;
  vertical-align: top;
  width: 46%;
  margin-right: 0;
  margin-bottom: 20px;
}
@media (max-width: 1400px) {
  .card-item-features {
    display: block;
    width: 100%;
  }
  .card-item-features .features-label {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    width: 56px;
    height: 56px;
    line-height: 1;
    font-size: 0.875rem;
  }
  .card-item-features .features-label span {
    display: block;
  }
}
.card-item-features:nth-child(odd) {
  margin-right: 24px;
}
.card-item-features .features-input {
  display: none;
}
.card-item-features .features-label {
  display: inline-block;
  margin-right: 4px;
  margin-bottom: 8px;
  width: 100%;
  max-width: 82px;
  height: 32px;
  line-height: 28px;
  font-size: 0.875rem;
  font-weight: 600;
  text-align: center;
  border: 2px solid #d3d3d3;
  padding: 0 4px;
  border-radius: 5px;
  background-color: #ffffff;
  cursor: pointer;
}
.card-item-features .features-label input:checked + .features-label-border {
  border: 2px solid #2a4455;
}
@media (min-width: 1024px) {
  .card-item-features .features-label:hover {
    opacity: 0.5;
  }
}
.card-item-features .features-label:nth-child(odd) {
  margin-right: 0;
}
.card-item-features .features-label-wrapper {
  position: relative;
  display: inline-block;
  vertical-align: top;
  width: 100%;
  max-width: 82px;
  margin-bottom: 5px;
}
@media (max-width: 1400px) {
  .card-item-features .features-label-wrapper {
    width: 56px;
    height: 56px;
  }
}
.card-item-features .features-label-border {
  position: absolute;
  width: 100%;
  height: 80%;
  left: 0;
  top: 0;
  border-radius: 5px;
}
@media (max-width: 1401px) {
  .card-item-features .features-label-border {
    height: 100%;
  }
}
.card-item-features .features-label-border .features-label {
  border: none;
}
.card-item-features .features-label-disable input:checked + .features-label-border {
  border: 2px solid #d3d3d3 !important;
}
.card-item-features .features-label-disable .features-label-border {
  color: #d3d3d3;
}
.card-item-features .features-label-disable span {
  color: #d3d3d3;
}
.card-item-features-title {
  font-size: 0.75rem;
  margin-bottom: 13px;
  color: rgba(0, 0, 0, 0.7);
}
.card-item-link {
  display: inline-block;
  width: 100%;
  height: 40px;
  line-height: 38px;
  border: 1px solid #d3d3d3;
  background-color: #ffffff;
  text-align: center;
  font-weight: 600;
  border-radius: 5px;
  font-size: 1rem;
}
.card-item-link:hover {
  opacity: 0.5;
}
.card-item-options {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  height: calc(100% - 16px);
  padding: 16px 32px;
  margin-bottom: 16px;
  border: 1px solid #d3d3d3;
  border-radius: 8px;
  color: #000;
}
@media (max-width: 400px) {
  .card-item-options {
    padding: 16px 21px 16px 16px;
  }
}
.card-item-options:hover {
  border: 1px solid #ffffff;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  color: #2a4455;
}
.card-item-options-txt {
  font-size: 1.125rem;
  font-weight: 600;
  line-height: 1.3;
}
.card-item-options-img {
  min-width: 38px;
  max-width: 38px;
}
.card-item-options-span {
  display: block;
  font-size: 0.875rem;
  opacity: 50%;
  font-weight: 400;
}
.card-item-minus {
  left: 47% !important;
  top: 12% !important;
}
@media (max-width: 992px) {
  .card-item-radio {
    background-color: #ffffff;
  }
  .card-item-radio:last-child {
    display: none;
  }
  .card-item-radio .card-item-title {
    text-align: center;
  }
  .card-item-radio .card-item-link {
    background-color: #f5f5f5;
    border: none;
  }
}
.card-item-status {
  display: block;
  margin-bottom: 17px;
  text-align: center;
  font-size: 1.375rem;
  font-weight: 700;
  opacity: 0.7;
}
.card-item-delivery {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-bottom: 27px;
}
.card-item-delivery-span {
  opacity: 0.7;
}
.card-item-delivery img {
  display: inline-block;
  margin-right: 9px;
}
.card-interest {
  margin-bottom: 40px;
}
.card-interest-title {
  margin-bottom: 30px;
  font-weight: 700;
  font-size: 2rem;
  line-height: 1.375;
}
@media (max-width: 1024px) {
  .card-interest-title {
    font-size: 1.75rem;
  }
}
@media (max-width: 400px) {
  .card-interest-title {
    font-size: 1.375rem;
  }
}
.card-interest-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 8px 32px;
  margin-bottom: 16px;
  background-color: #ebebeb;
  border-radius: 8px;
  height: calc(100% - 16px);
}
<<<<<<< HEAD
.card-interest-item:hover .card-interest-item-txt {
  color: #2a4455;
}
@media (max-width: 1024px) {
  .card-interest-item:hover {
    background-color: #f5f5f5;
  }
  .card-interest-item:hover .card-interest-item-txt {
    color: #000000;
  }
}
=======
>>>>>>> main
.card-interest-item-img {
  max-width: 64px;
  min-width: 64px;
  margin-right: 16px;
  line-height: 0;
}
.card-interest-item-txt {
  font-weight: 600;
  line-height: 1.3;
  overflow: hidden;
  color: #000;
}
@media (max-width: 380px) {
  .card-interest-item-txt {
    font-size: 0.875rem;
  }
}

@media (max-width: 1024px) {
  .card-interest-mob {
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    overflow-x: auto;
    overflow-y: hidden;
  }
  .card-interest-mob .col-4 {
    max-width: 100%;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 0px;
            flex: 0 0 0;
    padding: 0 8px;
  }
  .card-interest-mob .card-interest-item-img {
    display: none;
  }
  .card-interest-mob .card-interest-item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    text-align: center;
    width: 200px;
    padding: 18px 16px;
  }
}

.card-interest-mob::-webkit-scrollbar {
  width: 0;
}

/* ie 10+ */
.card-interest-mob {
  -ms-overflow-style: none;
}

/* фф (свойство больше не работает, других способов тоже нет)*/
.card-interest-mob {
  overflow: -moz-scrollbars-none;
}

.slider-adaptive-wrap::-webkit-scrollbar {
  width: 0;
}

/* ie 10+ */
.slider-adaptive-wrap {
  -ms-overflow-style: none;
}

/* фф (свойство больше не работает, других способов тоже нет)*/
.slider-adaptive-wrap {
  overflow: -moz-scrollbars-none;
}

.product-swiper {
  height: 589px;
  padding: 2px 2px;
}
.product-swiper .swiper-scrollbar {
  display: none;
}

.card-item-wrapper-dark .card-item-price-current {
  line-height: 1;
  color: #000000;
}
.card-item-wrapper-dark .card-btn-dark {
  background-color: #2a4455;
}

.dpn {
  display: none;
}

@media (max-width: 1024px) {
  .slider-adaptive-wrap {
    overflow-x: auto;
    white-space: nowrap;
    overflow-y: hidden;
    padding: 2px;
  }
}
@media (max-width: 1024px) {
  .slider-adaptive-slide {
    display: inline-block;
    vertical-align: top;
    width: 264px !important;
    margin-right: 16px;
  }
  .slider-adaptive .product-item .swiper-slide {
    width: 264px !important;
  }
  .slider-adaptive .swiper-button-prev {
    display: none;
  }
  .slider-adaptive .swiper-button-next {
    display: none;
  }
  .slider-adaptive .product-item-installments {
    max-width: 180px;
    font-size: 0.875rem;
  }
}
.slider-adaptive .swiper-button-next,
.slider-adaptive .swiper-button-prev {
  top: 45%;
}

.slider-adaptive-prev {
  width: 40px;
  height: 40px;
  background-image: url("./../images/icons/product-slider-right.svg");
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
  background-repeat: no-repeat;
  background-position: center;
  border-radius: 5px;
  background-color: #ffffff;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
}
.slider-adaptive-prev::after {
  content: "";
}
.slider-adaptive-prev img {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.slider-adaptive-next {
  width: 40px;
  height: 40px;
  background-image: url("./../images/icons/product-slider-right.svg");
  background-repeat: no-repeat;
  background-position: center;
  background-color: #ffffff;
  border-radius: 5px;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
}
.slider-adaptive-next::after {
  content: "";
}

@media (min-width: 1024px) {
  .product-swiper-mob {
    display: none;
  }
}
.product-swiper-mob .slider-adaptive-wrap {
  -webkit-transform: none !important;
      -ms-transform: none !important;
          transform: none !important;
}

@media (max-width: 1024px) {
  .product-swiper-desc {
    display: none;
  }
}

.slider-adaptive-none {
  display: none;
}

@media (max-width: 1024px) {
  .card-item-container-adaptive {
    margin-bottom: 56px;
  }
}

@media (max-width: 768px) {
  .card-item-indent {
    margin-left: -15px;
    margin-right: -15px;
  }
}

.features-label-long .features-label-wrapper {
  width: initial !important;
  max-width: initial !important;
  min-width: 56px;
}
.features-label-long .features-label {
  width: initial !important;
  max-width: initial !important;
  min-width: 56px !important;
}

@media (max-width: 1024px) {
  .product-swiper-desc-interest .swiper-wrapper {
    -webkit-transform: translate3d(0px, 0px, 0px) !important;
            transform: translate3d(0px, 0px, 0px) !important;
  }
}

@media (max-width: 1024px) {
  .product-swiper-desc-catalog .swiper-wrapper {
    -webkit-transform: translate3d(0px, 0px, 0px) !important;
            transform: translate3d(0px, 0px, 0px) !important;
  }
}

@media (max-width: 1024px) {
  .product-swiper-desc-dear .swiper-wrapper {
    -webkit-transform: translate3d(0px, 0px, 0px) !important;
            transform: translate3d(0px, 0px, 0px) !important;
  }
}

.slider-dear .product-item {
  padding-top: 40px;
}
.slider-dear .product-item-rait {
  display: none;
}
.slider-dear .product-item-like {
  display: none;
}
.slider-dear .product-item-add {
  display: none;
}
.slider-dear .product-item-links {
  display: none;
}

@media (max-width: 576px) {
  .mfp-container {
    padding: 0;
  }
}

.btn-minus {
  border-radius: 8px 0 0 8px;
}

.btn-plus {
  border-radius: 0 8px 8px 0;
}

.popup-preview-slider {
  background-color: #fff;
  border-radius: 10px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 48px 64px;
}
@media (max-width: 1024px) {
  .popup-preview-slider {
    min-height: 100vh;
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
            flex-direction: column-reverse;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}
@media (max-width: 768px) {
  .popup-preview-slider {
    padding: 0;
  }
}
@media (max-width: 650px) {
  .popup-preview-slider {
    min-height: 100vh;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}
.popup-preview-slider .popup-preview-slider-vertic {
  width: 19%;
  height: 100%;
}
@media (max-width: 1024px) {
  .popup-preview-slider .popup-preview-slider-vertic {
    width: 80%;
  }
}
@media (max-width: 650px) {
  .popup-preview-slider .popup-preview-slider-vertic {
    display: none;
  }
}
.popup-preview-slider .popup-preview-slider-main {
  width: 75%;
  min-height: 100%;
  padding-top: 25px;
}
@media (max-width: 1024px) {
  .popup-preview-slider .popup-preview-slider-main {
    width: 80%;
  }
}
.popup-preview-slider .swiper {
  margin: 0;
}
.popup-preview-slider .swiper.vertical-slider {
  height: 700px;
}
.popup-preview-slider .swiper.vertical-slider .swiper-wrapper {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}
@media (max-width: 992px) {
  .popup-preview-slider .swiper.vertical-slider {
    height: 280px;
  }
}
.popup-preview-slider .swiper.vertical-slider .swiper-slide img {
  border: 2px solid #fff;
}
.popup-preview-slider .swiper.vertical-slider .swiper-slide-active img {
  border: 2px solid #ffc100;
}

.swiper-pagination {
  display: none;
}
@media (max-width: 650px) {
  .swiper-pagination {
    display: block;
  }
}

.swiper-pagination-bullet {
  width: var(--swiper-pagination-bullet-width, var(--swiper-pagination-bullet-size, 24px));
  height: var(--swiper-pagination-bullet-height, var(--swiper-pagination-bullet-size, 2px));
  border-radius: 2px;
}

.swiper-pagination-bullet-active {
  background-color: #2A4455;
}

.slider-previes-container {
  position: relative;
  padding: 45px 0px;
}
@media (max-width: 650px) {
  .slider-previes-container {
    display: none;
  }
}

.preview-btn-next {
  color: #071c28;
  position: absolute;
  -webkit-transform: rotate(270deg);
      -ms-transform: rotate(270deg);
          transform: rotate(270deg);
  top: 10px;
  right: 0;
  left: 45px;
}
.preview-btn-next:after {
  font-size: 1.25rem;
}
@media (max-width: 1024px) {
  .preview-btn-next {
    -webkit-transform: rotate(180deg);
        -ms-transform: rotate(180deg);
            transform: rotate(180deg);
    top: 100px;
    right: 0;
    left: -45px;
  }
}

.preview-btn-prev {
  color: #071c28;
  position: absolute;
  -webkit-transform: rotate(270deg);
      -ms-transform: rotate(270deg);
          transform: rotate(270deg);
  top: 95%;
  right: 0;
  left: 45px;
}
.preview-btn-prev:after {
  font-size: 1.25rem;
}
@media (max-width: 1024px) {
  .preview-btn-prev {
    -webkit-transform: rotate(180deg);
        -ms-transform: rotate(180deg);
            transform: rotate(180deg);
    top: 28%;
    right: 0px;
    left: 100%;
  }
}

.main-silder-container {
  position: relative;
  padding: 0px 30px;
  text-align: center;
}
@media (max-width: 650px) {
  .main-silder-container {
    padding: 0;
  }
}

.main-button-next {
  display: inline-block;
  position: absolute;
  right: 0;
  top: 50%;
  width: 25px;
  height: 40px;
  background-image: url(.././images/icons/arrow-slider-preview-next.svg);
  background-position: center;
  background-repeat: no-repeat;
  background-size: auto;
}
.main-button-next.swiper-button-disabled {
  opacity: 0.35;
}
@media (max-width: 650px) {
  .main-button-next {
    display: none;
  }
}

.main-button-prev {
  display: inline-block;
  position: absolute;
  left: 0;
  top: 50%;
  width: 25px;
  height: 40px;
  background-image: url(.././images/icons/arrow-slider-preview-next.svg);
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
  background-position: center;
  background-repeat: no-repeat;
  background-size: auto;
}
.main-button-prev.swiper-button-disabled {
  opacity: 0.35;
}
@media (max-width: 650px) {
  .main-button-prev {
    display: none;
  }
}

.swiper-vertical > .swiper-wrapper {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.popup-sert {
  background: transparent;
  position: relative;
  margin: 20px auto;
  max-width: 616px;
  border-radius: 20px;
}
.popup-sert .mfp-close {
  color: #fff;
  font-size: 42px;
}

.popup-preview {
  position: relative;
  max-width: 1400px;
  margin: 0px auto;
  padding-left: 40px;
  padding-right: 40px;
}
.popup-preview .mfp-close-btn-in .mfp-close {
  font-size: 35px;
  color: #848484;
  right: 112px;
  top: 32px;
}

.popup-form-reviews {
  position: relative;
  margin: 20px auto;
  max-width: 696px;
}
@media (max-width: 576px) {
  .popup-form-reviews {
    margin: 0;
  }
}
@media (max-width: 1024px) {
  .popup-form-reviews .popup-agreement-txt {
    font-size: 14px;
  }
}
.popup-form-reviews .popup-agreement-txt::before {
  content: "Нажимая кнопку «Отправить отзыв» вы соглашаетесь";
}
@media (max-width: 1024px) {
  .popup-form-reviews .popup-agreement-txt::before {
    content: "Я соглашаюсь с";
  }
}
@media (max-width: 780px) {
  .popup-form-reviews .form-reviews {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #fff;
    bottom: 0;
    overflow-y: scroll;
    overflow-x: hidden;
  }
}
.popup-form-reviews .form-reviews-content {
  background: #fff;
  max-width: 696px;
  height: 100%;
  margin: 0px auto;
  border-radius: 10px;
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-content {
    width: 100%;
  }
}
.popup-form-reviews .form-reviews-header {
  padding: 34px 48px;
  border-bottom: 1px solid #d3d3d3;
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-header {
    padding: 15px;
  }
}
.popup-form-reviews .form-reviews-header-title {
  font-weight: 700;
  font-size: 28px;
  color: #000;
  margin-bottom: 15px;
}
.popup-form-reviews .form-reviews-header-item {
  font-weight: 400;
  font-size: 16px;
  margin-bottom: 12px;
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-header-item span:nth-child(1) {
    display: none;
  }
}
.popup-form-reviews .form-reviews-header-item span:nth-child(2) {
  font-weight: 700;
  font-size: 16px;
  color: #1a66ae;
}
.popup-form-reviews .form-reviews-body {
  padding: 34px 48px;
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-body {
    padding: 24px 15px;
  }
}
.popup-form-reviews .form-reviews-body .form-cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-bottom: 17px;
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-body .form-cell {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    margin-bottom: 0;
  }
}
.popup-form-reviews .form-reviews-body .form-cell label {
  font-weight: 400;
  font-size: 14px;
  color: #000;
}
.popup-form-reviews .form-reviews-body .form-cell label span {
  color: #bc0000;
}
.popup-form-reviews .form-reviews-body .form-cell .url {
  margin-top: 0;
}
.popup-form-reviews .form-reviews-body .form-cell .customCheckbox {
  position: absolute;
  z-index: -1;
  opacity: 0;
}
.popup-form-reviews .form-reviews-body .form-cell .customCheckbox + label {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  margin-right: 8px;
}
.popup-form-reviews .form-reviews-body .form-cell .customCheckbox + label::before {
  content: "";
  display: inline-block;
  width: 1em;
  height: 1em;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  border: 1px solid #adb5bd;
  border-radius: 0.25em;
  margin-right: 0.5em;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: 50% 50%;
}
.popup-form-reviews .form-reviews-body .form-cell .customCheckbox:checked + label::before {
  border-color: #071c28;
  background-color: #071c28;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
}
.popup-form-reviews .form-reviews-body .form-cell input {
  width: 288px;
  height: 40px;
  border: 1px solid #d3d3d3;
  padding: 10px 16px;
  border-radius: 5px;
  margin-top: 5px;
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-body .form-cell input {
    width: 100%;
    margin-bottom: 25px;
  }
}
.popup-form-reviews .form-reviews-body .form-cell input:focus {
  border: 1px solid #808080;
}
.popup-form-reviews .form-reviews-body .form-cell input:hover {
  border: 1px solid #808080;
}
.popup-form-reviews .form-reviews-body .form-cell .card-item-rating-item {
  margin-bottom: 0;
}
.popup-form-reviews .form-reviews-body .form-cell .btn-submit {
  padding: 9px 30px;
  background-color: #2a4455;
  color: #fff;
  font-weight: 700;
  border: none;
  font-size: 16px;
  border-radius: 5px;
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-body .form-cell .btn-submit {
    width: 100%;
  }
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-body .form-cell-info {
    margin-bottom: 24px;
  }
  .popup-form-reviews .form-reviews-body .form-cell-info input {
    margin-bottom: 0;
  }
}
.popup-form-reviews .form-reviews-body .form-cell-info span.error {
  color: red;
  font-size: 0.75rem;
  margin-bottom: 2px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-textarea {
  position: relative;
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-body .form-cell-field-textarea {
    margin-bottom: 25px;
  }
}
.popup-form-reviews .form-reviews-body .form-cell-field-textarea textarea {
  padding: 10px 16px;
  width: 600px;
  height: 104px;
  border: 1px solid #d3d3d3;
  border-radius: 5px;
  resize: none;
  margin-top: 5px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-textarea textarea:focus {
  border: 1px solid #808080;
}
.popup-form-reviews .form-reviews-body .form-cell-field-quality {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-body .form-cell-field-quality {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
  .popup-form-reviews .form-reviews-body .form-cell-field-quality input {
    margin-bottom: 19px;
  }
  .popup-form-reviews .form-reviews-body .form-cell-field-quality input:last-child {
    margin-bottom: 0;
  }
}
.popup-form-reviews .form-reviews-body .form-cell-field-quality .plus {
  border: 1px solid #559e53;
}
.popup-form-reviews .form-reviews-body .form-cell-field-quality .minus {
  border: 1px solid #bc0000;
}
.popup-form-reviews .form-reviews-body .form-cell-field-load input[type=file] {
  display: none;
}
.popup-form-reviews .form-reviews-body .form-cell-field-load .error-file {
  color: #bc0000;
  font-size: 14px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-load .img-file {
  width: 88px;
  height: 64px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-load .load-file {
  border: 1px solid #ccc;
  display: inline-block;
  cursor: pointer;
  border-radius: 5px;
  height: 60px;
  padding: 15px 16px;
  width: 288px;
}
@media (max-width: 680px) {
  .popup-form-reviews .form-reviews-body .form-cell-field-load .load-file {
    width: 100%;
    margin-bottom: 25px;
  }
}
.popup-form-reviews .form-reviews-body .form-cell-field-load .load-file span {
  position: relative;
  top: -12px;
  color: #000;
  padding-left: 16px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-url {
  position: relative;
}
.popup-form-reviews .form-reviews-body .form-cell-field-url img {
  position: absolute;
  z-index: 10;
  padding: 18px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-url input {
  height: 60px;
  position: relative;
  z-index: 9;
  padding-left: 66px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-url input::-webkit-input-placeholder {
  color: #bc0000;
  font-size: 16px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-url input::-moz-placeholder {
  color: #bc0000;
  font-size: 16px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-url input:-ms-input-placeholder {
  color: #bc0000;
  font-size: 16px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-url input::-ms-input-placeholder {
  color: #bc0000;
  font-size: 16px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-url input::placeholder {
  color: #bc0000;
  font-size: 16px;
}
.popup-form-reviews .form-reviews-body .form-cell-field-send {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  margin-right: 40px;
}
@media (max-width: 1024px) {
  .popup-form-reviews .form-reviews-body .form-cell-field-send {
    margin-bottom: 24px;
  }
}
.popup-form-reviews .form-reviews-body .form-cell-field-send .popup-agreement-txt {
  width: 320px;
  color: rgba(0, 0, 0, 0.5);
}
.popup-form-reviews .form-reviews-body .form-cell-field-send .checkbox {
  margin-bottom: 0;
  top: 5px;
}
.popup-form-reviews .form-reviews-body .form-cell-rating {
  display: inline-block;
}
.popup-form-reviews .form-reviews-body .form-cell-rating .rating-label {
  display: block;
}
.popup-form-reviews .form-reviews-body .form-cell-rating .rating-set {
  position: relative;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.popup-form-reviews .form-reviews-body .form-cell-rating .rating-set .card-item-rating-body {
  font-size: 3.125rem;
}
.popup-form-reviews .form-reviews-body .form-cell-rating .rating-set .card-item-rating-body::before {
  color: #f9de8e;
}
.popup-form-reviews .form-reviews-body .form-cell-rating .rating-set .error {
  position: absolute;
  bottom: -15px;
  left: 0;
  color: red;
  font-size: 0.75rem;
}
.popup-form-reviews .form-reviews-body .form-cell-rating .rating-set .card-item-rating-value {
  font-size: 28px;
}

.all-files {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.all-files-item {
  position: relative;
  margin-right: 12px;
}

.remove-file {
  width: 20px;
  height: 20px;
  position: absolute;
  top: 0;
  right: 0;
  font-weight: 600;
  color: #fff;
  background-color: rgba(255, 255, 255, 0.5);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  cursor: pointer;
  z-index: 999;
}
.remove-file:hover {
  color: #ffc100;
}

.type-file {
  padding: 5px;
  position: absolute;
  bottom: 6px;
  left: 0;
  color: #fff;
  background-color: rgba(255, 255, 255, 0.5);
  cursor: pointer;
  z-index: 999;
  font-size: 12px;
}

.open-files {
  width: 88px;
  height: 64px;
  text-align: center;
  padding: 18px 0;
  border: 1px solid #d3d3d3;
  border-radius: 10px;
}
.open-files img {
  width: 26px;
  height: auto;
}

.popup-close {
  position: absolute;
  top: 0;
  right: 26px;
  font-size: 50px;
  cursor: pointer;
}
.popup-close:hover {
  opacity: 0.35;
}

.popup-second {
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 512px;
  height: auto;
  background: #fff;
  border-radius: 10px;
  padding: 34px 48px;
}
@media (max-width: 1024px) {
  .popup-second {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    position: fixed;
    left: 50%;
    top: 50%;
    width: 100%;
    height: 100%;
  }
}

.popup-second-block {
  width: 100%;
}

.popup-second-bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(29, 38, 44, 0.35);
  z-index: 9999;
}

.popup-second-title {
  margin: 0 0 15px 0;
}

.popup-second-text {
  margin-bottom: 20px;
}

.popup-second .ui-btn {
  width: 48%;
}
@media (max-width: 576px) {
  .popup-second {
    padding: 34px 15px;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

.popup-second-btn-exit {
  background-color: #2a4455;
  color: #fff;
  margin-right: 15px;
}
@media (max-width: 576px) {
  .popup-second-btn-exit {
    margin-bottom: 8px;
  }
  .popup-second-btn-exit.ui-btn {
    width: 100%;
  }
}

@media (max-width: 576px) {
  .popup-second-btn-cancel.ui-btn {
    width: 100%;
  }
}

.popup-second-btn-cancel {
  background-color: #f5f5f5;
  color: #000;
}

#customCheckbox-error {
  position: absolute;
  font-size: 12px;
  top: 35px;
  left: 24px;
  width: 150px;
  color: red;
}
@media (max-width: 327px) {
  #customCheckbox-error {
    top: 50px;
  }
}

.popup {
  position: relative;
  width: 520px;
  margin: auto;
  margin-bottom: 20px;
  margin-top: 20px;
  padding: 34px 48px 40px 48px;
  background-color: #ffffff;
  border-radius: 10px;
}
@media (max-width: 520px) {
  .popup {
    width: 100%;
    margin-bottom: 0;
    margin-top: 0;
    padding-left: 15px;
    padding-right: 15px;
    border-radius: 0;
  }
}
.popup .mfp-close {
  position: absolute;
  color: #000000;
}
.popup-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.popup-item-img {
  margin-right: 20px;
}
.popup-item-info {
  margin-bottom: 25px;
}
.popup-item-info .popup-product-link {
  display: inline-block;
  margin-bottom: 20px;
}
.popup-title {
  margin-bottom: 15px;
  font-size: 1.75rem;
  font-weight: 700;
  line-height: 1.35;
}
@media (max-width: 520px) {
  .popup-title {
    font-size: 1.375rem;
  }
}
.popup-product {
  margin-right: 8px;
  margin-bottom: 27px;
  opacity: 0.8;
}
.popup-product-link {
  font-weight: 700;
  color: #1a66ae;
  line-height: 1.3;
  opacity: 1;
}
.popup-product-link:hover {
  text-decoration: underline;
}
.popup-line {
  margin: 0 -48px 23px -48px;
  background-color: #d3d3d3;
  height: 1px;
}
.popup-txt {
  margin-bottom: 22px;
  opacity: 0.7;
}
.popup-label {
  display: block;
  font-size: 0.875rem;
  line-height: 1.3;
  margin-bottom: 4px;
}
.popup-backcall-inputs {
  margin-bottom: 17px;
}
.popup-input {
  width: 100%;
  height: 40px;
  padding-left: 16px;
  font-weight: 0.875rem;
  border-radius: 5px;
  border: 1px solid #d3d3d3;
  outline: none;
  font-size: 0.875rem;
  margin-bottom: 5px;
}
.popup-input:focus {
  border: 1px solid #000000;
}
.popup-agreement {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 20px;
}
.popup-agreement-txt {
  margin-left: -8px;
  font-size: 0.75rem;
  line-height: 1.3;
}
.popup-agreement-link {
  color: #1a66ae;
}
.popup-agreement-link:hover {
  text-decoration: underline;
}
.popup-btn {
  display: inline-block;
  width: 100%;
  text-align: center;
  height: 48px;
  line-height: 48px;
  color: #ffffff;
  background-color: #2a4455;
  border-radius: 5px;
  border: none;
  font-weight: 700;
}
.popup-btn:hover {
  opacity: 0.5;
}
.popup .mfp-close {
  font-size: 0;
}
.popup .mfp-close::after {
  display: inline-block;
  position: relative;
  top: 17px;
  right: 5px;
  height: 20px;
  width: 20px;
  content: "";
  background: url("../images/icons/mfp-close.svg") no-repeat right;
}

.checkbox {
  position: relative;
  margin-bottom: 10px;
}
.checkbox-input {
  display: none;
}
.checkbox-input:checked + .checkbox-label::before {
  background-color: #071c28;
}
.checkbox-input:checked + .checkbox-label::after {
  opacity: 1;
}
.checkbox-label {
  display: inline-block;
  padding-left: 38px;
  font-weight: 300;
  cursor: pointer;
}
.checkbox-label::before {
  content: "";
  display: block;
  width: 16px;
  height: 16px;
  border: 1px solid #e5edf7;
  background-color: #ffffff;
  border-radius: 3px;
  cursor: pointer;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
}
.checkbox-label::after {
  content: "";
  display: block;
  width: 18px;
  height: 18px;
  background: url("../images/icons/checkbox-arrow.svg") no-repeat;
  background-size: 10px 8px;
  background-position: center;
  opacity: 0;
  cursor: pointer;
  border-radius: 5px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
}

.popup-item-info-counter .card-item-counter {
  margin-right: 10px;
}
.popup-item-info-counter .card-item-price-current {
  font-size: 1.375rem;
  color: #000000;
  line-height: 1;
}
.popup-item-info-counter .card-item-price {
  margin-top: -5px;
}

.popup-fastOder span {
  position: relative;
  display: inline-block;
  color: red;
}

.popup-query span {
  position: relative;
  display: inline-block;
  color: red;
}

.popup-backcall span {
  position: relative;
  display: inline-block;
  color: red;
}

.popup-price span {
  position: relative;
  display: inline-block;
  color: red;
}

.popup-label span {
  top: 0;
}

.form-cell-field-send {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  margin-right: 40px;
}
@media (max-width: 1024px) {
  .form-cell-field-send {
    margin-bottom: 24px;
  }
}
.form-cell-field-send .popup-agreement-txt {
  width: 320px;
  color: rgba(0, 0, 0, 0.5);
}
.form-cell-field-send .checkbox {
  margin-bottom: 0;
  top: 5px;
}

.popup-rev {
  background: transparent;
  position: relative;
  margin: 20px auto;
  max-width: 616px;
  border-radius: 20px;
}
.popup-rev .mfp-close {
  color: #fff;
  font-size: 42px;
}

.popup-rev {
  background: transparent;
  position: relative;
  margin: 20px auto;
  max-width: 616px;
  border-radius: 20px;
}
.popup-rev .mfp-close {
  color: #fff;
  font-size: 42px;
}

.popup-card {
  width: 78%;
  padding: 32px 64px;
}
@media (max-width: 1023px) {
  .popup-card {
    padding: 32px 48px;
  }
}
@media (max-width: 500px) {
  .popup-card {
    padding-bottom: 0;
  }
  .popup-card .card-item-price-current {
    line-height: 1.3;
    font-size: 1.375rem;
  }
  .popup-card .card-item-price-currency {
    color: #00000075;
  }
  .popup-card .popup-card-info {
    margin-bottom: 25px;
  }
}
@media (max-width: 446px) {
  .popup-card .card-btn-adaptive {
    white-space: normal;
    -o-text-overflow: initial;
       text-overflow: initial;
    overflow: initial;
    line-height: 1.36;
  }
}
.popup-card-img {
  display: inline-block;
  margin-right: 24px;
}
@media (max-width: 1024px) {
  .popup-card-img {
    max-width: 88px;
  }
}
.popup-card-info {
  display: inline-block;
  vertical-align: top;
}
.popup-card-info-link {
  color: #000000a8;
}
.popup-card-title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
@media (max-width: 1024px) {
  .popup-card-title {
    display: block;
  }
}
.popup-card-wrapper:nth-of-type(2) {
  text-align: right;
  max-width: 240px;
}
@media (max-width: 1024px) {
  .popup-card-wrapper:nth-of-type(2) {
    max-width: 100%;
  }
}
@media (max-width: 1023px) {
  .popup-card-wrapper:nth-of-type(1) {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}
.popup-card-contant {
  padding-top: 24px;
  padding: 24px 64px 32px 64px;
  margin: 0 -64px -32px -64px;
  background-color: #f5f5f5;
  border-radius: 10px;
}
@media (max-width: 1023px) {
  .popup-card-contant {
    padding-top: 0;
    background-color: #ffffff;
    margin: 0 -48px -32px -48px;
  }
}
@media (max-width: 500px) {
  .popup-card-contant {
    padding-top: 0;
    background-color: #ffffff;
    margin: 0 -48px -32px -48px;
    padding-bottom: 0;
    margin-bottom: 0;
  }
}
.popup-card-optional {
  margin-bottom: 16px;
}
@media (max-width: 1023px) {
  .popup-card-optional {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    white-space: nowrap;
    overflow-x: auto;
    overflow-y: hidden;
  }
}
.popup-card-optional-link {
  display: inline-block;
  width: calc(50% - 15px);
  height: 40px;
  line-height: 38px;
  border: 1px solid #d3d3d3;
  border-radius: 5px;
  color: #000000;
  font-weight: 600;
  text-align: center;
  background-color: #ffffff;
  white-space: normal;
}
@media (max-width: 1023px) {
  .popup-card-optional-link {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    min-width: 184px;
    width: 184px;
    height: 80px;
    background-color: #f5f5f5;
    padding: 18px 16px;
    line-height: 1.3;
    border: none;
  }
}
.popup-card-optional-link:hover {
  color: #2a4455;
  -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  border: none;
}
.popup-card-optional-link:first-child {
  margin-right: 24px;
}
@media (max-width: 1023px) {
  .popup-card-optional-link:first-child {
    margin-right: 16px;
  }
}
.popup-card .card-item-price-current {
  color: #000000;
}
@media (max-width: 1024px) {
  .popup-card .card-item-btn {
    display: inline-block;
    width: calc(50% - 15px);
    vertical-align: top;
  }
  .popup-card .card-item-btn:first-child {
    margin-right: 24px;
  }
}
.popup-card .card-item-features {
  margin-bottom: 16px;
}
@media (max-width: 1023px) {
  .popup-card .card-item-features {
    overflow-x: auto;
    white-space: nowrap;
  }
}
.popup .popup-line-big {
  margin: 0 -64px 23px -64px;
}
@media (max-width: 1024px) {
  .popup .popup-line-big {
    margin: 0 -48px 23px -48px;
  }
}
.popup .product-item {
  background-color: #ffffff;
}
@media (min-width: 500px) {
  .popup .product-item .product-item {
    max-width: initial;
    min-width: none;
  }
  .popup .product-item .product-item-title {
    font-size: 0.875rem;
    margin-bottom: 28px;
  }
  .popup .product-item .product-item-price {
    font-size: 1.125rem;
  }
}
@media (min-width: 500px) {
  .popup .product-item .product-item-img {
    margin-bottom: 30px;
  }
  .popup .product-item .product-item-links {
    display: none;
  }
  .popup .product-item .product-item-rait {
    display: none;
  }
  .popup .product-item .product-item-like {
    display: none;
  }
  .popup .product-item .product-item-add {
    display: none;
  }
  .popup .product-item .product-item-btn {
    width: 84px;
    margin-top: -18px;
  }
  .popup .product-item .product-item-btn-span {
    display: none;
  }
  .popup .product-item .product-item-btn img {
    display: inline-block;
    margin-top: 5px;
  }
  .popup .product-item .product-price {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}
.popup .product-swiper {
  height: initial;
}

@media (max-width: 1024px) {
  .mfp-content {
    background: none;
  }
}
.popup-line-show {
  display: none;
}
@media (max-width: 1023px) {
  .popup-line-show {
    display: block;
    margin-bottom: 16px;
  }
}

@media (max-width: 400px) {
  .popup-title {
    font-size: 1.375rem;
  }
}

@media (max-width: 1024px) {
  .product-swiper-mob-item .swiper-wrapper {
    -webkit-transform: translate3d(0px, 0px, 0px) !important;
            transform: translate3d(0px, 0px, 0px) !important;
  }
}

@media (max-width: 500px) {
  .popup-card-wrapper-adaptive {
    position: fixed;
    bottom: 0;
    width: 100%;
    -webkit-box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
    padding: 16px 32px 16px 32px;
    z-index: 5;
    padding-bottom: 0;
    margin-bottom: 0;
    background-color: #ffffff;
    margin-left: -15px;
  }
}

@media (max-width: 500px) {
  .product-swiper-mob-item {
    margin-bottom: 24px;
  }
}

.card-item-features::-webkit-scrollbar {
  width: 0;
}

/* ie 10+ */
.card-item-features {
  -ms-overflow-style: none;
}

/* фф (свойство больше не работает, других способов тоже нет)*/
.card-item-features {
  overflow: -moz-scrollbars-none;
}

.popup-card-optional::-webkit-scrollbar {
  width: 0;
}

/* ie 10+ */
.popup-card-optional {
  -ms-overflow-style: none;
}

/* фф (свойство больше не работает, других способов тоже нет)*/
.popup-card-optional {
  overflow: -moz-scrollbars-none;
}

.popup-similar {
  width: 78%;
  padding: 34px 64px 40px 64px;
}
@media (max-width: 1024px) {
  .popup-similar {
    padding: 34px 48px 40px 48px;
  }
}
@media (max-width: 400px) {
  .popup-similar {
    padding: 34px 15px 40px 15px;
  }
  .popup-similar .popup-title {
    font-size: 1.375rem;
  }
  .popup-similar .popup-product-span {
    display: none;
  }
}
.popup-similar-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-bottom: 27px;
  background-color: #ffffff;
}
@media (max-width: 1260px) {
  .popup-similar-wrapper {
    display: block;
  }
}
.popup-similar-wrapper .card-item-options {
  max-width: 424px;
}
.popup-similar-contant {
  background-color: #f5f5f5;
  padding: 23px 64px 40px 64px;
  margin: -23px -64px -40px -64px;
  border-radius: 10px;
}
@media (max-width: 1024px) {
  .popup-similar-contant {
    padding: 0;
    margin: 0;
    background-color: #ffffff;
  }
}
@media (max-width: 500) {
  .popup-similar-contant .product-item {
    -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
            box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
  }
}
.popup-similar .popup-line-big {
  margin: 0 -64px 23px -64px;
}
@media (max-width: 1024px) {
  .popup-similar .popup-line-big {
    margin: 0 -48px 23px -48px;
  }
}
.popup-similar .product-item {
  background-color: #ffffff;
}
.popup-similar .product-item .product-item {
  max-width: initial;
  min-width: none;
}
.popup-similar .product-item .product-item-title {
  font-size: 0.875rem;
  margin-bottom: 28px;
}
.popup-similar .product-item .product-item-price {
  font-size: 1.125rem;
}
@media (min-width: 500px) {
  .popup-similar .product-item .product-item-img {
    margin-bottom: 30px;
  }
  .popup-similar .product-item .product-item-links {
    display: none;
  }
  .popup-similar .product-item .product-item-rait {
    display: none;
  }
  .popup-similar .product-item .product-item-like {
    display: none;
  }
  .popup-similar .product-item .product-item-add {
    display: none;
  }
  .popup-similar .product-item .product-item-btn {
    width: 84px;
    margin-top: -18px;
  }
  .popup-similar .product-item .product-item-btn-span {
    display: none;
  }
  .popup-similar .product-item .product-item-btn img {
    display: inline-block;
    margin-top: 5px;
  }
  .popup-similar .product-item .product-price {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}
.popup-similar .product-swiper {
  height: initial;
}
@media (max-width: 1024px) {
  .popup-similar .swiper-slide {
    width: 264px !important;
  }
  .popup-similar .product-item {
    min-width: 264px;
    max-width: 312px;
  }
}

@media (max-width: 1024px) {
  .product-swiper-mob-similar .swiper-wrapper {
    -webkit-transform: translate3d(0px, 0px, 0px) !important;
            transform: translate3d(0px, 0px, 0px) !important;
  }
}

.popup-filters {
  left: 0;
  top: 0;
  border-radius: 0;
  margin: initial;
  padding: 0px 45px;
  overflow: hidden;
  max-width: 475px;
}
@media (max-width: 500px) {
  .popup-filters {
    padding: 0px 20px;
  }
}
.popup-filters-title {
  font-size: 1.75rem;
  font-weight: 700;
  margin: 0 -250px;
  padding: 16px 250px;
  margin-bottom: 30px;
  border-bottom: 1px solid #d3d3d3;
}
.popup-filters .mfp-close {
  font-size: 0;
  top: 24px;
  right: 24px;
  height: 24px;
  width: 24px;
  background-image: url(.././images/icons/Close.svg);
  background-repeat: no-repeat;
  background-position: center;
}

.popup-wrap {
  max-width: 475px;
  position: relative;
}
.popup-wrap .calculator-btn-wrapper {
  max-width: 475px;
}
.popup-wrap .calculator-btn-wrapper .calculator-btn {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 84.7%;
          flex: 0 0 84.7%;
  max-width: 84.7%;
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
  padding: 0px 20px;
}
.popup-wrap .calculator-btn-wrapper .calculator-reload {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 15.3%;
          flex: 0 0 15.3%;
  max-width: 15.3%;
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
  -o-text-overflow: initial;
     text-overflow: initial;
}

.mfp-wrap {
  position: fixed !important;
  top: 0 !important;
  height: 100% !important;
  overflow: hidden auto !important;
}

.mfp-bg {
  position: fixed !important;
  top: 0 !important;
}

.popup-img {
  text-align: center;
}

.zaglushka-phone .popup-title {
  text-align: center;
}
.zaglushka-phone .popup-text {
  text-align: center;
}
@media (max-width: 450px) {
  .zaglushka-phone {
    height: 100vh;
    border-radius: 0;
  }
}
.zaglushka-phone .mfp-close {
  font-size: 0;
  top: 24px;
  right: 24px;
  height: 24px;
  width: 24px;
  background-image: url(.././images/icons/Close.svg);
  background-repeat: no-repeat;
  background-position: center;
}
.zaglushka-phone .page-stickers {
  margin-bottom: 0px;
  overflow-x: initial;
  white-space: initial;
}
.zaglushka-phone .page-stickers .ui-sticker {
  margin-bottom: 8px;
}
<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
<<<<<<< HEAD
<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> 99ce345411d9b66ac9feee4c3ba2984ff5a73154
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsInN0eWxlLnNjc3MiLCJhYnN0cmFjdHMvX3Zhci5zY3NzIiwibGF5b3V0L19ncmlkLnNjc3MiLCJsYXlvdXQvX2hlYWRlci5zY3NzIiwibGF5b3V0L19mb290ZXIuc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsImJhc2UvX2RlZmF1bHQuc2NzcyIsImNvbXBvbmVudHMvX2J1dHRvbnMuc2NzcyIsImNvbXBvbmVudHMvX3N0aWNrZXJzLnNjc3MiLCJjb21wb25lbnRzL19icmVhZGNydW1icy5zY3NzIiwiY29tcG9uZW50cy9faW5wdXQuc2NzcyIsImNvbXBvbmVudHMvX3JhdGluZy5zY3NzIiwiY29tcG9uZW50cy9kb3dubG9hZC1saW5rLnNjc3MiLCJjb21wb25lbnRzL19wcm9kdWN0LnNjc3MiLCJjb21wb25lbnRzL19jaXJjbGUtaW5mby5zY3NzIiwiY29tcG9uZW50cy9fYnRuLWZlZWRiYWNrLnNjc3MiLCJjb21wb25lbnRzL19jYXJkU3RpY2t5LnNjc3MiLCJjb21wb25lbnRzL19saXN0LWxpLnNjc3MiLCJwYWdlcy9fY2FyZC5zY3NzIiwicGFnZXMvX2NhdGFsb2cuc2NzcyIsInBhZ2VzL19uYXp6LnNjc3MiLCJwb3B1cHMvcHJldmlldy5zY3NzIiwicG9wdXBzL3NlcnQuc2NzcyIsInBvcHVwcy9mb3JtLXJldmlld3Muc2NzcyIsInBvcHVwcy9vZmVyLnNjc3MiLCJwb3B1cHMvcmV2LWltZy5zY3NzIiwicG9wdXBzL3Jldi12aWRlby5zY3NzIiwicG9wdXBzL2NhcmQtaXRlbS5zY3NzIiwicG9wdXBzL2NhcmQtc2ltaWxhci5zY3NzIiwicG9wdXBzL2ZpbHRlcnMuc2NzcyIsInBvcHVwcy96YWdsdXNoa2Euc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUNFaEI7RUFDRSw4QkFBQTtVQUFBLHNCQUFBO0FEQUY7O0FDR0E7RUFDRSxlQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsOEJB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OU5KO0ErQnA5Tkk7RUFDRSxrQkFBQTtBL0JzOU5OIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbn1cblxuYm9keSB7XG4gIGhlaWdodDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDI7XG4gIGNvbG9yOiAjMDAwO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG59XG5cbiN3cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBtaW4td2lkdGg6IDEwMCU7XG59XG5cbiNtaWRkbGUge1xuICAtd2Via2l0LWJveC1mbGV4OiAxO1xuICBmbGV4OiAxIDAgYXV0bztcbn1cblxuI2Zvb3RlciB7XG4gIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gIGZsZXg6IDAgMCBhdXRvO1xufVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xuICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICB9XG59XG5cbi5yb3cge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtd2Via2l0LWlubGluZS1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtaW5saW5lLWZsZXg7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleDtcbiAgZGlzcGxheTogLW1zLWlubGluZS1mbGV4Ym94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAtbXMtZmxleC1mbG93OiByb3cgd3JhcDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgLXdlYmtpdC1mbGV4LXdyYXA6IHdyYXA7XG4gIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi1sZWZ0OiAtMTJweDtcbiAgbWFyZ2luLXJpZ2h0OiAtMTJweDtcbn1cblxuLmZsZXgge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtd2Via2l0LWlubGluZS1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtaW5saW5lLWZsZXg7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleDtcbiAgZGlzcGxheTogLW1zLWlubGluZS1mbGV4Ym94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbn1cblxuLnZhbGlnbi1jZW50ZXIge1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1hbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uanVzdGlmeS1jZW50ZXIge1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uc3BhY2UtYmV0d2VlbiB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLnRleHQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLnRleHQtbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbltjbGFzcyo9Y29sLV0ge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1sZWZ0OiAxMnB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xufVxuXG4uY2xlYXIge1xuICBwYWRkaW5nLWxlZnQ6IDBweDtcbiAgcGFkZGluZy1yaWdodDogMHB4O1xufVxuXG4vKiAgMTItY29sdW1uICovXG4uY29sLTEge1xuICAtbXMtZmxleDogMCAwIDguMzMzMzMlO1xuICBmbGV4OiAwIDAgOC4zMzMzMyU7XG4gIG1heC13aWR0aDogOC4zMzMzMyU7XG59XG5cbi5jb2wtMiB7XG4gIC1tcy1mbGV4OiAwIDAgMTYuNjY2NjclO1xuICBmbGV4OiAwIDAgMTYuNjY2NjclO1xuICBtYXgtd2lkdGg6IDE2LjY2NjY3JTtcbn1cblxuLmNvbC0zIHtcbiAgLW1zLWZsZXg6IDAgMCAyNSU7XG4gIGZsZXg6IDAgMCAyNSU7XG4gIG1heC13aWR0aDogMjUlO1xufVxuXG4uY29sLTQge1xuICAtbXMtZmxleDogMCAwIDMzLjMzMzMzJTtcbiAgZmxleDogMCAwIDMzLjMzMzMzJTtcbiAgbWF4LXdpZHRoOiAzMy4zMzMzMyU7XG59XG5cbi5jb2wtNSB7XG4gIC1tcy1mbGV4OiAwIDAgNDEuNjY2NjclO1xuICBmbGV4OiAwIDAgNDEuNjY2NjclO1xuICBtYXgtd2lkdGg6IDQxLjY2NjY3JTtcbn1cblxuLmNvbC02IHtcbiAgLW1zLWZsZXg6IDAgMCA1MCU7XG4gIGZsZXg6IDAgMCA1MCU7XG4gIG1heC13aWR0aDogNTAlO1xufVxuXG4uY29sLTcge1xuICAtbXMtZmxleDogMCAwIDU4LjMzMzMzJTtcbiAgZmxleDogMCAwIDU4LjMzMzMzJTtcbiAgbWF4LXdpZHRoOiA1OC4zMzMzMyU7XG59XG5cbi5jb2wtOCB7XG4gIC1tcy1mbGV4OiAwIDAgNjYuNjY2NjclO1xuICBmbGV4OiAwIDAgNjYuNjY2NjclO1xuICBtYXgtd2lkdGg6IDY2LjY2NjY3JTtcbn1cblxuLmNvbC05IHtcbiAgLW1zLWZsZXg6IDAgMCA3NSU7XG4gIGZsZXg6IDAgMCA3NSU7XG4gIG1heC13aWR0aDogNzUlO1xufVxuXG4uY29sLTEwIHtcbiAgLW1zLWZsZXg6IDAgMCA4My4zMzMzMyU7XG4gIGZsZXg6IDAgMCA4My4zMzMzMyU7XG4gIG1heC13aWR0aDogODMuMzMzMzMlO1xufVxuXG4uY29sLTExIHtcbiAgLW1zLWZsZXg6IDAgMCA5MS42NjY2NyU7XG4gIGZsZXg6IDAgMCA5MS42NjY2NyU7XG4gIG1heC13aWR0aDogOTEuNjY2NjclO1xufVxuXG4uY29sLTEyIHtcbiAgLW1zLWZsZXg6IDAgMCAxMDAlO1xuICBmbGV4OiAwIDAgMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMzIwcHgpIHtcbiAgLmNvbC1zcy0wIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLmNvbC1zcy0xIHtcbiAgICAtbXMtZmxleDogMCAwIDguMzMzMzMlO1xuICAgIGZsZXg6IDAgMCA4LjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDguMzMzMzMlO1xuICB9XG5cbiAgLmNvbC1zcy0yIHtcbiAgICAtbXMtZmxleDogMCAwIDE2LjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgMTYuNjY2NjclO1xuICAgIG1heC13aWR0aDogMTYuNjY2NjclO1xuICB9XG5cbiAgLmNvbC1zcy0zIHtcbiAgICAtbXMtZmxleDogMCAwIDI1JTtcbiAgICBmbGV4OiAwIDAgMjUlO1xuICAgIG1heC13aWR0aDogMjUlO1xuICB9XG5cbiAgLmNvbC1zcy00IHtcbiAgICAtbXMtZmxleDogMCAwIDMzLjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgMzMuMzMzMzMlO1xuICAgIG1heC13aWR0aDogMzMuMzMzMzMlO1xuICB9XG5cbiAgLmNvbC1zcy01IHtcbiAgICAtbXMtZmxleDogMCAwIDQxLjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgNDEuNjY2NjclO1xuICAgIG1heC13aWR0aDogNDEuNjY2NjclO1xuICB9XG5cbiAgLmNvbC1zcy02IHtcbiAgICAtbXMtZmxleDogMCAwIDUwJTtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIG1heC13aWR0aDogNTAlO1xuICB9XG5cbiAgLmNvbC1zcy03IHtcbiAgICAtbXMtZmxleDogMCAwIDU4LjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgNTguMzMzMzMlO1xuICAgIG1heC13aWR0aDogNTguMzMzMzMlO1xuICB9XG5cbiAgLmNvbC1zcy04IHtcbiAgICAtbXMtZmxleDogMCAwIDY2LjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgNjYuNjY2NjclO1xuICAgIG1heC13aWR0aDogNjYuNjY2NjclO1xuICB9XG5cbiAgLmNvbC1zcy05IHtcbiAgICAtbXMtZmxleDogMCAwIDc1JTtcbiAgICBmbGV4OiAwIDAgNzUlO1xuICAgIG1heC13aWR0aDogNzUlO1xuICB9XG5cbiAgLmNvbC1zcy0xMCB7XG4gICAgLW1zLWZsZXg6IDAgMCA4My4zMzMzMyU7XG4gICAgZmxleDogMCAwIDgzLjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzJTtcbiAgfVxuXG4gIC5jb2wtc3MtMTEge1xuICAgIC1tcy1mbGV4OiAwIDAgOTEuNjY2NjclO1xuICAgIGZsZXg6IDAgMCA5MS42NjY2NyU7XG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NyU7XG4gIH1cblxuICAuY29sLXNzLTEyIHtcbiAgICAtbXMtZmxleDogMCAwIDEwMCU7XG4gICAgZmxleDogMCAwIDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDAwcHgpIHtcbiAgLmNvbC11cy0wIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLmNvbC11cy0xIHtcbiAgICAtbXMtZmxleDogMCAwIDguMzMzMzMlO1xuICAgIGZsZXg6IDAgMCA4LjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDguMzMzMzMlO1xuICB9XG5cbiAgLmNvbC11cy0yIHtcbiAgICAtbXMtZmxleDogMCAwIDE2LjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgMTYuNjY2NjclO1xuICAgIG1heC13aWR0aDogMTYuNjY2NjclO1xuICB9XG5cbiAgLmNvbC11cy0zIHtcbiAgICAtbXMtZmxleDogMCAwIDI1JTtcbiAgICBmbGV4OiAwIDAgMjUlO1xuICAgIG1heC13aWR0aDogMjUlO1xuICB9XG5cbiAgLmNvbC11cy00IHtcbiAgICAtbXMtZmxleDogMCAwIDMzLjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgMzMuMzMzMzMlO1xuICAgIG1heC13aWR0aDogMzMuMzMzMzMlO1xuICB9XG5cbiAgLmNvbC11cy01IHtcbiAgICAtbXMtZmxleDogMCAwIDQxLjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgNDEuNjY2NjclO1xuICAgIG1heC13aWR0aDogNDEuNjY2NjclO1xuICB9XG5cbiAgLmNvbC11cy02IHtcbiAgICAtbXMtZmxleDogMCAwIDUwJTtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIG1heC13aWR0aDogNTAlO1xuICB9XG5cbiAgLmNvbC11cy03IHtcbiAgICAtbXMtZmxleDogMCAwIDU4LjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgNTguMzMzMzMlO1xuICAgIG1heC13aWR0aDogNTguMzMzMzMlO1xuICB9XG5cbiAgLmNvbC11cy04IHtcbiAgICAtbXMtZmxleDogMCAwIDY2LjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgNjYuNjY2NjclO1xuICAgIG1heC13aWR0aDogNjYuNjY2NjclO1xuICB9XG5cbiAgLmNvbC11cy05IHtcbiAgICAtbXMtZmxleDogMCAwIDc1JTtcbiAgICBmbGV4OiAwIDAgNzUlO1xuICAgIG1heC13aWR0aDogNzUlO1xuICB9XG5cbiAgLmNvbC11cy0xMCB7XG4gICAgLW1zLWZsZXg6IDAgMCA4My4zMzMzMyU7XG4gICAgZmxleDogMCAwIDgzLjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzJTtcbiAgfVxuXG4gIC5jb2wtdXMtMTEge1xuICAgIC1tcy1mbGV4OiAwIDAgOTEuNjY2NjclO1xuICAgIGZsZXg6IDAgMCA5MS42NjY2NyU7XG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NyU7XG4gIH1cblxuICAuY29sLXVzLTEyIHtcbiAgICAtbXMtZmxleDogMCAwIDEwMCU7XG4gICAgZmxleDogMCAwIDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmNvbC14cy0xIHtcbiAgICAtbXMtZmxleDogMCAwIDguMzMzMzMlO1xuICAgIGZsZXg6IDAgMCA4LjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDguMzMzMzMlO1xuICB9XG5cbiAgLmNvbC14cy0yIHtcbiAgICAtbXMtZmxleDogMCAwIDE2LjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgMTYuNjY2NjclO1xuICAgIG1heC13aWR0aDogMTYuNjY2NjclO1xuICB9XG5cbiAgLmNvbC14cy0zIHtcbiAgICAtbXMtZmxleDogMCAwIDI1JTtcbiAgICBmbGV4OiAwIDAgMjUlO1xuICAgIG1heC13aWR0aDogMjUlO1xuICB9XG5cbiAgLmNvbC14cy00IHtcbiAgICAtbXMtZmxleDogMCAwIDMzLjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgMzMuMzMzMzMlO1xuICAgIG1heC13aWR0aDogMzMuMzMzMzMlO1xuICB9XG5cbiAgLmNvbC14cy01IHtcbiAgICAtbXMtZmxleDogMCAwIDQxLjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgNDEuNjY2NjclO1xuICAgIG1heC13aWR0aDogNDEuNjY2NjclO1xuICB9XG5cbiAgLmNvbC14cy02IHtcbiAgICAtbXMtZmxleDogMCAwIDUwJTtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIG1heC13aWR0aDogNTAlO1xuICB9XG5cbiAgLmNvbC14cy03IHtcbiAgICAtbXMtZmxleDogMCAwIDU4LjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgNTguMzMzMzMlO1xuICAgIG1heC13aWR0aDogNTguMzMzMzMlO1xuICB9XG5cbiAgLmNvbC14cy04IHtcbiAgICAtbXMtZmxleDogMCAwIDY2LjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgNjYuNjY2NjclO1xuICAgIG1heC13aWR0aDogNjYuNjY2NjclO1xuICB9XG5cbiAgLmNvbC14cy05IHtcbiAgICAtbXMtZmxleDogMCAwIDc1JTtcbiAgICBmbGV4OiAwIDAgNzUlO1xuICAgIG1heC13aWR0aDogNzUlO1xuICB9XG5cbiAgLmNvbC14cy0xMCB7XG4gICAgLW1zLWZsZXg6IDAgMCA4My4zMzMzMyU7XG4gICAgZmxleDogMCAwIDgzLjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzJTtcbiAgfVxuXG4gIC5jb2wteHMtMTEge1xuICAgIC1tcy1mbGV4OiAwIDAgOTEuNjY2NjclO1xuICAgIGZsZXg6IDAgMCA5MS42NjY2NyU7XG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NyU7XG4gIH1cblxuICAuY29sLXhzLTEyIHtcbiAgICAtbXMtZmxleDogMCAwIDEwMCU7XG4gICAgZmxleDogMCAwIDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmNvbC1zbS0xIHtcbiAgICAtbXMtZmxleDogMCAwIDguMzMzMzMlO1xuICAgIGZsZXg6IDAgMCA4LjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDguMzMzMzMlO1xuICB9XG5cbiAgLmNvbC1zbS0yIHtcbiAgICAtbXMtZmxleDogMCAwIDE2LjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgMTYuNjY2NjclO1xuICAgIG1heC13aWR0aDogMTYuNjY2NjclO1xuICB9XG5cbiAgLmNvbC1zbS0zIHtcbiAgICAtbXMtZmxleDogMCAwIDI1JTtcbiAgICBmbGV4OiAwIDAgMjUlO1xuICAgIG1heC13aWR0aDogMjUlO1xuICB9XG5cbiAgLmNvbC1zbS00IHtcbiAgICAtbXMtZmxleDogMCAwIDMzLjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgMzMuMzMzMzMlO1xuICAgIG1heC13aWR0aDogMzMuMzMzMzMlO1xuICB9XG5cbiAgLmNvbC1zbS01IHtcbiAgICAtbXMtZmxleDogMCAwIDQxLjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgNDEuNjY2NjclO1xuICAgIG1heC13aWR0aDogNDEuNjY2NjclO1xuICB9XG5cbiAgLmNvbC1zbS02IHtcbiAgICAtbXMtZmxleDogMCAwIDUwJTtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIG1heC13aWR0aDogNTAlO1xuICB9XG5cbiAgLmNvbC1zbS03IHtcbiAgICAtbXMtZmxleDogMCAwIDU4LjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgNTguMzMzMzMlO1xuICAgIG1heC13aWR0aDogNTguMzMzMzMlO1xuICB9XG5cbiAgLmNvbC1zbS04IHtcbiAgICAtbXMtZmxleDogMCAwIDY2LjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgNjYuNjY2NjclO1xuICAgIG1heC13aWR0aDogNjYuNjY2NjclO1xuICB9XG5cbiAgLmNvbC1zbS05IHtcbiAgICAtbXMtZmxleDogMCAwIDc1JTtcbiAgICBmbGV4OiAwIDAgNzUlO1xuICAgIG1heC13aWR0aDogNzUlO1xuICB9XG5cbiAgLmNvbC1zbS0xMCB7XG4gICAgLW1zLWZsZXg6IDAgMCA4My4zMzMzMyU7XG4gICAgZmxleDogMCAwIDgzLjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzJTtcbiAgfVxuXG4gIC5jb2wtc20tMTEge1xuICAgIC1tcy1mbGV4OiAwIDAgOTEuNjY2NjclO1xuICAgIGZsZXg6IDAgMCA5MS42NjY2NyU7XG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NyU7XG4gIH1cblxuICAuY29sLXNtLTEyIHtcbiAgICAtbXMtZmxleDogMCAwIDEwMCU7XG4gICAgZmxleDogMCAwIDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5jb2wtbWQtMSB7XG4gICAgLW1zLWZsZXg6IDAgMCA4LjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgOC4zMzMzMyU7XG4gICAgbWF4LXdpZHRoOiA4LjMzMzMzJTtcbiAgfVxuXG4gIC5jb2wtbWQtMiB7XG4gICAgLW1zLWZsZXg6IDAgMCAxNi42NjY2NyU7XG4gICAgZmxleDogMCAwIDE2LjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDE2LjY2NjY3JTtcbiAgfVxuXG4gIC5jb2wtbWQtMyB7XG4gICAgLW1zLWZsZXg6IDAgMCAyNSU7XG4gICAgZmxleDogMCAwIDI1JTtcbiAgICBtYXgtd2lkdGg6IDI1JTtcbiAgfVxuXG4gIC5jb2wtbWQtNCB7XG4gICAgLW1zLWZsZXg6IDAgMCAzMy4zMzMzMyU7XG4gICAgZmxleDogMCAwIDMzLjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDMzLjMzMzMzJTtcbiAgfVxuXG4gIC5jb2wtbWQtNSB7XG4gICAgLW1zLWZsZXg6IDAgMCA0MS42NjY2NyU7XG4gICAgZmxleDogMCAwIDQxLjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDQxLjY2NjY3JTtcbiAgfVxuXG4gIC5jb2wtbWQtNiB7XG4gICAgLW1zLWZsZXg6IDAgMCA1MCU7XG4gICAgZmxleDogMCAwIDUwJTtcbiAgICBtYXgtd2lkdGg6IDUwJTtcbiAgfVxuXG4gIC5jb2wtbWQtNyB7XG4gICAgLW1zLWZsZXg6IDAgMCA1OC4zMzMzMyU7XG4gICAgZmxleDogMCAwIDU4LjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDU4LjMzMzMzJTtcbiAgfVxuXG4gIC5jb2wtbWQtOCB7XG4gICAgLW1zLWZsZXg6IDAgMCA2Ni42NjY2NyU7XG4gICAgZmxleDogMCAwIDY2LjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDY2LjY2NjY3JTtcbiAgfVxuXG4gIC5jb2wtbWQtOSB7XG4gICAgLW1zLWZsZXg6IDAgMCA3NSU7XG4gICAgZmxleDogMCAwIDc1JTtcbiAgICBtYXgtd2lkdGg6IDc1JTtcbiAgfVxuXG4gIC5jb2wtbWQtMTAge1xuICAgIC1tcy1mbGV4OiAwIDAgODMuMzMzMzMlO1xuICAgIGZsZXg6IDAgMCA4My4zMzMzMyU7XG4gICAgbWF4LXdpZHRoOiA4My4zMzMzMyU7XG4gIH1cblxuICAuY29sLW1kLTExIHtcbiAgICAtbXMtZmxleDogMCAwIDkxLjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgOTEuNjY2NjclO1xuICAgIG1heC13aWR0aDogOTEuNjY2NjclO1xuICB9XG5cbiAgLmNvbC1tZC0xMiB7XG4gICAgLW1zLWZsZXg6IDAgMCAxMDAlO1xuICAgIGZsZXg6IDAgMCAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDExNzBweCkge1xuICAuY29sLWxnLTEge1xuICAgIC1tcy1mbGV4OiAwIDAgOC4zMzMzMyU7XG4gICAgZmxleDogMCAwIDguMzMzMzMlO1xuICAgIG1heC13aWR0aDogOC4zMzMzMyU7XG4gIH1cblxuICAuY29sLWxnLTIge1xuICAgIC1tcy1mbGV4OiAwIDAgMTYuNjY2NjclO1xuICAgIGZsZXg6IDAgMCAxNi42NjY2NyU7XG4gICAgbWF4LXdpZHRoOiAxNi42NjY2NyU7XG4gIH1cblxuICAuY29sLWxnLTMge1xuICAgIC1tcy1mbGV4OiAwIDAgMjUlO1xuICAgIGZsZXg6IDAgMCAyNSU7XG4gICAgbWF4LXdpZHRoOiAyNSU7XG4gIH1cblxuICAuY29sLWxnLTQge1xuICAgIC1tcy1mbGV4OiAwIDAgMzMuMzMzMzMlO1xuICAgIGZsZXg6IDAgMCAzMy4zMzMzMyU7XG4gICAgbWF4LXdpZHRoOiAzMy4zMzMzMyU7XG4gIH1cblxuICAuY29sLWxnLTUge1xuICAgIC1tcy1mbGV4OiAwIDAgNDEuNjY2NjclO1xuICAgIGZsZXg6IDAgMCA0MS42NjY2NyU7XG4gICAgbWF4LXdpZHRoOiA0MS42NjY2NyU7XG4gIH1cblxuICAuY29sLWxnLTYge1xuICAgIC1tcy1mbGV4OiAwIDAgNTAlO1xuICAgIGZsZXg6IDAgMCA1MCU7XG4gICAgbWF4LXdpZHRoOiA1MCU7XG4gIH1cblxuICAuY29sLWxnLTcge1xuICAgIC1tcy1mbGV4OiAwIDAgNTguMzMzMzMlO1xuICAgIGZsZXg6IDAgMCA1OC4zMzMzMyU7XG4gICAgbWF4LXdpZHRoOiA1OC4zMzMzMyU7XG4gIH1cblxuICAuY29sLWxnLTgge1xuICAgIC1tcy1mbGV4OiAwIDAgNjYuNjY2NjclO1xuICAgIGZsZXg6IDAgMCA2Ni42NjY2NyU7XG4gICAgbWF4LXdpZHRoOiA2Ni42NjY2NyU7XG4gIH1cblxuICAuY29sLWxnLTkge1xuICAgIC1tcy1mbGV4OiAwIDAgNzUlO1xuICAgIGZsZXg6IDAgMCA3NSU7XG4gICAgbWF4LXdpZHRoOiA3NSU7XG4gIH1cblxuICAuY29sLWxnLTEwIHtcbiAgICAtbXMtZmxleDogMCAwIDgzLjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgODMuMzMzMzMlO1xuICAgIG1heC13aWR0aDogODMuMzMzMzMlO1xuICB9XG5cbiAgLmNvbC1sZy0xMSB7XG4gICAgLW1zLWZsZXg6IDAgMCA5MS42NjY2NyU7XG4gICAgZmxleDogMCAwIDkxLjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDkxLjY2NjY3JTtcbiAgfVxuXG4gIC5jb2wtbGctMTIge1xuICAgIC1tcy1mbGV4OiAwIDAgMTAwJTtcbiAgICBmbGV4OiAwIDAgMTAwJTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMzMwcHgpIHtcbiAgLmNvbC1sLTEge1xuICAgIC1tcy1mbGV4OiAwIDAgOC4zMzMzMyU7XG4gICAgZmxleDogMCAwIDguMzMzMzMlO1xuICAgIG1heC13aWR0aDogOC4zMzMzMyU7XG4gIH1cblxuICAuY29sLWwtMiB7XG4gICAgLW1zLWZsZXg6IDAgMCAxNi42NjY2NyU7XG4gICAgZmxleDogMCAwIDE2LjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDE2LjY2NjY3JTtcbiAgfVxuXG4gIC5jb2wtbC0zIHtcbiAgICAtbXMtZmxleDogMCAwIDI1JTtcbiAgICBmbGV4OiAwIDAgMjUlO1xuICAgIG1heC13aWR0aDogMjUlO1xuICB9XG5cbiAgLmNvbC1sLTQge1xuICAgIC1tcy1mbGV4OiAwIDAgMzMuMzMzMzMlO1xuICAgIGZsZXg6IDAgMCAzMy4zMzMzMyU7XG4gICAgbWF4LXdpZHRoOiAzMy4zMzMzMyU7XG4gIH1cblxuICAuY29sLWwtNSB7XG4gICAgLW1zLWZsZXg6IDAgMCA0MS42NjY2NyU7XG4gICAgZmxleDogMCAwIDQxLjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDQxLjY2NjY3JTtcbiAgfVxuXG4gIC5jb2wtbC02IHtcbiAgICAtbXMtZmxleDogMCAwIDUwJTtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICAgIG1heC13aWR0aDogNTAlO1xuICB9XG5cbiAgLmNvbC1sLTcge1xuICAgIC1tcy1mbGV4OiAwIDAgNTguMzMzMzMlO1xuICAgIGZsZXg6IDAgMCA1OC4zMzMzMyU7XG4gICAgbWF4LXdpZHRoOiA1OC4zMzMzMyU7XG4gIH1cblxuICAuY29sLWwtOCB7XG4gICAgLW1zLWZsZXg6IDAgMCA2Ni42NjY2NyU7XG4gICAgZmxleDogMCAwIDY2LjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDY2LjY2NjY3JTtcbiAgfVxuXG4gIC5jb2wtbC05IHtcbiAgICAtbXMtZmxleDogMCAwIDc1JTtcbiAgICBmbGV4OiAwIDAgNzUlO1xuICAgIG1heC13aWR0aDogNzUlO1xuICB9XG5cbiAgLmNvbC1sLTEwIHtcbiAgICAtbXMtZmxleDogMCAwIDgzLjMzMzMzJTtcbiAgICBmbGV4OiAwIDAgODMuMzMzMzMlO1xuICAgIG1heC13aWR0aDogODMuMzMzMzMlO1xuICB9XG5cbiAgLmNvbC1sLTExIHtcbiAgICAtbXMtZmxleDogMCAwIDkxLjY2NjY3JTtcbiAgICBmbGV4OiAwIDAgOTEuNjY2NjclO1xuICAgIG1heC13aWR0aDogOTEuNjY2NjclO1xuICB9XG5cbiAgLmNvbC1sLTEyIHtcbiAgICAtbXMtZmxleDogMCAwIDEwMCU7XG4gICAgZmxleDogMCAwIDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTE3MHB4KSB7XG4gIC5jb2wteGwtMSB7XG4gICAgZmxleDogMCAwIDEwJTtcbiAgICBtYXgtd2lkdGg6IDEwJTtcbiAgfVxuXG4gIC5jb2wteGwtMiB7XG4gICAgZmxleDogMCAwIDIwJTtcbiAgICBtYXgtd2lkdGg6IDIwJTtcbiAgfVxuXG4gIC5jb2wteGwtMyB7XG4gICAgZmxleDogMCAwIDMwJTtcbiAgICBtYXgtd2lkdGg6IDMwJTtcbiAgfVxuXG4gIC5jb2wteGwtNCB7XG4gICAgZmxleDogMCAwIDQwJTtcbiAgICBtYXgtd2lkdGg6IDQwJTtcbiAgfVxuXG4gIC5jb2wteGwtNSB7XG4gICAgZmxleDogMCAwIDUwJTtcbiAgICBtYXgtd2lkdGg6IDUwJTtcbiAgfVxuXG4gIC5jb2wteGwtNiB7XG4gICAgZmxleDogMCAwIDYwJTtcbiAgICBtYXgtd2lkdGg6IDYwJTtcbiAgfVxuXG4gIC5jb2wteGwtNyB7XG4gICAgZmxleDogMCAwIDcwJTtcbiAgICBtYXgtd2lkdGg6IDcwJTtcbiAgfVxuXG4gIC5jb2wteGwtOCB7XG4gICAgZmxleDogMCAwIDgwJTtcbiAgICBtYXgtd2lkdGg6IDgwJTtcbiAgfVxuXG4gIC5jb2wteGwtOSB7XG4gICAgZmxleDogMCAwIDkwJTtcbiAgICBtYXgtd2lkdGg6IDkwJTtcbiAgfVxuXG4gIC5jb2wteGwtMTAge1xuICAgIGZsZXg6IDAgMCAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxufVxuLm1haW4tY29udGFjdHMtdGVsLWFycm93IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG1hcmdpbi1sZWZ0OiA2cHg7XG4gIGJvdHRvbTogMnB4O1xuICBtYXgtd2lkdGg6IDEycHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5tYWluLWNvbnRhY3RzLXRlbC1hcnJvdyBpbWcge1xuICBtaW4td2lkdGg6IDEycHg7XG59XG5cbi5tYWluLWNvbnRhY3RzLXRlbC1udW1iZXJzIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbn1cblxuLm51bWJlcnMtb3BlbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaGVhZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tYm90dG9tOiAxN3B4O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40cywgYmFja2dyb3VuZC1jb2xvciAwLjJzLCAtd2Via2l0LXRyYW5zZm9ybSAwLjRzO1xuICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyIHtcbiAgICBwYWRkaW5nOiAxMXB4IDA7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbn1cbi5oZWFkZXIgLm1lbnUge1xuICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xuICBwYWRkaW5nOiAxMHB4IDBweDtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlYWRlciAubWVudSB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG59XG4uaGVhZGVyIC5tZW51IGxpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmhlYWRlciAubWVudSBsaSBhIHtcbiAgbWFyZ2luLXJpZ2h0OiAzMnB4O1xuICBjb2xvcjogIzAwMDtcbn1cbi5oZWFkZXIgLm1lbnUgbGkgYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEzMDBweCkge1xuICAuaGVhZGVyIC5tZW51IGxpIGEge1xuICAgIG1hcmdpbi1yaWdodDogMTZweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xuICAuaGVhZGVyIC5tZW51IGxpIGEge1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgfVxufVxuLmhlYWRlciAubWVudS13cmFwIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XG4gIC5oZWFkZXIgLm1lbnUtd3JhcCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxufVxuLmhlYWRlciAubWVudS10aW1lIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1yaWdodDogNTZweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIHtcbiAgLmhlYWRlciAubWVudS10aW1lIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gIH1cbn1cbi5oZWFkZXIgLm1lbnUtYWRkcmVzcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmhlYWRlciAubWVudS1pY29uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IC0ycHg7XG4gIGxlZnQ6IC0yNnB4O1xuICBtYXgtd2lkdGg6IDI0cHg7XG4gIGhlaWdodDogMjRweDtcbn1cbi5oZWFkZXIgLm1lbnUtaWNvbiBpbWcge1xuICBtYXgtaGVpZ2h0OiAyNHB4O1xufVxuLmhlYWRlciAubWFpbiB7XG4gIHBhZGRpbmc6IDE4cHggMHB4O1xufVxuLmhlYWRlciAubWFpbi1jb250YWluZXIge1xuICBnYXA6IDMycHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XG4gIC5oZWFkZXIgLm1haW4tY29udGFpbmVyIHtcbiAgICBnYXA6IDIwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlYWRlciAubWFpbi1jb250YWluZXIge1xuICAgIGdhcDogMDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyIC5tYWluIHtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG4uaGVhZGVyIC5tYWluLWNhcmQge1xuICBkaXNwbGF5OiBub25lO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyIC5tYWluLWNhcmQge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tbGVmdDogMTJweDtcbiAgfVxufVxuLmhlYWRlciAubWFpbi1sb2dvIHtcbiAgZmxleDogMCAwIDE5MnB4O1xuICBtYXgtd2lkdGg6IDE5MnB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyIC5tYWluLWxvZ28ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiBpbml0aWFsO1xuICAgIGZsZXg6IGF1dG87XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbn1cbi5oZWFkZXIgLm1haW4tbG9nby1pbWcge1xuICBoZWlnaHQ6IDQwcHg7XG59XG4uaGVhZGVyIC5tYWluLWxvZ28gaW1nIHtcbiAgbWF4LWhlaWdodDogNDBweDtcbn1cbi5oZWFkZXIgLm1haW4tY2F0YWxvZyB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGhlaWdodDogNDBweDtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiYzAwMDA7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHBhZGRpbmc6IDBweCAxNHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyIC5tYWluLWNhdGFsb2cge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDQ4cHg7XG4gICAgd2lkdGg6IDQ4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDQ4cHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlYWRlciAubWFpbi1jYXRhbG9nLXdyYXBwZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGVuZDtcbiAgICBmbGV4OiAwIDAgMTM0cHg7XG4gICAgbWF4LXdpZHRoOiAxMzRweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAuaGVhZGVyIC5tYWluLWNhdGFsb2ctd3JhcHBlciB7XG4gICAgZmxleDogMCAwIDEwOHB4O1xuICAgIHBhZGRpbmctbGVmdDogMTJweDtcbiAgfVxufVxuLmhlYWRlciAubWFpbi1jYXRhbG9nLXRleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTI3MHB4KSB7XG4gIC5oZWFkZXIgLm1haW4tY2F0YWxvZy10ZXh0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uaGVhZGVyIC5tYWluLXRvZ2dsZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDE4cHg7XG4gIGhlaWdodDogMnB4O1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvdHRvbTogLTJweDtcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTM1MHB4KSB7XG4gIC5oZWFkZXIgLm1haW4tdG9nZ2xlciB7XG4gICAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gIH1cbn1cbi5oZWFkZXIgLm1haW4tdG9nZ2xlcjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMThweDtcbiAgaGVpZ2h0OiAycHg7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgdG9wOiAtNnB4O1xufVxuLmhlYWRlciAubWFpbi10b2dnbGVyOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDE4cHg7XG4gIGhlaWdodDogMnB4O1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHRvcDogLTEycHg7XG59XG4uaGVhZGVyIC5tYWluLWNvbnRhY3RzIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgcGFkZGluZy1yaWdodDogMTJweDtcbn1cbi5oZWFkZXIgLm1haW4tY29udGFjdHMgYSB7XG4gIGNvbG9yOiAjMDAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyIC5tYWluLWNvbnRhY3RzIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uaGVhZGVyIC5tYWluLWNvbnRhY3RzLXRlbCwgLmhlYWRlciAubWFpbi1jb250YWN0cy1lbWFpbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctbGVmdDogMjZweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIHtcbiAgLmhlYWRlciAubWFpbi1jb250YWN0cy10ZWwsIC5oZWFkZXIgLm1haW4tY29udGFjdHMtZW1haWwge1xuICAgIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIH1cbn1cbi5oZWFkZXIgLm1haW4tY29udGFjdHMtdGVsOmhvdmVyLCAuaGVhZGVyIC5tYWluLWNvbnRhY3RzLWVtYWlsOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG4uaGVhZGVyIC5tYWluLWNvbnRhY3RzLWljb24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAlLCAtNTAlKTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDA7XG4gIG1heC13aWR0aDogMjBweDtcbiAgaGVpZ2h0OiAyMHB4O1xufVxuLmhlYWRlciAubWFpbi1jb250YWN0cy1pY29uIGltZyB7XG4gIG1heC1oZWlnaHQ6IDIwcHg7XG59XG4uaGVhZGVyIC5tYWluLW1lbnUge1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXIgLm1haW4tbWVudSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmhlYWRlciAubWFpbi1tZW51LXNlcnZpY2VzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG1hcmdpbi1sZWZ0OiAyNnB4O1xuICB0cmFuc2l0aW9uOiAwLjFzIGVhc2U7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XG4gIC5oZWFkZXIgLm1haW4tbWVudS1zZXJ2aWNlcyB7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIH1cbn1cbi5oZWFkZXIgLm1haW4tbWVudS1zZXJ2aWNlczpob3ZlciB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbi5oZWFkZXIgLm1haW4tbWVudS1zZXJ2aWNlcy1pbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uaGVhZGVyIC5tYWluLW1lbnUtc2VydmljZXMtc3ZnIHtcbiAgbWF4LXdpZHRoOiAyNHB4O1xuICBtYXgtaGVpZ2h0OiAyNHB4O1xufVxuLmhlYWRlciAubWFpbi1tZW51LXNlcnZpY2VzLXRleHQge1xuICBmb250LXNpemU6IDAuODc1cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xuICAuaGVhZGVyIC5tYWluLW1lbnUtc2VydmljZXMtdGV4dCB7XG4gICAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gIH1cbn1cbi5oZWFkZXIgLm1haW4tbWVudS1zZXJ2aWNlcy1sYWJlbCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMTZweDtcbiAgYmFja2dyb3VuZDogI2JjMDAwMDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGNvbG9yOiAjZmZmO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNTAlKTtcbiAgdG9wOiAzcHg7XG4gIGxlZnQ6IDUwJTtcbn1cbi5oZWFkZXIgLm5hdiB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGdhcDogMnB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyIC5uYXYge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5oZWFkZXIgLm5hdi13cmFwcGVyIHtcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbn1cbi5oZWFkZXIgLm5hdi1pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMTVweCAxNXB4O1xuICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZsZXg6IDAgMCAyMCU7XG4gIG1heC13aWR0aDogMjAlO1xuICBjb2xvcjogIzAwMDtcbn1cbi5oZWFkZXIgLm5hdi1pdGVtOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2VkZWRlZDtcbn1cbi5oZWFkZXIgLm5hdi1pdGVtLWltZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uaGVhZGVyIC5uYXYtaXRlbS1pbWcgaW1nIHtcbiAgbWF4LWhlaWdodDogMzJweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMzQwcHgpIHtcbiAgLmhlYWRlciAubmF2LWl0ZW0taW1nIHtcbiAgICBsZWZ0OiAxMHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTI0MHB4KSB7XG4gIC5oZWFkZXIgLm5hdi1pdGVtLWltZyB7XG4gICAgbGVmdDogMDtcbiAgfVxufVxuLmhlYWRlciAubmF2LXNlbGVjdCB7XG4gIGNvbG9yOiAjYmMwMDAwO1xufVxuLmhlYWRlciAubW9iLW1lbnUge1xuICBkaXNwbGF5OiBub25lO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyIC5tb2ItbWVudSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy1yaWdodDogMjRweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gIC5oZWFkZXIgLm1vYi1tZW51IHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXIgLm1vYi1tZW51LWltZyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1heC13aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7XG4gICAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAuaGVhZGVyIC5tb2ItbWVudS1pbWcge1xuICAgIG1hcmdpbi1sZWZ0OiA4cHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlYWRlciAubW9iLW1lbnUtaW1nIGltZyB7XG4gICAgbWF4LWhlaWdodDogMzJweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDM1MHB4KSB7XG4gIC5oZWFkZXIgLm1vYi1tZW51LWltZyBpbWcge1xuICAgIG1heC1oZWlnaHQ6IDI4cHg7XG4gIH1cbn1cblxuLm1vYmlsZS1zZXBhciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5tb2JpbGUtY2FyZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIG1heC13aWR0aDogMzJweDtcbn1cbi5tb2JpbGUtY2FyZCBpbWcge1xuICBtYXgtaGVpZ2h0OiAzMnB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDM1MHB4KSB7XG4gIC5tb2JpbGUtY2FyZCBpbWcge1xuICAgIG1heC1oZWlnaHQ6IDI4cHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLm1vYmlsZS1jYXJkIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLXJpZ2h0OiAzMnB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgLm1vYmlsZS1jYXJkIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAubW9iaWxlLXNlcGFyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG4gIC5tb2JpbGUtc2VwYXI6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDFweDtcbiAgICBoZWlnaHQ6IDgwcHg7XG4gICAgYmFja2dyb3VuZDogI2QzZDNkMztcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gIH1cbn1cbi5tYWluLXNlYXJjaC1mb3JtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLm1haW4tc2VhcmNoLWZvcm0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5tYWluLXNlYXJjaC1pbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItY29sb3I6ICNkM2QzZDM7XG4gIHBhZGRpbmctcmlnaHQ6IDg3cHg7XG59XG4ubWFpbi1zZWFyY2gtYnRuIHtcbiAgYm9yZGVyOiBub25lO1xuICBoZWlnaHQ6IDQwcHg7XG4gIHdpZHRoOiA4MHB4O1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYTQ0NTU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAlLCAtNTAlKTtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAwO1xuICBib3JkZXItcmFkaXVzOiAwIDVweCA1cHggMDtcbn1cbi5tYWluLXNlYXJjaC1idG4taW1nIHtcbiAgbWF4LXdpZHRoOiAyNHB4O1xuICBoZWlnaHQ6IDI0cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm90dG9tOiAtMnB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4ubWFpbi1zZWFyY2gtYnRuLWltZyBpbWcge1xuICBtYXgtaGVpZ2h0OiAyNHB4O1xufVxuXG4uaGVhZGVyLmhlYWRlckNhcmRfZml4ZWQge1xuICBib3gtc2hhZG93OiBub25lO1xufVxuXG4uaGVhZGVyX2ZpeGVkIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICB6LWluZGV4OiA5OTk7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMHB4LCAwcHgsIDBweCk7XG59XG4uaGVhZGVyX2ZpeGVkIC5tYWluIHtcbiAgcGFkZGluZzogMTdweCAwcHg7XG59XG5cbi53cmFwcGVyX2ZpeGVkIHtcbiAgcGFkZGluZy10b3A6IDE5NXB4O1xufVxuXG4uaGVhZGVyQ2FyZF9maXhlZCB7XG4gIGJveC1zaGFkb3c6IGluaXRpYWw7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZDNkM2QzO1xufVxuXG4uZm9vdGVyIHtcbiAgcGFkZGluZzogNDBweCAwcHg7XG4gIGJhY2tncm91bmQ6ICMxZDI2MmM7XG4gIGNvbG9yOiAjZmZmO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmc6IDMycHggMHB4IDM3cHggMHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmZvb3RlciB1bCBsaSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgfVxufVxuLmZvb3RlciB1bCBsaSBhIHtcbiAgY29sb3I6ICNmZmY7XG4gIG9wYWNpdHk6IDAuNTtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbn1cbi5mb290ZXIgdWwgbGkgYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5mb290ZXIgdWwgbGkgYSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgfVxufVxuLmZvb3Rlci10b3Age1xuICBwYWRkaW5nLWJvdHRvbTogMjdweDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuZm9vdGVyLXRvcCB7XG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgfVxufVxuLmZvb3Rlci10b3AtdGl0bGUge1xuICBmb250LXdlaWdodDogNzAwO1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmZvb3Rlci10b3AtdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbiAgLmZvb3Rlci10b3AtdGl0bGUuZm9vdGVyLW9wZW4ge1xuICAgIG1hcmdpbi1ib3R0b206IDIycHg7XG4gIH1cbiAgLmZvb3Rlci10b3AtdGl0bGU6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgI2ZmZjtcbiAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCAjZmZmO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XG4gICAgd2lkdGg6IDhweDtcbiAgICBoZWlnaHQ6IDhweDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDVweDtcbiAgfVxuICAuZm9vdGVyLXRvcC10aXRsZS5mb290ZXItb3BlbjphZnRlciB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgfVxuICAuZm9vdGVyLXRvcC10aXRsZSArIHVsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5mb290ZXItdG9wLXRpdGxlLmZvb3Rlci1vcGVuICsgdWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmZvb3Rlci10b3Atc2VydmljZXMge1xuICAgIG1hcmdpbi1ib3R0b206IDQ0cHg7XG4gIH1cbiAgLmZvb3Rlci10b3Atc2VydmljZXMgLmZvb3Rlci10b3Atd3JhcCB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5mb290ZXItdG9wLXdyYXAge1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gICAgcGFkZGluZzogMjBweCAxNXB4O1xuICAgIG1hcmdpbjogMHB4IC0yMHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XG4gIC5mb290ZXItdG9wLWFib3V0LXdyYXBwZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDE5cHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuZm9vdGVyLXRvcC1hYm91dC13cmFwcGVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XG4gIC5mb290ZXItdG9wLWluZm8td3JhcHBlciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5mb290ZXItdG9wLWluZm8td3JhcHBlciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5mb290ZXItdG9wLWNvbnRhY3Qge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuLmZvb3Rlci10b3AtcGF5IHtcbiAgbWFyZ2luLWJvdHRvbTogMjdweDtcbn1cbi5mb290ZXItdG9wLWxvZ28ge1xuICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gIG1heC13aWR0aDogMTUwcHg7XG59XG4uZm9vdGVyLXRvcC1sb2dvIGltZyB7XG4gIG1heC1oZWlnaHQ6IDQ4cHg7XG59XG4uZm9vdGVyLXRvcC13cmFwcGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMjdweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuZm9vdGVyLXRvcC13cmFwcGVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG59XG4uZm9vdGVyLXRvcC1yZXNvdXJjZSAuZm9vdGVyLXRvcC10aXRsZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmZvb3Rlci10b3AtcmVzb3VyY2UgLmZvb3Rlci10b3AtdGl0bGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5mb290ZXItdG9wLXJlc291cmNlIC5mb290ZXItdG9wLXRpdGxlICsgLmZvb3Rlci10b3AtbWVkaWEtd3JhcHBlciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuZm9vdGVyLXRvcC1yZXNvdXJjZSAuZm9vdGVyLXRvcC10aXRsZS5mb290ZXItb3BlbiArIC5mb290ZXItdG9wLW1lZGlhLXdyYXBwZXIge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuICAuZm9vdGVyLXRvcC1yZXNvdXJjZSAuZm9vdGVyLXRvcC10aXRsZSArIC5mb290ZXItYm90dG9tLWluZm8ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmZvb3Rlci10b3AtcmVzb3VyY2UgLmZvb3Rlci10b3AtdGl0bGUuZm9vdGVyLW9wZW4gKyAuZm9vdGVyLWJvdHRvbS1pbmZvIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIHtcbiAgLmZvb3Rlci10b3AtcmVzb3VyY2Uge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuZm9vdGVyLXRvcC1yZXNvdXJjZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuLmZvb3Rlci10b3AtcmVzb3VyY2Utc3ViIHtcbiAgbWFyZ2luLWJvdHRvbTogMzRweDtcbn1cbi5mb290ZXItdG9wLXJlc291cmNlLXdyYXBwZXIge1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBvcGFjaXR5OiAwLjU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmZvb3Rlci10b3AtcmVzb3VyY2Utd3JhcHBlciB7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgfVxufVxuLmZvb3Rlci1jb250YWN0cyB7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG59XG4uZm9vdGVyLWNvbnRhY3RzLWxpbmsge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMS4zNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTI0MHB4KSBhbmQgKG1pbi13aWR0aDogMTE3MHB4KSB7XG4gIC5mb290ZXItY29udGFjdHMtbGluayB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICB9XG59XG4uZm9vdGVyLWNvbnRhY3RzLWxpbms6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi5mb290ZXItY29udGFjdHMtbGluay1pbWcge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm90dG9tOiAtMnB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIG1heC13aWR0aDogMjBweDtcbn1cbi5mb290ZXItc3RyZWV0IHtcbiAgbWF4LXdpZHRoOiAyMTVweDtcbiAgb3BhY2l0eTogMC41O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5mb290ZXItc3RyZWV0IHtcbiAgICBtYXgtd2lkdGg6IGluaXRpYWw7XG4gIH1cbn1cbi5mb290ZXItY2xvY2sge1xuICBvcGFjaXR5OiAwLjU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XG4gIC5mb290ZXItY2xvY2sge1xuICAgIG1hcmdpbi1ib3R0b206IDI2cHg7XG4gIH1cbn1cbi5mb290ZXItYm90dG9tIHtcbiAgcGFkZGluZy10b3A6IDMxcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmZvb3Rlci1ib3R0b20ge1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmZvb3Rlci1ib3R0b20tbGlua3Mge1xuICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4uZm9vdGVyLWJvdHRvbS1saW5rcy10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1ib3R0b206IDExcHg7XG59XG4uZm9vdGVyLWJvdHRvbS1saW5rcy1saW5rIHtcbiAgbWF4LXdpZHRoOiA0MHB4O1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbn1cbi5mb290ZXItYm90dG9tLWxpbmtzLWxpbmsgaW1nIHtcbiAgbWF4LWhlaWdodDogNDBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuZm9vdGVyLWJvdHRvbS1zb2NpYWxzIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xuICAuZm9vdGVyLWJvdHRvbS1zb2NpYWxzLXdyYXBwZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuZm9vdGVyLWJvdHRvbS1zb2NpYWxzLXdyYXBwZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuLmZvb3Rlci1ib3R0b20tc29jaWFscy10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1ib3R0b206IDExcHg7XG59XG4uZm9vdGVyLWJvdHRvbS1zb2NpYWxzLWxpbmsge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgbWluLXdpZHRoOiA0MHB4O1xuICBtaW4taGVpZ2h0OiA0MHB4O1xuICBvcGFjaXR5OiAwLjU7XG59XG4uZm9vdGVyLWJvdHRvbS1zb2NpYWxzLWxpbms6aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuLmZvb3Rlci1ib3R0b20tc29jaWFscy1saW5rIHN2ZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHdpZHRoOiAyNHB4O1xuICBoZWlnaHQ6IDI0cHg7XG4gIGZpbGw6ICNmZmY7XG59XG4uZm9vdGVyLWJvdHRvbS1yZWl0LXRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luLWJvdHRvbTogMTFweDtcbn1cbi5mb290ZXItYm90dG9tLXJlaXQtbGluayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTkwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogMHB4IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBsaW5lLWhlaWdodDogMzhweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMjQwcHgpIGFuZCAobWluLXdpZHRoOiAxMTcwcHgpIHtcbiAgLmZvb3Rlci1ib3R0b20tcmVpdC1saW5rIHtcbiAgICB3aWR0aDogMTc1cHg7XG4gIH1cbn1cbi5mb290ZXItYm90dG9tLXJlaXQtbGluayBzcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICNmZmY7XG59XG4uZm9vdGVyLWJvdHRvbS1yZWl0LWxpbmsgLmZpeC1tYXAge1xuICB0b3A6IDVweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIHtcbiAgLmZvb3Rlci1ib3R0b20tcmVpdC1saW5rIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xuICB9XG59XG4uZm9vdGVyLWJvdHRvbS1yZWl0LW1hcCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWF4LXdpZHRoOiAxMDBweDtcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogM3B4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEyNDBweCkgYW5kIChtaW4td2lkdGg6IDExNzBweCkge1xuICAuZm9vdGVyLWJvdHRvbS1yZWl0LW1hcCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG59XG4uZm9vdGVyLWJvdHRvbS1yZWl0LW1hcCBpbWcge1xuICBtYXgtaGVpZ2h0OiAyNHB4O1xufVxuLmZvb3Rlci1ib3R0b20tcmVpdC1zdGFyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXgtd2lkdGg6IDIwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAycHg7XG59XG4uZm9vdGVyLWJvdHRvbS1yZWl0LXN0YXIgaW1nIHtcbiAgbWF4LWhlaWdodDogMjBweDtcbn1cbi5mb290ZXItYm90dG9tLWluZm8ge1xuICBvcGFjaXR5OiAwLjU7XG59XG4uZm9vdGVyLWJvdHRvbS1pbmZvLXN1YnRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogNjBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIHtcbiAgLmZvb3Rlci1ib3R0b20taW5mby1zdWJ0aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxufVxuLmZvb3Rlci1ib3R0b20taW5mby1jb29weXJpZ2h0IHtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xufVxuXG4uZm9vdGVyLXRvcC13cmFwIHtcbiAgbWFyZ2luLWJvdHRvbTogMjdweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xuICAuY29sLW5vbmUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuY29sLW5vbmUtNyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxucCB7XG4gIHBhZGRpbmc6IDVweCAwcHg7XG59XG5cbnVsLFxub2wsXG5saSB7XG4gIHBhZGRpbmc6IDBweDtcbiAgbWFyZ2luOiAwcHg7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG4uaDEsXG4uaDIsXG4uaDMsXG4uaDQsXG4uaDUge1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBsaW5lLWhlaWdodDogMS40MjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuaDEsXG4uaDEge1xuICBmb250LXNpemU6IDIuNXJlbTtcbn1cblxuaDIsXG4uaDIge1xuICBmb250LXNpemU6IDJyZW07XG59XG5cbmgzLFxuLmgzIHtcbiAgZm9udC1zaXplOiAxLjM3NXJlbTtcbn1cblxuaDQsXG4uaDQge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xufVxuXG5oNSxcbi5oNSB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cblxuYSB7XG4gIGNvbG9yOiAjMWE2NmFlO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbmIsXG51bCxcbmxpIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuYnV0dG9uIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4udWktYnRuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDQ4cHg7XG4gIGxpbmUtaGVpZ2h0OiA0NnB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjb2xvcjogIzAwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgdHJhbnNpdGlvbjogMC4zcyBlYXNlO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG4udWktYnRuOmhvdmVyIHtcbiAgb3BhY2l0eTogMC44O1xufVxuXG4ucGFnZS1zdGlja2VycyB7XG4gIG1hcmdpbi1ib3R0b206IDEzcHg7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbi8qINGF0YDQvtC8LCDRgdCw0YTQsNGA0LggKi9cbi5wYWdlLXN0aWNrZXJzOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIHdpZHRoOiAwO1xufVxuXG4vKiBpZSAxMCsgKi9cbi5wYWdlLXN0aWNrZXJzIHtcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xufVxuXG4vKiDRhNGEICjRgdCy0L7QudGB0YLQstC+INCx0L7Qu9GM0YjQtSDQvdC1INGA0LDQsdC+0YLQsNC10YIsINC00YDRg9Cz0LjRhSDRgdC/0L7RgdC+0LHQvtCyINGC0L7QttC1INC90LXRgikqL1xuLnBhZ2Utc3RpY2tlcnMge1xuICBvdmVyZmxvdzogLW1vei1zY3JvbGxiYXJzLW5vbmU7XG59XG5cbi51aS1zdGlja2VyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDMycHg7XG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2U7XG59XG5cbi5zdGlja2VyLXllbGxvdyB7XG4gIGNvbG9yOiAjZmZjMTAwO1xuICBib3JkZXItY29sb3I6ICNmZmMxMDA7XG59XG4uc3RpY2tlci15ZWxsb3c6aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogI2ZmYzEwMDtcbn1cblxuLnN0aWNrZXItYmx1ZSB7XG4gIGNvbG9yOiAjMWE2NmFlO1xuICBib3JkZXItY29sb3I6ICMxYTY2YWU7XG59XG4uc3RpY2tlci1ibHVlOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMxYTY2YWU7XG59XG5cbi5zdGlja2VyLWdyZWVuIHtcbiAgY29sb3I6ICM1NTllNTM7XG4gIGJvcmRlci1jb2xvcjogIzU1OWU1Mztcbn1cbi5zdGlja2VyLWdyZWVuOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICM1NTllNTM7XG59XG5cbi5zdGlja2VyLXB1cnBsZSB7XG4gIGNvbG9yOiAjN2QzZThjO1xuICBib3JkZXItY29sb3I6ICM3ZDNlOGM7XG59XG4uc3RpY2tlci1wdXJwbGU6aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzdkM2U4Yztcbn1cblxuLnN0aWNrZXItcmVkIHtcbiAgY29sb3I6ICNiYzAwMDA7XG4gIGJvcmRlci1jb2xvcjogI2JjMDAwMDtcbn1cbi5zdGlja2VyLXJlZDpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjYmMwMDAwO1xufVxuXG4uc3RpY2tlci1vcmFuZ2Uge1xuICBjb2xvcjogI2YyODcwNTtcbiAgYm9yZGVyLWNvbG9yOiAjZjI4NzA1O1xufVxuLnN0aWNrZXItb3JhbmdlOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICNmMjg3MDU7XG59XG5cbi5zdGlja2VyLWN5YW4ge1xuICBjb2xvcjogIzgzZGJlNDtcbiAgYm9yZGVyLWNvbG9yOiAjODNkYmU0O1xufVxuLnN0aWNrZXItY3lhbjpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjODNkYmU0O1xufVxuXG5bY2xhc3MqPS1icmVhZGNydW1ic10ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuW2NsYXNzKj0tYnJlYWRjcnVtYnNdIGEge1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBjb2xvcjogIzAwMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5bY2xhc3MqPS1icmVhZGNydW1ic10gYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuW2NsYXNzKj0tYnJlYWRjcnVtYnNdIDpsYXN0LWNoaWxkIHtcbiAgb3BhY2l0eTogMC41O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5bY2xhc3MqPS1icmVhZGNydW1ic10gOmxhc3QtY2hpbGQgaSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5bY2xhc3MqPS1icmVhZGNydW1ic10gaSB7XG4gIG1hcmdpbi1sZWZ0OiA4cHg7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbi5wYWdlLWJyZWFkY3J1bWJzIHtcbiAgbWFyZ2luLWJvdHRvbTogMjhweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xuICAucGFnZS1icmVhZGNydW1icyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjRweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5wYWdlLWJyZWFkY3J1bWJzIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIH1cbiAgLnBhZ2UtYnJlYWRjcnVtYnMgaSxcbi5wYWdlLWJyZWFkY3J1bWJzIGEge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnBhZ2UtYnJlYWRjcnVtYnMgYTpudGgtbGFzdC1jaGlsZCgtbiszKSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG4gIC5wYWdlLWJyZWFkY3J1bWJzIGk6bnRoLWxhc3QtY2hpbGQoLW4rMikge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxufVxuLnBhZ2UtYnJlYWRjcnVtYnM6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDA7XG59XG5cbi5wYWdlLWJyZWFkY3J1bWJzIHtcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xufVxuXG4ucGFnZS1icmVhZGNydW1icyB7XG4gIG92ZXJmbG93OiAtbW96LXNjcm9sbGJhcnMtbm9uZTtcbn1cblxuLnVpLWlucHV0IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDQwcHg7XG4gIGxpbmUtaGVpZ2h0OiAzOHB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBwYWRkaW5nOiAwcHggMTZweDtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGNvbG9yOiAjMDAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjODA4MDgwO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgdHJhbnNpdGlvbjogMC4zcyBlYXNlO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG4udWktaW5wdXQ6aG92ZXIge1xuICBvcGFjaXR5OiAwLjg7XG59XG5cbltjbGFzcyo9LXJhdGluZ10ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cblxuW2NsYXNzKj0tcmF0aW5nLXZhbHVlXSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHBhZGRpbmctbGVmdDogOHB4O1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xufVxuXG5bY2xhc3MqPS1yYXRpbmctYm9keV0ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1zaXplOiAxLjU2MjVyZW07XG59XG5bY2xhc3MqPS1yYXRpbmctYm9keV06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi4piF4piF4piF4piF4piFXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogI0QzRDNEMztcbn1cblxuW2NsYXNzKj0tcmF0aW5nLWl0ZW1zXSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xufVxuXG5bY2xhc3MqPS1yYXRpbmctaXRlbV0ge1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9wYWNpdHk6IDA7XG59XG5cbltjbGFzcyo9LXJhdGluZy1hY3RpdmVdIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5bY2xhc3MqPS1yYXRpbmctYWN0aXZlXTo6YmVmb3JlIHtcbiAgY29udGVudDogXCLimIXimIXimIXimIXimIVcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGNvbG9yOiAjRkZDMTAwO1xufVxuXG4uZG9jLWxpbmstZG93bmxvYWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGJvcmRlcjogMXB4IHNvbGlkICNEM0QzRDM7XG4gIHBhZGRpbmc6IDdweCAxNnB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDY0cHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcbn1cbi5kb2MtbGluay1kb3dubG9hZC10aXRsZSB7XG4gIHdpZHRoOiA3MCU7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGNvbG9yOiAjMDAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEzNTVweCkge1xuICAuZG9jLWxpbmstZG93bmxvYWQtdGl0bGUge1xuICAgIHdpZHRoOiAyMTNweDtcbiAgfVxufVxuLmRvYy1saW5rLWRvd25sb2FkLWZvcm1hdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uZG9jLWxpbmstZG93bmxvYWQtZm9ybWF0LWluZm8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIG1hcmdpbi1yaWdodDogMTZweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmRvYy1saW5rLWRvd25sb2FkLWZvcm1hdC1pbmZvIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uZG9jLWxpbmstZG93bmxvYWQtZm9ybWF0LWluZm8gc3BhbiB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cbi5kb2MtbGluay1kb3dubG9hZC1mb3JtYXQtaWNvbiB7XG4gIGxpbmUtaGVpZ2h0OiAwO1xufVxuLmRvYy1saW5rLWRvd25sb2FkOmhvdmVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4ucHJvZHVjdC1pdGVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDE2cHggMjBweCAyNHB4IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMTZweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuLnByb2R1Y3QtaXRlbS1saW5rcyB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4ucHJvZHVjdC1pdGVtLWluc3RhbGxtZW50cyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDUwcHgpO1xuICBoZWlnaHQ6IDI0cHg7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE0NDU1O1xuICBwYWRkaW5nOiAwIDE2cHg7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cbi5wcm9kdWN0LWl0ZW0taW5zdGFsbG1lbnRzOmhvdmVyIHtcbiAgb3BhY2l0eTogMC41O1xufVxuLnByb2R1Y3QtaXRlbS1vcGVuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMjRweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcbiAgd2lkdGg6IDM2cHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi5wcm9kdWN0LWl0ZW0tb3Blbjpob3ZlciB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbi5wcm9kdWN0LWl0ZW0tb3BlbiBpbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuLnByb2R1Y3QtaXRlbS1pbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiA0NXB4O1xuICBtYXgtaGVpZ2h0OiAyMDBweDtcbn1cbi5wcm9kdWN0LWl0ZW0tc3RhdHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG59XG4ucHJvZHVjdC1pdGVtLXJhaXQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiA2NHB4O1xuICBoZWlnaHQ6IDI0cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmMxMDA7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cbi5wcm9kdWN0LWl0ZW0tcmFpdC1zcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbn1cbi5wcm9kdWN0LWl0ZW0tY29kZSB7XG4gIG9wYWNpdHk6IDAuNTtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi5wcm9kdWN0LWl0ZW0tY29kZS1udW1iZXIge1xuICBmb250LXdlaWdodDogNjAwO1xufVxuLnByb2R1Y3QtaXRlbS10aXRsZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMTNweDtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgd2hpdGUtc3BhY2U6IGluaXRpYWw7XG4gIGNvbG9yOiAjMDAwO1xufVxuLnByb2R1Y3QtaXRlbS10aXRsZTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuLnByb2R1Y3QtaXRlbS1wcmljZSB7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG4gIGZvbnQtc2l6ZTogMS4zNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG4ucHJvZHVjdC1pdGVtLXByaWNlLXNwYW4ge1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG4ucHJvZHVjdC1pdGVtLXByaWNlLW9sZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IFwiUG9wcGluc1wiLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzgwODA4MDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbi5wcm9kdWN0LWl0ZW0tYnV0dG9ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ucHJvZHVjdC1pdGVtLWJ0biB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSA5OHB4KTtcbiAgaGVpZ2h0OiA0MHB4O1xuICBsaW5lLWhlaWdodDogNDBweDtcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiYzAwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHBhZGRpbmc6IDAgMTJweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5wcm9kdWN0LWl0ZW0tYnRuOmhvdmVyIHtcbiAgb3BhY2l0eTogMC41O1xufVxuLnByb2R1Y3QtaXRlbS1idG4gaW1nIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5wcm9kdWN0LWl0ZW0tbGlrZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuLnByb2R1Y3QtaXRlbS1saWtlIGltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG4ucHJvZHVjdC1pdGVtLWxpa2U6aG92ZXIge1xuICBvcGFjaXR5OiAwLjU7XG59XG4ucHJvZHVjdC1pdGVtLWFkZCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuLnByb2R1Y3QtaXRlbS1hZGQ6aG92ZXIge1xuICBvcGFjaXR5OiAwLjU7XG59XG4ucHJvZHVjdC1pdGVtLXNob3cge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDI7XG59XG4ucHJvZHVjdC1pdGVtLXNob3cgdWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDExO1xufVxuLnByb2R1Y3QtaXRlbS1zaG93LWxpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbiAgaGVpZ2h0OiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cbi5wcm9kdWN0LWl0ZW0tZGVzY3JpcHRpb24ge1xuICBkaXNwbGF5OiBub25lO1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAxNnB4O1xuICB0b3A6IDk5JTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgei1pbmRleDogNDtcbiAgcGFkZGluZzogMCAxNnB4O1xuICBtYXJnaW46IDAgLTE2cHg7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuLnByb2R1Y3QtaXRlbS1pbmZvIHtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBmb250LXNpemU6IDAuODc1cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucHJvZHVjdC1pdGVtLWluZm8ge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgfVxufVxuLnByb2R1Y3QtaXRlbS1pbmZvLXNwYW4ge1xuICBmb250LXdlaWdodDogNjAwO1xufVxuLnByb2R1Y3Qtb3Blbjpob3ZlciAucHJvZHVjdC1pdGVtLWxpa2Uge1xuICBib3gtc2hhZG93OiBub25lO1xufVxuLnByb2R1Y3Qtb3Blbjpob3ZlciAucHJvZHVjdC1pdGVtLXNob3cge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5wcm9kdWN0LW9wZW46aG92ZXIgLnByb2R1Y3QtaXRlbS1pbWcge1xuICBvcGFjaXR5OiAwLjU7XG59XG4ucHJvZHVjdC1vcGVuOmhvdmVyIC5wcm9kdWN0LWl0ZW0tYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJhNDQ1NTtcbn1cbi5wcm9kdWN0LW9wZW46aG92ZXIgLnByb2R1Y3QtaXRlbS1wcmljZS1vbGQge1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG4ucHJvZHVjdC1vcGVuOmhvdmVyIC5wcm9kdWN0LWl0ZW0tZGVzY3JpcHRpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5wcm9kdWN0LW9wZW46aG92ZXIgLnByb2R1Y3QtaXRlbS1vcGVuIGltZyB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgxODBkZWcpO1xufVxuXG4ucHJvZHVjdC1ibHVlIHtcbiAgY29sb3I6ICMxYTY2YWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMxYTY2YWU7XG59XG4ucHJvZHVjdC1ibHVlOmhvdmVyIHtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxYTY2YWU7XG59XG5cbi5wcm9kdWN0LWdyZWVuIHtcbiAgY29sb3I6ICM1NTllNTM7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM1NTllNTM7XG59XG4ucHJvZHVjdC1ncmVlbjpob3ZlciB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU5ZTUzO1xufVxuXG4ucHJvZHVjdC1wdXJwbGUge1xuICBjb2xvcjogIzdkM2U4YztcbiAgYm9yZGVyOiAxcHggc29saWQgIzdkM2U4Yztcbn1cbi5wcm9kdWN0LXB1cnBsZTpob3ZlciB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2QzZThjO1xufVxuXG4ucHJvZHVjdC1yZWQge1xuICBjb2xvcjogI2JjMDAwMDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2JjMDAwMDtcbn1cbi5wcm9kdWN0LXJlZDpob3ZlciB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmMwMDAwO1xufVxuXG4ucHJvZHVjdC1vcmFuZ2Uge1xuICBjb2xvcjogI2YyODcwNTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2YyODcwNTtcbn1cbi5wcm9kdWN0LW9yYW5nZTpob3ZlciB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjI4NzA1O1xufVxuXG4ucHJvZHVjdC1jeWFuIHtcbiAgY29sb3I6ICM4M2RiZTQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4M2RiZTQ7XG59XG4ucHJvZHVjdC1jeWFuOmhvdmVyIHtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4M2RiZTQ7XG59XG5cbi5wcm9kdWN0LXByaWNlIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm9kdWN0LWl0ZW0tYnRuLXNwYW4ge1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLnByb2R1Y3QtaGVpZ2h0OmhvdmVyIHtcbiAgaGVpZ2h0OiA1NTlweDtcbn1cbi5wcm9kdWN0LWhlaWdodCAucHJvZHVjdC1pdGVtLWRlc2NyaXB0aW9uIHtcbiAgdG9wOiA4OCU7XG59XG5cbi5wcm9kdWN0LWhlaWdodC1hdXRvIHtcbiAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG59XG4ucHJvZHVjdC1oZWlnaHQtYXV0bzpob3ZlciAucHJvZHVjdC1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogNzBweDtcbn1cblxuLmNpcmNsZS1pbmZvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG4gIHRvcDogMnB4O1xuICBoZWlnaHQ6IDE2cHg7XG4gIHdpZHRoOiAxNnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5jaXJjbGUtaW5mbzpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkM2QzZDM7XG59XG4uY2lyY2xlLWluZm86aG92ZXIgLmNpcmNsZS1pbmZvLXN2ZyB7XG4gIGZpbGw6ICNmZmY7XG59XG4uY2lyY2xlLWluZm8tc3ZnIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogNXB4O1xuICBoZWlnaHQ6IDhweDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIGZpbGw6ICNkM2QzZDM7XG59XG4uY2lyY2xlLWluZm8tdGV4dCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDMxOHB4O1xuICBsZWZ0OiAyM3B4O1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgcGFkZGluZzogMTdweCAxOHB4IDE5cHggMjVweDtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5jaXJjbGUtaW5mbzpob3ZlciAuY2lyY2xlLWluZm8tdGV4dCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmJ0bi1mZWVkYmFjayB7XG4gIHdpZHRoOiAyMDBweDtcbiAgaGVpZ2h0OiA0OHB4O1xuICBsaW5lLWhlaWdodDogNDhweDtcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAuY29sLTAge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5jYXJkLXN0aWNreSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgd2lkdGg6IDEwMCU7XG4gIHotaW5kZXg6IDEwO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuLmNhcmQtc3RpY2t5LXdyYXBwZXIge1xuICBwYWRkaW5nOiAxMHB4IDBweDtcbn1cbi5jYXJkLXN0aWNreS1idG4ge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogI2JjMDAwMDtcbiAgY29sb3I6ICNmZmY7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXJkLXN0aWNreS1idG4ge1xuICAgIGZvbnQtc2l6ZTogMDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5jYXJkLXN0aWNreS1idG4ge1xuICAgIG1heC13aWR0aDogMTE2cHg7XG4gIH1cbn1cbi5jYXJkLXN0aWNreS1idG4td3JhcHBlciB7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAuY2FyZC1zdGlja3ktYnRuLXdyYXBwZXIge1xuICAgIGp1c3RpZnktY29udGVudDogZW5kO1xuICB9XG59XG4uY2FyZC1zdGlja3ktYnRuLWltZyB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIG1heC13aWR0aDogNDZweDtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgLmNhcmQtc3RpY2t5LWJ0bi1pbWcge1xuICAgIG1heC13aWR0aDogMzZweDtcbiAgfVxufVxuLmNhcmQtc3RpY2t5LWJ0bi1pbWcgaW1nIHtcbiAgbWF4LWhlaWdodDogMzhweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtc3RpY2t5LWJ0bi1pbWcge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxufVxuLmNhcmQtc3RpY2t5LWl0ZW0taW1nIHtcbiAgbWF4LXdpZHRoOiA3MnB4O1xuICBtYXJnaW4tcmlnaHQ6IDI0cHg7XG59XG4uY2FyZC1zdGlja3ktaXRlbS1pbWcgaW1nIHtcbiAgbWF4LWhlaWdodDogNzJweDtcbn1cbi5jYXJkLXN0aWNreS1pdGVtLXRpdGxlIHtcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1zdGlja3kgLmNhcmQtaXRlbS13cmFwIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5jYXJkLXN0aWNreSAuY2FyZC1pdGVtLXdyYXAge1xuICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtc3RpY2t5IC5jYXJkLWl0ZW0tcmF0aW5nIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uY2FyZC1zdGlja3kgLmNhcmQtaXRlbS1wcmljZS1jdXJyZW5jeSB7XG4gIG1hcmdpbjogMDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtc3RpY2t5IC5jYXJkLWl0ZW0tcHJpY2UtY3VycmVuY3kge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gIC5jYXJkLXN0aWNreSAuY2FyZC1pdGVtLXByaWNlLWN1cnJlbmN5IHtcbiAgICBmb250LXNpemU6IDAuOTM3NXJlbTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gIC5jYXJkLXN0aWNreSAuY2FyZC1pdGVtLXByaWNlLWN1cnJlbnQge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICB9XG59XG4uY2FyZC1zdGlja3kgLmNhcmQtaXRlbS1jb3VudGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtc3RpY2t5IC5jYXJkLWl0ZW0tY291bnRlciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uY2FyZC1icmVhY2twb2ludC1vcGVuIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi51aS11bCB7XG4gIHBhZGRpbmctbGVmdDogMTVweDtcbn1cbi51aS11bCBsaSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi51aS11bCBsaTpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAlLCAtNTAlKTtcbiAgbGVmdDogLTE1cHg7XG4gIHRvcDogNTAlO1xuICB3aWR0aDogOHB4O1xuICBoZWlnaHQ6IDhweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjMTAwO1xufVxuXG4uY2FyZC1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogODVweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtaXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuLmNhcmQtaXRlbS10eHQge1xuICBwYWRkaW5nOiAwIDAgMCAyNHB4O1xufVxuLmNhcmQtaXRlbS1oZWFkbGluZSB7XG4gIG1hcmdpbi1ib3R0b206IDIycHg7XG59XG4uY2FyZC1pdGVtLWhlYWRsaW5lLXRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAyLjVyZW07XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjM2O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1pdGVtLWhlYWRsaW5lLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAuY2FyZC1pdGVtLWhlYWRsaW5lLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gIH1cbn1cbi5jYXJkLWl0ZW0taGVhZGxpbmUtY29kZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4uY2FyZC1pdGVtLWhlYWRsaW5lLWNvZGUgc3BhbiB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXJkLWl0ZW0taGVhZGxpbmUtY29kZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbi5jYXJkLWl0ZW0taGVhZGxpbmUtbGlua3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmNhcmQtaXRlbS1oZWFkbGluZS1saW5rcyB7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG4gIC5jYXJkLWl0ZW0taGVhZGxpbmUtbGlua3Mgc3BhbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDM4NXB4KSB7XG4gIC5jYXJkLWl0ZW0taGVhZGxpbmUtbGlua3MgLmNhcmQtaXRlbS1yZXZpZXdzIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uY2FyZC1pdGVtLXJldmlld3Mge1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDFyZW07XG4gIGNvbG9yOiAjMWE2NmFlO1xuICBtYXJnaW4tcmlnaHQ6IDI1cHg7XG4gIG1hcmdpbi1sZWZ0OiA4cHg7XG4gIGxpbmUtaGVpZ2h0OiAwO1xufVxuLmNhcmQtaXRlbS1yZXZpZXdzOmhvdmVyIHtcbiAgb3BhY2l0eTogMC4zNTtcbn1cbi5jYXJkLWl0ZW0tZmF2IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tcmlnaHQ6IDI1cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgY29sb3I6ICMxYTY2YWU7XG59XG4uY2FyZC1pdGVtLWZhdjpob3ZlciB7XG4gIG9wYWNpdHk6IDAuMzU7XG59XG4uY2FyZC1pdGVtLWZhdiBpbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogNHB4O1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cbi5jYXJkLWl0ZW0tY29tcGFyaXNvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjb2xvcjogIzFhNjZhZTtcbn1cbi5jYXJkLWl0ZW0tY29tcGFyaXNvbjpob3ZlciB7XG4gIG9wYWNpdHk6IDAuMzU7XG59XG4uY2FyZC1pdGVtLWNvbXBhcmlzb24gaW1nIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDRweDtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG4uY2FyZC1pdGVtLWNvbnRyb2xsZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMzg1cHgpIHtcbiAgLmNhcmQtaXRlbS1jb250cm9sbGVyIHtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICB9XG59XG4uY2FyZC1pdGVtLWFib3V0IHtcbiAgcGFkZGluZzogMjRweCAyNHB4IDQ4cHggMzJweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcbiAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwcHggMHB4O1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1pdGVtLWFib3V0IHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1pdGVtLWFib3V0IC5jb2wteGwtNTpudGgtY2hpbGQoMikge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5jYXJkLWl0ZW0tc2xpZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xuICAuY2FyZC1pdGVtLXNsaWRlciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1pdGVtLXNsaWRlciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuLmNhcmQtaXRlbS1zbGlkZXItZWwge1xuICBtYXgtd2lkdGg6IDM0OHB4O1xuICBtYXJnaW46IDBweCBhdXRvO1xuICBwYWRkaW5nOiAwIDEwcHg7XG59XG4uY2FyZC1pdGVtLXNsaWRlci1lbCAuc3dpcGVyLmVsIHtcbiAgcGFkZGluZzogMCA1cHg7XG59XG4uY2FyZC1pdGVtLXNsaWRlci1lbCAuc3dpcGVyLWJ1dHRvbi1uZXh0LFxuLmNhcmQtaXRlbS1zbGlkZXItZWwgLnN3aXBlci1idXR0b24tcHJldiB7XG4gIHRvcDogOTIlO1xuICBmb250LXNpemU6IDIwcHg7XG4gIHJpZ2h0OiAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5jYXJkLWl0ZW0tc2xpZGVyLWVsIC5zd2lwZXItYnV0dG9uLW5leHQsXG4uY2FyZC1pdGVtLXNsaWRlci1lbCAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uY2FyZC1pdGVtLXNsaWRlci1lbCAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgbGVmdDogMDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuY2FyZC1pdGVtLXNsaWRlci1lbCAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uY2FyZC1pdGVtLXNsaWRlci1lbCAuc3dpcGVyLWJ1dHRvbi1uZXh0OmFmdGVyIHtcbiAgZm9udC1zaXplOiAyNXB4O1xuICBjb2xvcjogIzA3MWMyODtcbn1cbi5jYXJkLWl0ZW0tc2xpZGVyLWVsIC5zd2lwZXItYnV0dG9uLXByZXY6YWZ0ZXIge1xuICBmb250LXNpemU6IDI1cHg7XG4gIGNvbG9yOiAjMDcxYzI4O1xufVxuLmNhcmQtaXRlbS1zbGlkZXItZWwgLnN3aXBlci1zbGlkZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5jYXJkLWl0ZW0tc2xpZGVyLWVsIC5zd2lwZXItc2xpZGU6aG92ZXIge1xuICBib3JkZXI6IDFweCBzb2xpZCAjMmE0NDU1O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uY2FyZC1pdGVtLXNsaWRlci1lbCAuc3dpcGVyLXNsaWRlIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBsaW5lLWhlaWdodDogMDtcbiAgcGFkZGluZzogNXB4O1xufVxuLmNhcmQtaXRlbS1zbGlkZXItZWwgLnN3aXBlci1zbGlkZS1hY3RpdmUge1xuICBib3JkZXI6IDFweCBzb2xpZCAjMmE0NDU1O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG4uY2FyZC1pdGVtLXNsaWRlci1lbCAuc3dpcGVyLXdyYXBwZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuY2FyZC1pdGVtLXNsaWRlciAuY2FyZC1pdGVtLXNsaWRlci1lbCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmNhcmQtaXRlbS1zbGlkZXItcHJldmlldyAuc3dpcGVyLWJ1dHRvbi1uZXh0LFxuLmNhcmQtaXRlbS1zbGlkZXItcHJldmlldyAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgdG9wOiA0MCU7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgcmlnaHQ6IDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmNhcmQtaXRlbS1zbGlkZXItcHJldmlldyAuc3dpcGVyLWJ1dHRvbi1uZXh0LFxuLmNhcmQtaXRlbS1zbGlkZXItcHJldmlldyAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uY2FyZC1pdGVtLXNsaWRlci1wcmV2aWV3IC5zd2lwZXItYnV0dG9uLXByZXYge1xuICBsZWZ0OiAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5jYXJkLWl0ZW0tc2xpZGVyLXByZXZpZXcgLnN3aXBlci1idXR0b24tcHJldiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmNhcmQtaXRlbS1zbGlkZXItcHJldmlldyAuc3dpcGVyLWJ1dHRvbi1uZXh0OmFmdGVyIHtcbiAgZm9udC1zaXplOiAyNXB4O1xuICBjb2xvcjogIzA3MWMyODtcbn1cbi5jYXJkLWl0ZW0tc2xpZGVyLXByZXZpZXcgLnN3aXBlci1idXR0b24tcHJldjphZnRlciB7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgY29sb3I6ICMwNzFjMjg7XG59XG4uY2FyZC1pdGVtLXNsaWRlci1wcmV2aWV3IC5zd2lwZXItc2xpZGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uY2FyZC1pdGVtLXNsaWRlci1wcmV2aWV3IC5zd2lwZXItc2xpZGUgaW1nIHtcbiAgcGFkZGluZzogMzBweDtcbn1cbi5jYXJkLWl0ZW0tc2xpZGVyLXByZXZpZXcgLnN3aXBlci1wYWdpbmF0aW9uIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuY2FyZC1pdGVtLXNsaWRlci1wcmV2aWV3IC5zd2lwZXItcGFnaW5hdGlvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbi5jYXJkLWl0ZW0tc2xpZGVyLXByZXZpZXcgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XG4gIHdpZHRoOiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtd2lkdGgsIHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1zaXplLCAyNHB4KSk7XG4gIGhlaWdodDogdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWhlaWdodCwgdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LXNpemUsIDJweCkpO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG59XG4uY2FyZC1pdGVtLXNsaWRlci1wcmV2aWV3IC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJhNDQ1NTtcbn1cbi5jYXJkLWl0ZW0tY2FwdGlvbiB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMS4zNzVyZW07XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBtYXJnaW4tYm90dG9tOiAxOHB4O1xufVxuLmNhcmQtaXRlbS1zcGVjaWZpY2F0aW9ucy1kZXNjIHtcbiAgcGFkZGluZy1ib3R0b206IDE2cHg7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZDNkM2QzO1xuICBtYXJnaW4tYm90dG9tOiAyMnB4O1xufVxuLmNhcmQtaXRlbS1zcGVjaWZpY2F0aW9ucy1kZXNjIC51aS1idG4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBwYWRkaW5nOiAwIDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAzOHB4O1xufVxuLmNhcmQtaXRlbS1zcGVjaWZpY2F0aW9ucy1kZXNjIC51aS1idG46aG92ZXIge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG59XG4uY2FyZC1pdGVtLXNwZWNpZmljYXRpb25zLXR4dCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcbn1cbi5jYXJkLWl0ZW0tc3BlY2lmaWNhdGlvbnMtdHh0Om50aC1sYXN0LWNoaWxkKDIpIHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cbi5jYXJkLWl0ZW0tc3BlY2lmaWNhdGlvbnMtdHh0Om50aC1sYXN0LWNoaWxkKC1uKzMpIC5jYXJkLWl0ZW0tc3BlY2lmaWNhdGlvbnMtc3VidGl0bGUge1xuICBjb2xvcjogIzFhNjZhZTtcbn1cbi5jYXJkLWl0ZW0tc3BlY2lmaWNhdGlvbnMtY2FwdGlvbiB7XG4gIHdpZHRoOiA2MiU7XG59XG4uY2FyZC1pdGVtLXNwZWNpZmljYXRpb25zLXN1YnRpdGxlIHtcbiAgd2lkdGg6IDM4JTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgY29sb3I6ICMwMDA7XG59XG4uY2FyZC1pdGVtLXNlcnZpY2VzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtaXRlbS1zZXJ2aWNlcyB7XG4gICAgbWFyZ2luLXRvcDogNDhweDtcbiAgfVxufVxuLmNhcmQtaXRlbS1zZXJ2aWNlcy1kZXNjIC51aS1idG4ge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIHBhZGRpbmc6IDlweDtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG4uY2FyZC1pdGVtLXNlcnZpY2VzLWRlc2MgLnVpLWJ0bjpob3ZlciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cbi5jYXJkLWl0ZW0tc2VydmljZXMtdHh0IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG59XG4uY2FyZC1pdGVtLXNlcnZpY2VzLXN1YnRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcbn1cbi5jYXJkLWl0ZW0tc2VydmljZXMtY29udGVudCB7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2QzZDNkMztcbn1cbi5jYXJkLWl0ZW0tc2VydmljZXMtd2FycmFudHkge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMTlweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAzNjBweCkge1xuICAuY2FyZC1pdGVtLXNlcnZpY2VzLXdhcnJhbnR5IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxufVxuLmNhcmQtaXRlbS1zZXJ2aWNlcy13YXJyYW50eSAudHh0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5jYXJkLWl0ZW0tc2VydmljZXMtd2FycmFudHkgLnR4dCBpbWcge1xuICBtYXJnaW4tcmlnaHQ6IDdweDtcbn1cbi5jYXJkLWl0ZW0tc2VydmljZXMtd2FycmFudHkgLnR4dCBzcGFuIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLmNhcmQtaXRlbS1zZXJ2aWNlcy13YXJyYW50eSAudHh0IHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG4uY2FyZC1pdGVtLXNlcnZpY2VzLXdhcnJhbnR5IC50eHQgc3BhbjpudGgtY2hpbGQoMykge1xuICBmb250LXdlaWdodDogNjAwO1xufVxuLmNhcmQtaXRlbS1zZXJ2aWNlcy1idG4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGdhcDogOHB4O1xufVxuLmNhcmQtaXRlbS1zZXJ2aWNlcy1idG4gc3ZnIHtcbiAgd2lkdGg6IDMycHg7XG4gIGhlaWdodDogMzJweDtcbn1cbi5jYXJkLWl0ZW0tc2VydmljZXMtYnRuIHNwYW4ge1xuICBmb250LXNpemU6IDE2cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMzYwcHgpIHtcbiAgLmNhcmQtaXRlbS1zZXJ2aWNlcy1idG4gc3BhbiB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG59XG4uY2FyZC1pdGVtLXNlcnZpY2VzLWJ0biAuc2VydmljZXMtYnRuIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcbiAgY29sb3I6IGJsYWNrO1xuICBwYWRkaW5nOiAxMnB4IDI0cHggMTJweCAyNHB4O1xuICB3aWR0aDogMzMlO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2Utb3V0O1xufVxuLmNhcmQtaXRlbS1zZXJ2aWNlcy1idG4gLnNlcnZpY2VzLWJ0bjpob3ZlciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cbi5jYXJkLWl0ZW0tc2VydmljZXMtYnRuIC5zZXJ2aWNlcy1idG46aG92ZXIgc3ZnIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1vdXQ7XG4gIGZpbGw6ICMyYTQ0NTU7XG59XG4uY2FyZC1pdGVtLXNlcnZpY2VzLWJ0biAuc2VydmljZXMtYnRuOmhvdmVyIHNwYW4ge1xuICBjb2xvcjogIzJhNDQ1NTtcbn1cbi5jYXJkLWl0ZW0tc2VydmljZXMtYnRuIC5zZXJ2aWNlcy1idG4gc3ZnIHtcbiAgZmlsbDogI2QzZDNkMztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODJweCkge1xuICAuY2FyZC1pdGVtLXNlcnZpY2VzLWJ0biAuc2VydmljZXMtYnRuIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDM2MHB4KSB7XG4gIC5jYXJkLWl0ZW0tc2VydmljZXMtYnRuIC5zZXJ2aWNlcy1idG4ge1xuICAgIHBhZGRpbmc6IDE1cHg7XG4gIH1cbn1cbi5jYXJkLWl0ZW0tc2VydmljZXMtYnRuIC5zZXJ2aWNlcy1idG4gLmltZy1idG4gLmZvb3Rlci1ib3R0b20tc29jaWFscy1zdmcge1xuICB3aWR0aDogNDJweDtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcbiAgYm9yZGVyLXJhZGl1czogMHB4IDBweCA4cHggOHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1pdGVtLW1vcmUtaW5mbyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtbmF2IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZDNkM2QzO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1pdGVtLW1vcmUtaW5mbyAudGFicy1uYXYge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLW5hdiBsaSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmbG9hdDogbGVmdDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLW5hdiBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDE1cHggMjBweDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICM5OTk7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gIGNvbG9yOiAjMDAwO1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtbmF2IGEuYWN0aXZlIHtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMyYTQ0NTU7XG4gIGNvbG9yOiAjMmE0NDU1O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExNzJweCkge1xuICAuY2FyZC1pdGVtLW1vcmUtaW5mbyAudGFicy1uYXYgYSB7XG4gICAgcGFkZGluZzogMTVweCA1cHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbSB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG59XG4uY2FyZC1pdGVtLW1vcmUtaW5mbyAudGFicy1pdGVtcyAuYWNjb3JkaW9uLWl0ZW1zLXRpdGxlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbXMgLmFjY29yZGlvbi1pdGVtcy10aXRsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGhlaWdodDogNTZweDtcbiAgICBwYWRkaW5nOiAxNnB4IDA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLWl0ZW1zIC5hY2NvcmRpb24tY29udGVudCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbXMgLmFjY29yZGlvbi1jb250ZW50LmFjdGl2ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAyNHB4O1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbXMgLmFjY29yZGlvbi1jb250ZW50LnRhYjIge1xuICBwYWRkaW5nOiAwO1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbXMgLnRhYmxlIHtcbiAgdGFibGUtbGF5b3V0OiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMHB4O1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbXMgLnRhYmxlLmJvdHRvbSB0ZCB7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbXMgLnRhYmxlLmJvdHRvbSB0ZDpudGgtY2hpbGQoMikge1xuICBjb2xvcjogIzAwMDtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLWl0ZW1zIC50YWJsZSB0aCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBwYWRkaW5nOiA1cHg7XG4gIHRleHQtYWxpZ246IHN0YXJ0O1xuICBwYWRkaW5nLWxlZnQ6IDMycHg7XG59XG4uY2FyZC1pdGVtLW1vcmUtaW5mbyAudGFicy1pdGVtcyAudGFibGUgdGQge1xuICBwYWRkaW5nOiAxNHB4IDEwcHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG59XG4uY2FyZC1pdGVtLW1vcmUtaW5mbyAudGFicy1pdGVtcyAudGFibGUgdGQgLnRvb2x0aXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLWl0ZW1zIC50YWJsZSB0ZCAudG9vbHRpcC1ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLWl0ZW1zIC50YWJsZSB0ZCAudG9vbHRpcCBpbWc6aG92ZXIge1xuICBvcGFjaXR5OiAwLjUyO1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbXMgLnRhYmxlIHRkIC50b29sdGlwIC50b29sdGlwdGV4dCB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgd2lkdGg6IDQwMHB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgY29sb3I6ICMwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgcGFkZGluZzogMjBweCAxNnB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIHRvcDogMTM1JTtcbiAgbGVmdDogLTI5MCU7XG4gIG1hcmdpbi1sZWZ0OiAtNjBweDtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbXMgLnRhYmxlIHRkIC50b29sdGlwOmhvdmVyIC50b29sdGlwdGV4dCB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIG9wYWNpdHk6IDE7XG59XG4uY2FyZC1pdGVtLW1vcmUtaW5mbyAudGFicy1pdGVtcyAudGFibGUgdGQ6bnRoLWNoaWxkKDEpIHtcbiAgcGFkZGluZzogMTRweCAwIDE0cHggMzJweDtcbiAgcGFkZGluZy1sZWZ0OiAzMnB4O1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbXMgLnRhYmxlIHRkOm50aC1jaGlsZCgyKSB7XG4gIGNvbG9yOiAjMWE2NmFlO1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbXMgdGJvZHkgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLWl0ZW1zIHRib2R5IHRyOm50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLWl0ZW0ge1xuICBwYWRkaW5nOiAzMnB4IDM5cHggMzJweCAzN3B4O1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbS50YWJsZSB7XG4gIHBhZGRpbmc6IDMwcHggMCAwIDA7XG59XG4uY2FyZC1pdGVtLW1vcmUtaW5mbyAudGFicy1pdGVtLnZpZGVvIHtcbiAgcGFkZGluZzogNDBweCAxNnB4O1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbS52aWRlbyAudmlkZW8tY29udGVudCB7XG4gIHBhZGRpbmc6IDAgMTJweDtcbiAgbWFyZ2luOiAwIDEycHg7XG59XG4uY2FyZC1pdGVtLW1vcmUtaW5mbyAudGFicy1pdGVtLnZpZGVvIC52aWRlby1jb250ZW50LWJveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gIC5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLWl0ZW0udmlkZW8gLnZpZGVvLWNvbnRlbnQtYm94IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLWl0ZW0udmlkZW8gLnZpZGVvLWNvbnRlbnQtYm94IC52aWRlby1jb250ZW50IHtcbiAgICBtYXJnaW46IDAgMCAyNXB4IDA7XG4gICAgcGFkZGluZzogMDtcbiAgfVxufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbS52aWRlbyBwIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuLmNhcmQtaXRlbS1tb3JlLWluZm8gLnRhYnMtaXRlbS10ZXh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMjRweDtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLWl0ZW0tdGl0bGUge1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW4tYm90dG9tOiAycHg7XG59XG4uY2FyZC1pdGVtLW1vcmUtaW5mbyAudGFicy1pdGVtLWxpc3Qge1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG4uY2FyZC1pdGVtLW1vcmUtaW5mbyAudGFicy1pdGVtLWxpc3QgbGkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC50YWJzLWl0ZW0tbGlzdCBsaTo6YmVmb3JlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xNXB4O1xuICB0b3A6IDlweDtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDhweDtcbiAgaGVpZ2h0OiA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYzEwMDtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC5kb2Mge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xuICAuY2FyZC1pdGVtLW1vcmUtaW5mbyAuZG9jIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5jYXJkLWl0ZW0tbW9yZS1pbmZvIC5kb2MtcGljdHVyZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuICAuY2FyZC1pdGVtLW1vcmUtaW5mbyAuZG9jIC5jb2wtNyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG4gIC5jYXJkLWl0ZW0tbW9yZS1pbmZvIC5kb2MgLmNvbC01IHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC5kb2MtcGljdHVyZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5jYXJkLWl0ZW0tbW9yZS1pbmZvIC5kb2MtcGljdHVyZSBpbWcge1xuICBwYWRkaW5nOiAxNnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGhlaWdodDogYXV0bztcbn1cbi5jYXJkLXJldmlld3Mge1xuICBtYXJnaW4tYm90dG9tOiA4NnB4O1xufVxuLmNhcmQtcmV2aWV3cyAuY2FyZC1pdGVtLXJhdGluZyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uY2FyZC1yZXZpZXdzIC5yZXZpZXdzLnVpLWJ0bi5hbGwge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG4uY2FyZC1yZXZpZXdzLWJ0biB7XG4gIGxpbmUtaGVpZ2h0OiAwO1xufVxuLmNhcmQtcmV2aWV3cyAuc3dpcGVyLW5leHQsXG4uY2FyZC1yZXZpZXdzIC5zd2lwZXItcnRsIC5zd2lwZXItcHJldiB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogOTk5O1xuICB0b3A6IDQ2JTtcbiAgcmlnaHQ6IDIwcHg7XG4gIC8qIHBhZGRpbmc6IDEwcHg7ICovXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMTBweCAwO1xufVxuLmNhcmQtcmV2aWV3cyAuc3dpcGVyLW5leHQ6OmFmdGVyLFxuLmNhcmQtcmV2aWV3cyAuc3dpcGVyLXJ0bCAuc3dpcGVyLXByZXY6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbn1cbi5jYXJkLXJldmlld3MgLnN3aXBlci1uZXh0IGltZyxcbi5jYXJkLXJldmlld3MgLnN3aXBlci1ydGwgLnN3aXBlci1wcmV2IGltZyB7XG4gIHdpZHRoOiA4cHg7XG4gIGhlaWdodDogYXV0bztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtcmV2aWV3cyAuc3dpcGVyLW5leHQsXG4uY2FyZC1yZXZpZXdzIC5zd2lwZXItcnRsIC5zd2lwZXItcHJldiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmNhcmQtcmV2aWV3cyAuc3dpcGVyLXByZXYsXG4uY2FyZC1yZXZpZXdzIC5zd2lwZXItcnRsIC5zd2lwZXItbmV4dCB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogOTk5O1xuICB0b3A6IDQ2JTtcbiAgbGVmdDogMjBweDtcbiAgLyogcGFkZGluZzogMTBweDsgKi9cbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG4uY2FyZC1yZXZpZXdzIC5zd2lwZXItcHJldjo6YWZ0ZXIsXG4uY2FyZC1yZXZpZXdzIC5zd2lwZXItcnRsIC5zd2lwZXItbmV4dDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xufVxuLmNhcmQtcmV2aWV3cyAuc3dpcGVyLXByZXYgaW1nLFxuLmNhcmQtcmV2aWV3cyAuc3dpcGVyLXJ0bCAuc3dpcGVyLW5leHQgaW1nIHtcbiAgd2lkdGg6IDhweDtcbiAgaGVpZ2h0OiBhdXRvO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1yZXZpZXdzIC5zd2lwZXItcHJldixcbi5jYXJkLXJldmlld3MgLnN3aXBlci1ydGwgLnN3aXBlci1uZXh0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uY2FyZC1yZXZpZXdzIC5zd2lwZXIucmV2aWV3cyB7XG4gIHBhZGRpbmc6IDIwcHggMTBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtcmV2aWV3cyAuc3dpcGVyLnJldmlld3Mge1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG4gICAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEycHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxMnB4O1xuICB9XG4gIC5jYXJkLXJldmlld3MgLnN3aXBlci5yZXZpZXdzOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XG4gIC5jYXJkLXJldmlld3MgLnN3aXBlci5yZXZpZXdzIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgfVxufVxuLmNhcmQtcmV2aWV3cyAuc3dpcGVyLnJldmlld3MgLnN3aXBlci1idXR0b24tZGlzYWJsZWQge1xuICBvcGFjaXR5OiAxO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xuICBib3gtc2hhZG93OiBub25lO1xufVxuLmNhcmQtcmV2aWV3cyAuc3dpcGVyLnJldmlld3MgLnN3aXBlci1idXR0b24tZGlzYWJsZWQgaW1nIHtcbiAgb3BhY2l0eTogMC4zNTtcbn1cbi5jYXJkLXJldmlld3MtaGVhZGxpbmUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG1hcmdpbi1ib3R0b206IDRweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAuY2FyZC1yZXZpZXdzLWhlYWRsaW5lIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbi1ib3R0b206IDMycHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtcmV2aWV3cyAuc3dpcGVyLWJ1dHRvbi1uZXh0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXJkLXJldmlld3MgLnN3aXBlci1idXR0b24tcHJldiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmNhcmQtcmV2aWV3cy10eHQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gIC5jYXJkLXJldmlld3MtdHh0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbn1cbi5jYXJkLXJldmlld3MtdHh0LXRpdGxlIHtcbiAgbWFyZ2luLXJpZ2h0OiAzMnB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDMycHg7XG4gIGNvbG9yOiAjMDAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1yZXZpZXdzLXR4dC10aXRsZSB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmNhcmQtcmV2aWV3cy10eHQtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDMzNXB4KSB7XG4gIC5jYXJkLXJldmlld3MtdHh0LXRpdGxlIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gIH1cbn1cbi5jYXJkLXJldmlld3MtdHh0LXRpdGxlIHNwYW4ge1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMzM1cHgpIHtcbiAgLmNhcmQtcmV2aWV3cy10eHQtdGl0bGUgc3BhbiB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMzM1cHgpIHtcbiAgLmNhcmQtcmV2aWV3cy10eHQtdGl0bGUgLmNhcmQtaXRlbS1yYXRpbmctdmFsdWUge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDMzNXB4KSB7XG4gIC5jYXJkLXJldmlld3MtdHh0IC5jYXJkLWl0ZW0tcmF0aW5nIHtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgfVxufVxuLmNhcmQtcmV2aWV3cyAucmV2aWV3cy51aS1idG4ge1xuICB3aWR0aDogMjAwcHg7XG4gIGJhY2tncm91bmQ6ICMyYTQ0NTU7XG4gIGNvbG9yOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmNhcmQtcmV2aWV3cyAucmV2aWV3cy51aS1idG4ge1xuICAgIG1hcmdpbi10b3A6IDI2cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbi5jYXJkLXJldmlld3MgLnJldmlld3MudWktYnRuLmFsbCB7XG4gIGJhY2tncm91bmQ6ICNmNWY1ZjU7XG4gIGNvbG9yOiAjMDAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1yZXZpZXdzIC5yZXZpZXdzLnVpLWJ0bi5hbGwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMTZweCBhdXRvO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmNhcmQtcmV2aWV3cyAucmV2aWV3cy51aS1idG4uYWxsIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cbi5jYXJkLXJldmlld3MgLnJldmlld3MudWktYnRuOmhvdmVyIHtcbiAgb3BhY2l0eTogMC41O1xufVxuLmNhcmQtcmV2aWV3cy1jb250ZW50IHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cbi5jYXJkLXJldmlld3MtY29udGVudC1oZWFkZXIge1xuICBwYWRkaW5nOiAyMHB4IDI0cHg7XG4gIGJhY2tncm91bmQ6ICNmNWY1ZjU7XG59XG4uY2FyZC1yZXZpZXdzLWNvbnRlbnQtdHh0IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbn1cbi5jYXJkLXJldmlld3MtY29udGVudC1uYW1lIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBjb2xvcjogIzAwMDtcbn1cbi5jYXJkLXJldmlld3MtY29udGVudC1kYXRhIHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuLmNhcmQtcmV2aWV3cy1jb250ZW50LWJvZHkge1xuICBwYWRkaW5nOiAyMHB4IDI0cHg7XG59XG4uY2FyZC1yZXZpZXdzLWNvbnRlbnQtYm9keSBhIHtcbiAgY29sb3I6ICMxYTY2YWU7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG4uY2FyZC1yZXZpZXdzLWNvbnRlbnQtYm9keSBhOmhvdmVyIHtcbiAgb3BhY2l0eTogMC4zNTtcbn1cbi5jYXJkLXJldmlld3MtY29udGVudC10ZXh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMThweDtcbn1cbi5jYXJkLXJldmlld3MtY29udGVudC10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5jYXJkLXJldmlld3MtY29udGVudC1kZXNjIHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4uY2FyZC1pbmZvLW1lZGlhIC50YWJzLW5hdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2QzZDNkMztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtaW5mby1tZWRpYSAudGFicy1uYXYge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtbmF2IGxpIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1uYXYgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAxNXB4IDIwcHg7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjOTk5O1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBjb2xvcjogIzAwMDtcbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtbmF2IGEuYWN0aXZlIHtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMyYTQ0NTU7XG4gIGNvbG9yOiAjMmE0NDU1O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExNzJweCkge1xuICAuY2FyZC1pbmZvLW1lZGlhIC50YWJzLW5hdiBhIHtcbiAgICBwYWRkaW5nOiAxNXB4IDVweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW0ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMge1xuICAgIG1hcmdpbi1ib3R0b206IDU1cHg7XG4gIH1cbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLmFjY29yZGlvbjpudGgtbGFzdC1jaGlsZCgtbisyKSAuYWNjb3JkaW9uLWl0ZW1zLXRpdGxlIHtcbiAgYm9yZGVyLXJhZGl1czogMCAwIDEwcHggMTBweDtcbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLmFjY29yZGlvbi50YWI0IC5hY2NvcmRpb24taXRlbXMtdGl0bGUge1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAuYWNjb3JkaW9uLWl0ZW1zLXRpdGxlIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAuYWNjb3JkaW9uLWl0ZW1zLXRpdGxlIC5idG4tYWNjIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMjRweDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC01MCUpO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW1zIC5hY2NvcmRpb24taXRlbXMtdGl0bGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDU2cHg7XG4gICAgcGFkZGluZzogMTZweCAwO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZDNkM2QzO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIH1cbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLmFjY29yZGlvbi1jb250ZW50IHtcbiAgcGFkZGluZzogMTZweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAuYWNjb3JkaW9uLWNvbnRlbnQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLmFjY29yZGlvbi1jb250ZW50LmFjdGl2ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAyNHB4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2QzZDNkMztcbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLmFjY29yZGlvbi1jb250ZW50LnRhYjIge1xuICBwYWRkaW5nOiAwO1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAuYWNjb3JkaW9uLWNvbnRlbnQgLmRvYyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcbiAgLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAuYWNjb3JkaW9uLWNvbnRlbnQgLmRvYyB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuICAuY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW1zIC5hY2NvcmRpb24tY29udGVudCAuZG9jLXBpY3R1cmUge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAuYWNjb3JkaW9uLWNvbnRlbnQgLmRvYy1saW5rIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAuYWNjb3JkaW9uLWNvbnRlbnQgLnZpZGVvLWNvbnRlbnQge1xuICBwYWRkaW5nOiAwIDEycHg7XG4gIG1hcmdpbjogMCAxMnB4O1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAuYWNjb3JkaW9uLWNvbnRlbnQgLnZpZGVvLWNvbnRlbnQtYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4uY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW1zIC5hY2NvcmRpb24tY29udGVudCAudmlkZW8tY29udGVudCBwIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAudGFibGUge1xuICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAwcHg7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG59XG4uY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW1zIC50YWJsZS5ib3R0b20gdGQge1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLnRhYmxlLmJvdHRvbSB0ZDpudGgtY2hpbGQoMikge1xuICBjb2xvcjogIzAwMDtcbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLnRhYmxlIHRoIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBhZGRpbmc6IDVweDtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gIHBhZGRpbmctbGVmdDogMzJweDtcbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLnRhYmxlIHRkIHtcbiAgcGFkZGluZzogMTJweCAxMHB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDAuODc1cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLnRhYmxlIHRkIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAuY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW1zIC50YWJsZSB0ZDpudGgtY2hpbGQoMSkge1xuICAgIHBhZGRpbmc6IDEwcHggMCAwIDMycHg7XG4gIH1cbiAgLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAudGFibGUgdGQ6bnRoLWNoaWxkKDIpIHtcbiAgICBwYWRkaW5nOiAwIDAgMTBweCAzMnB4O1xuICB9XG59XG4uY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW1zIC50YWJsZSB0ZCAudG9vbHRpcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tbGVmdDogMTZweDtcbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLnRhYmxlIHRkIC50b29sdGlwLWJveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAudGFibGUgdGQgLnRvb2x0aXAgLmNpcmNsZS1pbmZvLXN2ZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDVweDtcbiAgaGVpZ2h0OiA4cHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICBmaWxsOiAjZDNkM2QzO1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAudGFibGUgdGQgLnRvb2x0aXAgLnRvb2x0aXB0ZXh0IHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICB3aWR0aDogNDAwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBjb2xvcjogIzAwMDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBwYWRkaW5nOiAyMHB4IDE2cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgdG9wOiAxMzUlO1xuICBsZWZ0OiAtMjkwJTtcbiAgbWFyZ2luLWxlZnQ6IC0xMzBweDtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAudGFibGUgdGQgLnRvb2x0aXA6aG92ZXIgLnRvb2x0aXB0ZXh0IHtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgb3BhY2l0eTogMTtcbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbXMgLnRhYmxlIHRkOm50aC1jaGlsZCgxKSB7XG4gIHBhZGRpbmctbGVmdDogMzJweDtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xuICAuY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW1zIC50YWJsZSB0ZDpudGgtY2hpbGQoMikge1xuICAgIHBhZGRpbmctbGVmdDogMzJweDtcbiAgfVxufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAudGFibGUgdGQ6bnRoLWNoaWxkKDIpIHtcbiAgY29sb3I6ICMxYTY2YWU7XG59XG4uY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW1zIC50YWJsZSB0Ym9keSB0cjpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtcyAudGFibGUgdGJvZHkgdHI6bnRoLWNoaWxkKG9kZCkge1xuICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xufVxuLmNhcmQtaW5mby1tZWRpYSAudGFicy1pdGVtIHtcbiAgcGFkZGluZzogMzJweCAzOXB4IDMycHggMzdweDtcbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbS50YWJsZSB7XG4gIHBhZGRpbmc6IDMwcHggMCAwIDA7XG59XG4uY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW0tdGV4dCB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG59XG4uY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW0tdGl0bGUge1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW4tYm90dG9tOiAycHg7XG59XG4uY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW0tbGlzdCB7XG4gIHBhZGRpbmctbGVmdDogMTVweDtcbn1cbi5jYXJkLWluZm8tbWVkaWEgLnRhYnMtaXRlbS1saXN0IGxpIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tYm90dG9tOiAycHg7XG59XG4uY2FyZC1pbmZvLW1lZGlhIC50YWJzLWl0ZW0tbGlzdCBsaTo6YmVmb3JlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xNXB4O1xuICB0b3A6IDlweDtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDhweDtcbiAgaGVpZ2h0OiA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYzEwMDtcbn1cblxuLnBvcHVwLXlvdXR1YmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi5wb3B1cC15b3V0dWJlLWJ0biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgYmFja2dyb3VuZDogI2JjMDAwMDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB3aWR0aDogMTI0cHg7XG4gIGhlaWdodDogNjRweDtcbn1cbi5wb3B1cC15b3V0dWJlLWJ0biBpbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG1heC1oZWlnaHQ6IDMycHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xufVxuXG4ucG9wdXAteW91dHViZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBsaW5lLWhlaWdodDogMDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLnBvcHVwLXlvdXR1YmUtd3JhcHBlciB7XG4gIG1hcmdpbi1ib3R0b206IDIycHg7XG59XG4ucG9wdXAteW91dHViZS1idG4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIGJhY2tncm91bmQ6ICNiYzAwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgd2lkdGg6IDEyNHB4O1xuICBoZWlnaHQ6IDY0cHg7XG59XG4ucG9wdXAteW91dHViZS1idG4gaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtYXgtaGVpZ2h0OiAzMnB4O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbn1cbi5wb3B1cC15b3V0dWJlLXR3byAucG9wdXAteW91dHViZS1idG4ge1xuICB3aWR0aDogODBweDtcbiAgaGVpZ2h0OiA0MHB4O1xufVxuLnBvcHVwLXlvdXR1YmUtdHdvIC5wb3B1cC15b3V0dWJlLWJ0biBpbWcge1xuICBtYXgtaGVpZ2h0OiAyMHB4O1xufVxuXG4ucG9wdXAtcmV2Lm1mcC1pbWFnZS1ob2xkZXIgLm1mcC1jbG9zZSxcbi5tZnAtaWZyYW1lLWhvbGRlciAubWZwLWNsb3NlIHtcbiAgcmlnaHQ6IDEycHg7XG4gIHRleHQtYWxpZ246IGluaXRpYWw7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG4gIHdpZHRoOiBpbml0aWFsO1xufVxuXG4ubWZwLWlmcmFtZS1ob2xkZXIgLm1mcC1jbG9zZSB7XG4gIHRvcDogMDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDMwMHB4KSB7XG4gIC5jb2wtdmlkZW8tMzAwIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgIGZsZXg6IDAgMCAzMTJweDtcbiAgICBtYXgtd2lkdGg6IDMxMnB4O1xuICB9XG59XG4uY2F0YWxvZyAuY2FyZC1pbnRlcmVzdC13cmFwIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNiwgMWZyKTtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMiwgMWZyKTtcbiAgY29sdW1uLWdhcDogMjRweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhdGFsb2cgLmNhcmQtaW50ZXJlc3Qtd3JhcCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAtMTVweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG4gIH1cbiAgLmNhdGFsb2cgLmNhcmQtaW50ZXJlc3Qtd3JhcCAucm93OmZpcnN0LWNoaWxkIHtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgfVxufVxuLmNhdGFsb2cgLmNhcmQtaW50ZXJlc3QtaXRlbSB7XG4gIHdpZHRoOiAyMDBweDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAyNXB4IDE4cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uY2F0YWxvZyAuY2FyZC1pbnRlcmVzdC1pdGVtLWltZyB7XG4gIG1pbi13aWR0aDogaW5pdGlhbDtcbiAgbWF4LXdpZHRoOiA5NXB4O1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4uY2F0YWxvZyAuY2FyZC1pbnRlcmVzdC1pdGVtOmhvdmVyIC5jYXJkLWludGVyZXN0LWl0ZW0tdHh0IHtcbiAgY29sb3I6ICMyYTQ0NTU7XG59XG4uY2F0YWxvZyAuY2FyZC1pbnRlcmVzdC10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC5jYXRhbG9nIC5jYXJkLWludGVyZXN0LXRpdGxlIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAuY2F0YWxvZyAuY2FyZC1pbnRlcmVzdC10aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgfVxufVxuLmNhdGFsb2cgLnBvcHVwLXlvdXR1YmUtd3JhcHBlciBwIHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cbi5jYXRhbG9nLXN0aWNrZXJzIHtcbiAgbWFyZ2luLWJvdHRvbTogNTVweDtcbn1cbi5jYXRhbG9nLXN0aWNrZXJzLXdyYXAge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5jYXRhbG9nLXN0aWNrZXJzLXdyYXAgYSB7XG4gIGNvbG9yOiAjMDAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5jYXRhbG9nLXN0aWNrZXJzLXdyYXAge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IC0xNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cbn1cbi5jYXRhbG9nLXN0aWNrZXJzIC51aS1zdGlja2VyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuLmNhdGFsb2ctc3RpY2tlcnMgLnVpLXN0aWNrZXI6aG92ZXIge1xuICBib3JkZXI6IDFweCBzb2xpZCAjMmE0NDU1O1xuICBjb2xvcjogIzJhNDQ1NTtcbn1cbi5jYXRhbG9nLXN0aWNrZXJzLWJ0biB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XG4gIG1hcmdpbi1yaWdodDogMHB4O1xufVxuLmNhdGFsb2ctc3RpY2tlcnMtYnRuLXRleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4uY2F0YWxvZy1zdGlja2Vycy1idG4taW1nIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgbWF4LXdpZHRoOiAxMHB4O1xufVxuLmNhdGFsb2ctc3RpY2tlcnMtYnRuLWltZyBpbWcge1xuICBtYXgtaGVpZ2h0OiAxMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5jYXRhbG9nLXN0aWNrZXJzIC5zdGlja2VyX2l0ZW0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5jYXRhbG9nLXByb2R1Y3RzIHtcbiAgbWFyZ2luLWJvdHRvbTogNDZweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAuY2F0YWxvZy1wcm9kdWN0cyB7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgfVxufVxuLmNhdGFsb2ctcHJvZHVjdHMtdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAyMnB4O1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgLmNhdGFsb2ctcHJvZHVjdHMtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgfVxufVxuLmNhdGFsb2ctcHJvZHVjdHMtc3RpY2tlcnMgLnVpLXN0aWNrZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2F0YWxvZy1wcm9kdWN0cy13cmFwIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1iYW5uZXIge1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbi1ib3R0b206IDMxcHg7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1zZWFyY2gge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMHB4IDVweDtcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbiAgaGVpZ2h0OiA1NnB4O1xuICBsaW5lLWhlaWdodDogNTZweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjODQ4NDg0O1xuICBtYXJnaW4tYm90dG9tOiAzM3B4O1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtc2VhcmNoIHNwYW4ge1xuICBjb2xvcjogIzAwMDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLWZpZWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMzNweDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLWZpZWxkLXRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMTJweDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLWZpZWxkLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1maWVsZC1sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBmb250LXdlaWdodDogNjAwO1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtZmllbGQtaW5wdXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGhlaWdodDogNDBweDtcbiAgcGFkZGluZzogMHB4IDE2cHg7XG4gIGNvbG9yOiAjZDNkM2QzO1xuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLWZpZWxkLWlucHV0OjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjZDNkM2QzO1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtZmllbGQtY2hlY2tib3gge1xuICBib3JkZXI6IDFweCBzb2xpZCAjODQ4NDg0O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1maWVsZC1idG4ge1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgaGVpZ2h0OiAzMnB4O1xuICBsaW5lLWhlaWdodDogMzJweDtcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLWZpZWxkLXRleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1maWVsZC1pbWcge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xuICBoZWlnaHQ6IDEycHg7XG4gIHdpZHRoOiAxMnB4O1xuICBtYXgtd2lkdGg6IDEycHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uL2ltYWdlcy9pY29ucy9ncmVlbi1jcm9zcy5zdmcpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1zbGlkZXIge1xuICBoZWlnaHQ6IDJweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kOiAjZDNkM2QzO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1zbGlkZXItcHJvZ3Jlc3Mge1xuICBoZWlnaHQ6IDJweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAyNSU7XG4gIHJpZ2h0OiAyNSU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYmFja2dyb3VuZDogIzA3MWMyODtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLXJhbmdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtcmFuZ2UtaW5wdXQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTRweDtcbiAgaGVpZ2h0OiAycHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtYmFyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW4tYm90dG9tOiAzNXB4O1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtYmFyIC5jYXRhbG9nLXByb2R1Y3RzLWZpbHRlci1maWx0ZXJzIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhdGFsb2ctcHJvZHVjdHMtYmFyIC5jYXRhbG9nLXByb2R1Y3RzLWZpbHRlci10eHQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtYmFyIC5jYXRhbG9nLXByb2R1Y3RzLWZpbHRlci1zZWN0aW9uIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWJhciAuY2F0YWxvZy1wcm9kdWN0cy1maWx0ZXItZmlsdGVycyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxufVxuLmNhdGFsb2ctcHJvZHVjdHMtZmlsdGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0MzBweCkge1xuICAuY2F0YWxvZy1wcm9kdWN0cy1maWx0ZXIgaW1nIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1maWx0ZXIgLmNhdGFsb2ctcHJvZHVjdHMtZmlsdGVyLXBvcHVsYXIge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICBwYWRkaW5nLXJpZ2h0OiAzNXB4O1xuICBvdXRsaW5lOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNjU4ODIzNTI5NCk7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvaWNvbnMvY2F0YWxvZy1wcm9kdWN0cy1hcnJvd3Muc3ZnXCIpIG5vLXJlcGVhdCByaWdodDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgMnB4IGNlbnRlcjtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLWZpbHRlciAuY2F0YWxvZy1wcm9kdWN0cy1maWx0ZXItcG9wdWxhcjpob3ZlciB7XG4gIG9wYWNpdHk6IDAuNztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAuY2F0YWxvZy1wcm9kdWN0cy1maWx0ZXIgLmNhdGFsb2ctcHJvZHVjdHMtZmlsdGVyLXBvcHVsYXIge1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxufVxuLmNhdGFsb2ctcHJvZHVjdHMtZmlsdGVyLXNlY3Rpb24ge1xuICBtYXJnaW4tYm90dG9tOiAtNHB4O1xuICBib3JkZXI6IG5vbmU7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1maWx0ZXItZmlsdGVycyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6ICMwMDA7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1maWx0ZXItZmlsdGVycyBpbWcge1xuICBtYXJnaW4tcmlnaHQ6IDEycHg7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1maWx0ZXItZmlsdGVyczpob3ZlciB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLWZpbHRlciBpbWcge1xuICBtYXJnaW4tbGVmdDogMjBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtZmlsdGVyIGltZzpob3ZlciB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLWZpbHRlciAuZmlsdGVyLWltZyB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtcGFnaW50YWlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDQ1cHg7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1wYWdpbnRhaW9uLW1vcmUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDQ4cHg7XG4gIGxpbmUtaGVpZ2h0OiA0OHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1wYWdpbnRhaW9uLW1vcmU6aG92ZXIge1xuICBvcGFjaXR5OiAwLjU7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1wYWdpbnRhaW9uLWJ0bnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLXBhZ2ludGFpb24tYnRucyBpbWcge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1wYWdpbnRhaW9uLWJ0bnMgaW1nOmhvdmVyIHtcbiAgb3BhY2l0eTogMC41O1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtcGFnaW50YWlvbi1idG5zIGltZzpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMTZweDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLXBhZ2ludGFpb24tYnRucyBpbWc6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAxNnB4O1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtcGFnaW50YWlvbi1idG4ge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzAwMDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLXBhZ2ludGFpb24tYnRuOmhvdmVyIHtcbiAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtcGFnaW50YWlvbi1kb3RzIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogNDBweDtcbiAgd2lkdGg6IDQwcHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIG1hcmdpbi1yaWdodDogMTZweDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLXBhZ2ludGFpb24tZG90cyAucGFnaW5hdGlvbi1kb3RzIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogNHB4O1xuICBoZWlnaHQ6IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLXBhZ2ludGFpb24tZG90cyAucGFnaW5hdGlvbi1kb3RzOjpiZWZvcmUsIC5jYXRhbG9nLXByb2R1Y3RzLXBhZ2ludGFpb24tZG90cyAucGFnaW5hdGlvbi1kb3RzOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDRweDtcbiAgaGVpZ2h0OiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1wYWdpbnRhaW9uLWRvdHMgLnBhZ2luYXRpb24tZG90czo6YmVmb3JlIHtcbiAgbGVmdDogMTRweDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLXBhZ2ludGFpb24tZG90cyAucGFnaW5hdGlvbi1kb3RzOjphZnRlciB7XG4gIGxlZnQ6IC0xMHB4O1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtYnRuIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XG4gIGhlaWdodDogNDBweDtcbiAgbGluZS1oZWlnaHQ6IDM4cHg7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLXJlbmlldiB7XG4gIGhlaWdodDogNTZweDtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogOHB4O1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogOHB4O1xuICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1yZW5pZXYtc3ZnIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDNweDtcbiAgd2lkdGg6IDI2cHg7XG4gIGhlaWdodDogMjJweDtcbiAgZmlsbDogI2QzZDNkMztcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLXJlbmlldiAuY2FsY3VsYXRvci1idG4ge1xuICBsaW5lLWhlaWdodDogNTZweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAwIDVweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGNvbG9yOiAjMDAwO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZjVmNWY1O1xuICBmb250LXdlaWdodDogNDAwO1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtcmVuaWV2IC5jYWxjdWxhdG9yLWJ0biBzcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLXJlbmlldiAuY2FsY3VsYXRvci1yZWxvYWQge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBjb2xvcjogIzAwMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0ZXh0LW92ZXJmbG93OiBpbml0aWFsO1xufVxuLmNhdGFsb2ctcHJvZHVjdHMgLnByb2R1Y3QtaXRlbSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDI0cHgpO1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xufVxuLmNhdGFsb2ctaW5mbyB7XG4gIG1hcmdpbi1ib3R0b206IDU0cHg7XG59XG4uY2F0YWxvZy1pbmZvLXRpdGxlIHtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBtYXJnaW4tYm90dG9tOiAyMXB4O1xufVxuLmNhdGFsb2ctaW5mby10ZXh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMThweDtcbn1cbi5jYXRhbG9nLWluZm8tc3VidGl0bGUge1xuICBmb250LXdlaWdodDogNzAwO1xuICBtYXJnaW4tYm90dG9tOiAycHg7XG59XG4uY2F0YWxvZy1pbmZvLWJ0biB7XG4gIGhlaWdodDogMzVweDtcbiAgbGluZS1oZWlnaHQ6IDMzcHg7XG4gIHBhZGRpbmc6IDBweCAxNnB4O1xufVxuLmNhdGFsb2ctaW5mby1saXN0IHtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICBtYXJnaW4tYm90dG9tOiAyN3B4O1xufVxuLmNhdGFsb2ctaW5mby1saXN0IGxpIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tYm90dG9tOiAycHg7XG59XG4uY2F0YWxvZy1pbmZvLWxpc3QgbGk6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTE1cHg7XG4gIHRvcDogOXB4O1xuICB3aWR0aDogOHB4O1xuICBoZWlnaHQ6IDhweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjMTAwO1xufVxuLmNhdGFsb2ctaW5mby1saXN0LWhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uY2F0YWxvZy1xdWVzdGlvbi1hbmQtYWN0aWNsZXMge1xuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2F0YWxvZy1xdWVzdGlvbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcbiAgfVxufVxuLmNhdGFsb2ctcXVlc3Rpb24tdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAyNnB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDJyZW07XG59XG4uY2F0YWxvZy1xdWVzdGlvbi1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4uY2F0YWxvZy1xdWVzdGlvbi1pdGVtLXRpdGxlIHtcbiAgcGFkZGluZzogMTdweCAwcHg7XG4gIGJhY2tncm91bmQ6ICNmNWY1ZjU7XG4gIHBhZGRpbmctbGVmdDogNTZweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4uY2F0YWxvZy1xdWVzdGlvbi1pdGVtLXRpdGxlIC5xdWVzdGlvbi14IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAlLCAtNTAlKTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDI0cHg7XG4gIHdpZHRoOiAxNnB4O1xuICBoZWlnaHQ6IDE2cHg7XG59XG4uY2F0YWxvZy1xdWVzdGlvbi1pdGVtLXRpdGxlIC5xdWVzdGlvbi14OmJlZm9yZSwgLmNhdGFsb2ctcXVlc3Rpb24taXRlbS10aXRsZSAucXVlc3Rpb24teDphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogOHB4O1xuICBjb250ZW50OiBcIiBcIjtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjMTAwO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG59XG4uY2F0YWxvZy1xdWVzdGlvbi1pdGVtLXRpdGxlIC5xdWVzdGlvbi14OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xufVxuLmNhdGFsb2ctcXVlc3Rpb24taXRlbS10aXRsZSAucXVlc3Rpb24teDphZnRlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbn1cbi5jYXRhbG9nLXF1ZXN0aW9uLWl0ZW0tdGV4dCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBhZGRpbmc6IDE1cHggMTZweCAyN3B4IDBweDtcbiAgcGFkZGluZy1sZWZ0OiA1NnB4O1xufVxuLmNhdGFsb2ctdmlkZW8ge1xuICBtYXJnaW4tYm90dG9tOiA4NXB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2F0YWxvZy12aWRlby13cmFwIHtcbiAgICBtYXJnaW4tcmlnaHQ6IC0yMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDEycHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhdGFsb2ctdmlkZW8gLnJvdyB7XG4gICAgZmxleC13cmFwOiBub3dyYXA7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgfVxufVxuLmNhdGFsb2ctdmlkZW8gLnJvdzo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICB3aWR0aDogMDtcbn1cbi5jYXRhbG9nLXZpZGVvIC5yb3cge1xuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XG59XG4uY2F0YWxvZy12aWRlbyAucm93IHtcbiAgb3ZlcmZsb3c6IC1tb3otc2Nyb2xsYmFycy1ub25lO1xufVxuLmNhdGFsb2ctdmlkZW8taXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgLmNhdGFsb2ctdmlkZW8taXRlbSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4uY2F0YWxvZy12aWRlby1pdGVtLXByZXZpZXcge1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbi1ib3R0b206IDlweDtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG4uY2F0YWxvZy12aWRlby1pdGVtLXByZXZpZXcgaW1nIHtcbiAgbWF4LWhlaWdodDogMTc2cHg7XG59XG4uY2F0YWxvZy12aWRlby1pdGVtLXRleHQge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xufVxuLmNhdGFsb2ctYnJhbmRzLWhlYWRlciB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG59XG4uY2F0YWxvZy1icmFuZHMtbWFpbiB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDYsIDFmcik7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtZ2FwOiAyNHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2F0YWxvZy1icmFuZHMtbWFpbiB7XG4gICAgbWFyZ2luLXJpZ2h0OiAtMTVweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG4gIH1cbn1cbi5jYXRhbG9nLWJyYW5kcy10aXRsZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAycmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5jYXRhbG9nLWJyYW5kcy10aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgfVxufVxuLmNhdGFsb2ctYnJhbmRzLWJ0biB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29sb3I6ICMwMDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgLmNhdGFsb2ctYnJhbmRzLWJ0biB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAuY2F0YWxvZy1icmFuZHMgLmZlZWRiYWNrX2xpbmsge1xuICAgIG1hcmdpbi1ib3R0b206IDU2cHg7XG4gIH1cbn1cbi5jYXRhbG9nLWJyYW5kcy1pdGVtIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAyMDBweDtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxNnB4KTtcbiAgcGFkZGluZzogMTZweCAzMHB4O1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZSBhbGw7XG59XG4uY2F0YWxvZy1icmFuZHMtaXRlbTpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cbi5jYXRhbG9nLWJyYW5kcy1pdGVtLWltZyB7XG4gIG1heC13aWR0aDogMTQwcHg7XG59XG4uY2F0YWxvZy1icmFuZHMtaXRlbS1pbWcgaW1nIHtcbiAgbWF4LWhlaWdodDogNDhweDtcbn1cbi5jYXRhbG9nLWFydGljbGVzLXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMjRweDtcbn1cbi5jYXRhbG9nLWFydGljbGVzLWl0ZW0ge1xuICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5jYXRhbG9nLWFydGljbGVzLWl0ZW0taW1nIHtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIG1hcmdpbi1ib3R0b206IDE3cHg7XG59XG4uY2F0YWxvZy1hcnRpY2xlcy1pdGVtLWltZyBpbWcge1xuICBtYXgtaGVpZ2h0OiAxOTJweDtcbn1cbi5jYXRhbG9nLWFydGljbGVzLWl0ZW0tY29udGVudCB7XG4gIHBhZGRpbmc6IDBweCAyNHB4IDIwcHggMjRweDtcbn1cbi5jYXRhbG9nLWFydGljbGVzLWl0ZW0tZGF0ZSB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIG1hcmdpbi1ib3R0b206IDExcHg7XG59XG4uY2F0YWxvZy1hcnRpY2xlcy1pdGVtLXRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xufVxuLmNhdGFsb2ctYXJ0aWNsZXMtaXRlbS10ZXh0IHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMTdweDtcbn1cbi5jYXRhbG9nLWFydGljbGVzLWl0ZW0tbGluayB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjMWE2NmFlO1xufVxuLmNhdGFsb2ctYXJ0aWNsZXMtaXRlbS1saW5rOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG4uY2F0YWxvZyAuY2hlY2tib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4uY2F0YWxvZyAuY2hlY2tib3gtaW5wdXQge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmNhdGFsb2cgLmNoZWNrYm94LWlucHV0OmNoZWNrZWQgKyAuY2hlY2tib3gtbGFiZWw6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNzFjMjg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cbi5jYXRhbG9nIC5jaGVja2JveC1pbnB1dDpjaGVja2VkICsgLmNoZWNrYm94LWxhYmVsOjphZnRlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4uY2F0YWxvZyAuY2hlY2tib3gtbGFiZWwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmctbGVmdDogMjhweDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xufVxuLmNhdGFsb2cgLmNoZWNrYm94LWxhYmVsOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDE2cHg7XG4gIGhlaWdodDogMTZweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2U1ZWRmNztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAycHg7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDE7XG59XG4uY2F0YWxvZyAuY2hlY2tib3gtbGFiZWw6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxOHB4O1xuICBoZWlnaHQ6IDE4cHg7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy9pY29ucy9jaGVja2JveC1hcnJvdy5zdmdcIikgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IDEwcHggOHB4O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIG9wYWNpdHk6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMXB4O1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAyO1xufVxuLmNhdGFsb2cgLmNvbnRhY3Qge1xuICBwYWRkaW5nOiA2NHB4IDBweDtcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbn1cbi5jYXRhbG9nIC5jb250YWN0LWl0ZW0ge1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDIwcHgpO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIHBhZGRpbmc6IDM1cHg7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB6LWluZGV4OiAxO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY2F0YWxvZyAuY29udGFjdC1pdGVtIC5tYWluLXNlYXJjaC1mb3JtIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuLmNhdGFsb2cgLmNvbnRhY3QtaXRlbS10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMS4zNzVyZW07XG4gIG1hcmdpbi1ib3R0b206IDlweDtcbiAgbWF4LXdpZHRoOiAzNzVweDtcbn1cbi5jYXRhbG9nIC5jb250YWN0LWl0ZW0tdGl0bGUtbWFpbCB7XG4gIG1hcmdpbi1ib3R0b206IDI3cHg7XG59XG4uY2F0YWxvZyAuY29udGFjdC1pdGVtLXRleHQge1xuICBmb250LXNpemU6IDFyZW07XG4gIGNvbG9yOiAjODQ4NDg0O1xuICBtYXJnaW4tYm90dG9tOiAyN3B4O1xufVxuLmNhdGFsb2cgLmNvbnRhY3QtaXRlbS1pbmZvIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbn1cbi5jYXRhbG9nIC5jb250YWN0LWl0ZW0taW5mbyBhIHtcbiAgY29sb3I6ICMxYTY2YWU7XG59XG4uY2F0YWxvZyAuY29udGFjdC1pdGVtLWluZm8gYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuLmNhdGFsb2cgLmNvbnRhY3QtaXRlbS1iZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IC00cHg7XG4gIGJvdHRvbTogLTZweDtcbiAgei1pbmRleDogLTE7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcbiAgLmNhdGFsb2cgLmNvbnRhY3QtaXRlbS1iZyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmNhdGFsb2cgLmNvbnRhY3QgLm1haW4tc2VhcmNoLWZvcm0ge1xuICBtYXgtd2lkdGg6IDM1MnB4O1xuICBtYXJnaW4tYm90dG9tOiAxN3B4O1xufVxuLmNhdGFsb2cgLmNvbnRhY3QgLm1haW4tc2VhcmNoLWJ0biB7XG4gIGJhY2tncm91bmQ6ICNiYzAwMDA7XG59XG5cbi5jYWxjdWxhdG9yIHtcbiAgcGFkZGluZy10b3A6IDU0cHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xuICBtYXJnaW4tYm90dG9tOiA2NHB4O1xufVxuLmNhbGN1bGF0b3ItdGl0bGUge1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgLmNhbGN1bGF0b3ItdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS4zNzVyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMzRweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cbi5jYWxjdWxhdG9yLXRpdGxlIHNwYW4ge1xuICBjb2xvcjogIzFhNjZhZTtcbn1cbi5jYWxjdWxhdG9yLWNvdW50ZXIge1xuICBtYXJnaW4tYm90dG9tOiA0NXB4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDQ1cHgpO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5jYWxjdWxhdG9yLWNvdW50ZXIge1xuICAgIGhlaWdodDogY2FsYygxMDAlIC0gMjBweCk7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxufVxuLmNhbGN1bGF0b3ItY291bnRlci10aXRsZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlBvcHBpbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xufVxuLmNhbGN1bGF0b3ItY291bnRlci10ZXh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMjFweDtcbn1cbi5jYWxjdWxhdG9yLWNvdW50ZXItZmllbGQgaW5wdXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGhlaWdodDogNDBweDtcbiAgd2lkdGg6IDE0NHB4O1xuICBwYWRkaW5nOiAwcHggMTZweDtcbn1cbi5jYWxjdWxhdG9yLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhbGN1bGF0b3Itd3JhcHBlciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMzJweDtcbiAgfVxufVxuLmNhbGN1bGF0b3ItdG90YWwge1xuICBmb250LXNpemU6IDVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG59XG4uY2FsY3VsYXRvci10b3RhbC1zdWJ0ZXh0IHtcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICByaWdodDogMTJweDtcbn1cbi5jYWxjdWxhdG9yLWJ0biB7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXdlaWdodDogNjAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA4cHg7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDhweDtcbiAgcGFkZGluZzogMHB4IDc0cHg7XG4gIGJhY2tncm91bmQ6ICMyYTQ0NTU7XG59XG4uY2FsY3VsYXRvci1idG4td3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG4uY2FsY3VsYXRvci1yZWxvYWQge1xuICBiYWNrZ3JvdW5kOiAjMmE0NDU1O1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDhweDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDhweDtcbiAgcGFkZGluZzogMCAxNXB4O1xufVxuLmNhbGN1bGF0b3ItcmVsb2FkLWltZyB7XG4gIG1heC13aWR0aDogMjZweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuLmNhbGN1bGF0b3ItcmVsb2FkLWltZy1zdmcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogM3B4O1xuICBmaWxsOiAjZmZmO1xuICB3aWR0aDogMjZweDtcbiAgaGVpZ2h0OiAyMnB4O1xufVxuXG4uc3RpY2tlci1oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uc3RpY2tlci1oaWRkZW4tb3BlbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnN0aWNrZXItaGlkZGVuLW9wZW5CIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5jYXRhbG9nLXByb2R1Y3RzLXByaWNlLWlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGdhcDogOHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG4uY2F0YWxvZy1wcm9kdWN0cy1wcmljZS1pbnB1dCAuY2F0YWxvZy1wcm9kdWN0cy1wcmljZS1maWVsZCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiA0MHB4O1xufVxuXG4uY2F0YWxvZy1wcm9kdWN0cy1wcmljZS1maWVsZCBpbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDBweCAxNnB4O1xuICBvdXRsaW5lOiBub25lO1xuICBmb250LXNpemU6IDE5cHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcbiAgY29sb3I6ICNkM2QzZDM7XG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufVxuXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi5jYXRhbG9nLXByb2R1Y3RzLXNsaWRlciAucHJvZ3Jlc3Mge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYmFja2dyb3VuZDogIzA3MWMyODtcbn1cblxuLmNhdGFsb2ctcHJvZHVjdHMtcmFuZ2UtaW5wdXQgaW5wdXQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDVweDtcbiAgdG9wOiAxcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xufVxuXG5pbnB1dFt0eXBlPXJhbmdlXTo6LXdlYmtpdC1zbGlkZXItdGh1bWIge1xuICBoZWlnaHQ6IDE3cHg7XG4gIHdpZHRoOiAxN3B4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6ICMwNzFjMjg7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGJveC1zaGFkb3c6IDAgMCA2cHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbn1cblxuaW5wdXRbdHlwZT1yYW5nZV06Oi1tb3otcmFuZ2UtdGh1bWIge1xuICBoZWlnaHQ6IDE3cHg7XG4gIHdpZHRoOiAxN3B4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZDogIzA3MWMyODtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgYm94LXNoYWRvdzogMCAwIDZweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xufVxuXG4uY2hlY2tib3gtaGlkZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5jaGVja2JveC1vbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnN0aWNrZXItaGlkZGVuLW9wZW4taW5mbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uY2F0YWxvZy1xdWVzdGlvbi10b2dnbGUgLmNhdGFsb2ctcXVlc3Rpb24taXRlbS10ZXh0IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmNhdGFsb2ctcXVlc3Rpb24tdG9nZ2xlIC5xdWVzdGlvbi14OjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG59XG5cbi5jYXRhbG9nLXNlYXJjaC1mb3JtIHNwYW4uZXJyb3Ige1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogLTE1cHg7XG4gIGNvbG9yOiAjYmMwMDAwO1xuICBmb250LXNpemU6IDAuNzVyZW07XG59XG5cbi5yYW5nZS1zbGlkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5pcnMtLXJvdW5kIHtcbiAgaGVpZ2h0OiBpbml0aWFsO1xufVxuXG4uaXJzLS1yb3VuZCAuaXJzLWJhciB7XG4gIHRvcDogMDtcbn1cblxuLmlycy0tcm91bmQgLmlycy1saW5lIHtcbiAgdG9wOiAtMXB4O1xuICBoZWlnaHQ6IDJweDtcbn1cblxuLmlycy0tcm91bmQgLmlycy1mcm9tLFxuLmlycy0tcm91bmQgLmlycy10byxcbi5pcnMtLXJvdW5kIC5pcnMtc2luZ2xlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmlycy0tcm91bmQgLmlycy1taW4sXG4uaXJzLS1yb3VuZCAuaXJzLW1heCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5pcnMtLXJvdW5kIC5pcnMtaGFuZGxlIHtcbiAgYmFja2dyb3VuZDogIzA3MWMyODtcbiAgYm9yZGVyOiA0cHggc29saWQgIzA3MWMyODtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMTZweDtcbiAgdG9wOiAtN3B4O1xufVxuLmlycy0tcm91bmQgLmlycy1oYW5kbGU6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjMDcxYzI4O1xufVxuXG4uaXJzLS1yb3VuZCAuaXJzLWhhbmRsZS5zdGF0ZV9ob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMwNzFjMjg7XG59XG5cbi5pcnMtLXJvdW5kIC5pcnMtYmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA3MWMyODtcbiAgaGVpZ2h0OiAycHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pdGVtLWRlc2NyaXB0aW9uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pdGVtLXJhaXQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pdGVtLW9wZW4ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pdGVtLWltZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDZweDtcbiAgfVxuICAuY2F0YWxvZy1wcm9kdWN0cy1ncmlkIC5wcm9kdWN0LWl0ZW0tdGl0bGUge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pdGVtLWJ0biB7XG4gICAgd2lkdGg6IDg0cHg7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pdGVtLWJ0biBpbWcge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pdGVtLWJ0bi1zcGFuIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWdyaWQgLnByb2R1Y3QtaXRlbS1pbmZvIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pdGVtLWluZm8tYWRhcHRpdmUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pdGVtLWluZm8tYWRhcHRpdmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWdyaWQgLnByb2R1Y3QtaXRlbS1pbnN0YWxsbWVudHMge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB3aWR0aDogOTAlO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWdyaWQgLnByb2R1Y3QtaXRlbS1kZXNjcmlwdGlvbiB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pbWcge1xuICAgIHdpZHRoOiAzMCUgIWltcG9ydGFudDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkgYW5kIChtYXgtd2lkdGg6IDEzMDBweCkge1xuICAuY2F0YWxvZy1wcm9kdWN0cy1ncmlkIC5wcm9kdWN0LWl0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWdyaWQgLnByb2R1Y3QtaW1nIHtcbiAgICB3aWR0aDogMjclO1xuICAgIG1hcmdpbi1yaWdodDogMThweDtcbiAgfVxuICAuY2F0YWxvZy1wcm9kdWN0cy1ncmlkIC5wcm9kdWN0LWltZyAucHJvZHVjdC1pdGVtLW9wZW4ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pbWcgLnByb2R1Y3QtaXRlbS1yYWl0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWdyaWQgLnByb2R1Y3QtaW1nIC5wcm9kdWN0LWl0ZW0taW5zdGFsbG1lbnRzIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB9XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWdyaWQgLnByb2R1Y3QtaW1nIC5wcm9kdWN0LWl0ZW0tdGl0bGUge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCAucHJvZHVjdC1pbWcgLnByb2R1Y3QtaXRlbS1pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgfVxufVxuXG4uY2F0YWxvZy1wcm9kdWN0cy1saW5lIC5jb2wtMTIsXG4uY2F0YWxvZy1wcm9kdWN0cy1saW5lIC5jb2wtc20tNixcbi5jYXRhbG9nLXByb2R1Y3RzLWxpbmUgLmNvbC1sLTQge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGZsZXg6IDEwMCU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWxpbmUgLnByb2R1Y3QtaXRlbS1idG4ge1xuICAgIG1heC13aWR0aDogODRweDtcbiAgfVxuICAuY2F0YWxvZy1wcm9kdWN0cy1saW5lIC5wcm9kdWN0LWl0ZW0tYnRuLXNwYW4ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtbGluZSAucHJvZHVjdC1pdGVtLWJ0biBpbWcge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG4gIH1cbn1cbi5jYXRhbG9nLXByb2R1Y3RzLWxpbmUgLnByb2R1Y3QtaXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1pbi13aWR0aDogMTAwJTtcbiAgcGFkZGluZy1ib3R0b206IDE2cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWxpbmUgLnByb2R1Y3QtaXRlbS1vcGVuIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWxpbmUgLnByb2R1Y3QtaXRlbS1pbnN0YWxsbWVudHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1saW5lIC5wcm9kdWN0LWl0ZW0tdGl0bGUge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtbGluZSAucHJvZHVjdC1pdGVtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiA3MyU7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1saW5lIC5wcm9kdWN0LWl0ZW0taW5mbyB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1saW5lIC5wcm9kdWN0LWl0ZW0tZGVzY3JpcHRpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG59XG4uY2F0YWxvZy1wcm9kdWN0cy1saW5lIC5wcm9kdWN0LWl0ZW0taW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMjVweDtcbn1cbi5jYXRhbG9nLXByb2R1Y3RzLWxpbmUgLnByb2R1Y3QtaW1nIHtcbiAgd2lkdGg6IDI2JTtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtbGluZSAucHJvZHVjdC1pbmZvIHtcbiAgd2lkdGg6IDYwJTtcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xufVxuLmNhdGFsb2ctcHJvZHVjdHMtbGluZSAucHJvZHVjdC1wcmljZSB7XG4gIHdpZHRoOiAzNyU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjkwcHgpIHtcbiAgLmNhdGFsb2ctcHJvZHVjdHMtbGluZSAucHJvZHVjdC1pdGVtLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWxpbmUgLnByb2R1Y3QtaXRlbS1yYWl0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5jYXRhbG9nLXByb2R1Y3RzLWxpbmUgLnByb2R1Y3QtaXRlbS1pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgfVxuICAuY2F0YWxvZy1wcm9kdWN0cy1saW5lIC5wcm9kdWN0LWltZyB7XG4gICAgd2lkdGg6IDI3JSAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi1yaWdodDogMzZweDtcbiAgfVxuICAuY2F0YWxvZy1wcm9kdWN0cy1saW5lIC5wcm9kdWN0LWluZm8ge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmNhdGFsb2ctcHJvZHVjdHMtbGluZSAucHJvZHVjdC1wcmljZSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxufVxuXG4uY2F0YWxvZy1pbWctb3BhY2l0eSBpbWcge1xuICBvcGFjaXR5OiAwLjM7XG59XG5cbi5zbGlkZXJfYXJ0aWNsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnNsaWRlcl9hcnRpY2xlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IC0yNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDEycHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAuc2xpZGVyX2FydGljbGUge1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIH1cbn1cbi5zbGlkZXJfYXJ0aWNsZSAuc3dpcGVyLWJ1dHRvbi1kaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuc2xpZGVyX2FydGljbGUgLnN3aXBlci13cmFwcGVyIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBtYXJnaW46IDBweCAtNXB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5zbGlkZXJfYXJ0aWNsZSAuc3dpcGVyLXNsaWRlIHtcbiAgICBtYXgtd2lkdGg6IDQyNHB4O1xuICAgIG1hcmdpbi1yaWdodDogMjRweDtcbiAgfVxufVxuXG4vKiDRhdGA0L7QvCwg0YHQsNGE0LDRgNC4ICovXG4uc3dpcGVyLXdyYXBwZXI6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDA7XG59XG5cbi8qIGllIDEwKyAqL1xuLnN3aXBlci13cmFwcGVyIHtcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xufVxuXG4vKiDRhNGEICjRgdCy0L7QudGB0YLQstC+INCx0L7Qu9GM0YjQtSDQvdC1INGA0LDQsdC+0YLQsNC10YIsINC00YDRg9Cz0LjRhSDRgdC/0L7RgdC+0LHQvtCyINGC0L7QttC1INC90LXRgikqL1xuLnN3aXBlci13cmFwcGVyIHtcbiAgb3ZlcmZsb3c6IC1tb3otc2Nyb2xsYmFycy1ub25lO1xufVxuXG4uYXJ0aWNsZS1idXR0b24tcHJldixcbi5hcnRpY2xlLWJ1dHRvbi1uZXh0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi8uLi9pbWFnZXMvaWNvbnMvcHJvZHVjdC1zbGlkZXItcmlnaHQuc3ZnKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmFydGljbGUtYnV0dG9uLXByZXYsXG4uYXJ0aWNsZS1idXR0b24tbmV4dCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uYXJ0aWNsZS1idXR0b24tcHJldiB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gIHRvcDogNDMlO1xuICBsZWZ0OiA4cHg7XG4gIHotaW5kZXg6IDk7XG59XG5cbi5hcnRpY2xlLWJ1dHRvbi1uZXh0IHtcbiAgdG9wOiA0MyU7XG4gIHJpZ2h0OiA4cHg7XG4gIHotaW5kZXg6IDk7XG59XG5cbi5jYXRhbG9nLXN0aWNrZXJzLXdyYXA6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDA7XG59XG5cbi5jYXRhbG9nLXN0aWNrZXJzLXdyYXAge1xuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XG59XG5cbi5jYXRhbG9nLXN0aWNrZXJzLXdyYXAge1xuICBvdmVyZmxvdzogLW1vei1zY3JvbGxiYXJzLW5vbmU7XG59XG5cbi5jYXRhbG9nLWJyYW5kcy1tYWluOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIHdpZHRoOiAwO1xufVxuXG4uY2F0YWxvZy1icmFuZHMtbWFpbiB7XG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbn1cblxuLmNhdGFsb2ctYnJhbmRzLW1haW4ge1xuICBvdmVyZmxvdzogLW1vei1zY3JvbGxiYXJzLW5vbmU7XG59XG5cbi5jYXJkLWludGVyZXN0LXdyYXA6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDA7XG59XG5cbi5jYXJkLWludGVyZXN0LXdyYXAge1xuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XG59XG5cbi5jYXJkLWludGVyZXN0LXdyYXAge1xuICBvdmVyZmxvdzogLW1vei1zY3JvbGxiYXJzLW5vbmU7XG59XG5cbi5jYXRhbG9nLXByb2R1Y3RzLWltZy1vcGVuIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uLy4vaW1hZ2VzL2ljb25zL3JlZC1jcm9zcy5zdmcpO1xufVxuXG4uY2FyZC1pdGVtLXdyYXBwZXIge1xuICBwYWRkaW5nOiAyN3B4IDI0cHggMjBweCAyNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG59XG4uY2FyZC1pdGVtLXdyYXBwZXItbWlzc2luZyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5jYXJkLWl0ZW0tY291bnRlciB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiA1NXB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMzQwcHgpIHtcbiAgLmNhcmQtaXRlbS1jb3VudGVyIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gIH1cbn1cbi5jYXJkLWl0ZW0tY291bnRlci10eHQge1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42NzA1ODgyMzUzKTtcbn1cbi5jYXJkLWl0ZW0tY291bnRlci1idG4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QzZDNkMztcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uY2FyZC1pdGVtLWNvdW50ZXItYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJhNDQ1NTtcbn1cbi5jYXJkLWl0ZW0tY291bnRlci1idG46bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcbn1cbi5jYXJkLWl0ZW0tY291bnRlci1idG46bGFzdC1jaGlsZCBpbWcge1xuICB0b3A6IDQ4JTtcbiAgbGVmdDogNTQlO1xufVxuLmNhcmQtaXRlbS1jb3VudGVyLWJ0biBpbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuLmNhcmQtaXRlbS1jb3VudGVyLWlucHV0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xuICB3aWR0aDogNTVweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBib3JkZXI6IG5vbmU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZDNkM2QzO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2QzZDNkMztcbiAgei1pbmRleDogMTtcbn1cbi5jYXJkLWl0ZW0tcHJpY2Uge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG4uY2FyZC1pdGVtLXByaWNlLXR4dCB7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbn1cbi5jYXJkLWl0ZW0tcHJpY2Utb2xkIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgY29sb3I6ICM4MDgwODA7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG4uY2FyZC1pdGVtLXByaWNlLW5ldyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xuICBwYWRkaW5nLWxlZnQ6IDhweDtcbiAgcGFkZGluZy1yaWdodDogOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjMTAwO1xuICBoZWlnaHQ6IDE4cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDE4cHg7XG59XG4uY2FyZC1pdGVtLXByaWNlLWN1cnJlbnQge1xuICBmb250LXNpemU6IDEuNzVyZW07XG4gIGNvbG9yOiAjYmMwMDAwO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuLmNhcmQtaXRlbS1wcmljZS1jdXJyZW5jeSB7XG4gIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG59XG4uY2FyZC1pdGVtLWxpbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luLWxlZnQ6IC0yNHB4O1xuICBtYXJnaW4tcmlnaHQ6IC0yNHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xufVxuLmNhcmQtaXRlbS1idG4ge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmMwMDAwO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLmNhcmQtaXRlbS1idG46aG92ZXIge1xuICBvcGFjaXR5OiAwLjU7XG59XG4uY2FyZC1pdGVtLWJ0bjpudGgtb2YtdHlwZSgyKSB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNiYzAwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGNvbG9yOiAjYmMwMDAwO1xufVxuLmNhcmQtaXRlbS1idG46bnRoLW9mLXR5cGUoMik6aG92ZXIge1xuICBvcGFjaXR5OiAwLjU7XG59XG4uY2FyZC1pdGVtLXF1ZXN0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgLmNhcmQtaXRlbS1xdWVzdGlvbiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4uY2FyZC1pdGVtLXF1ZXN0aW9uIGltZyB7XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuICBtYXgtd2lkdGg6IDIwcHg7XG59XG4uY2FyZC1pdGVtLXF1ZXN0aW9uLWxpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTtcbiAgY29sb3I6ICMxYTY2YWU7XG59XG4uY2FyZC1pdGVtLXF1ZXN0aW9uLWxpbms6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi5jYXJkLWl0ZW0tdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LWZhbWlseTogXCJQb3BwaW5zXCIsIHNhbnMtc2VyaWY7XG59XG4uY2FyZC1pdGVtLWZlYXR1cmVzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB3aWR0aDogNDYlO1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XG4gIC5jYXJkLWl0ZW0tZmVhdHVyZXMge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5jYXJkLWl0ZW0tZmVhdHVyZXMgLmZlYXR1cmVzLWxhYmVsIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDU2cHg7XG4gICAgaGVpZ2h0OiA1NnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIH1cbiAgLmNhcmQtaXRlbS1mZWF0dXJlcyAuZmVhdHVyZXMtbGFiZWwgc3BhbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbi5jYXJkLWl0ZW0tZmVhdHVyZXM6bnRoLWNoaWxkKG9kZCkge1xuICBtYXJnaW4tcmlnaHQ6IDI0cHg7XG59XG4uY2FyZC1pdGVtLWZlYXR1cmVzIC5mZWF0dXJlcy1pbnB1dCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uY2FyZC1pdGVtLWZlYXR1cmVzIC5mZWF0dXJlcy1sYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogODJweDtcbiAgaGVpZ2h0OiAzMnB4O1xuICBsaW5lLWhlaWdodDogMjhweDtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXI6IDJweCBzb2xpZCAjZDNkM2QzO1xuICBwYWRkaW5nOiAwIDRweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uY2FyZC1pdGVtLWZlYXR1cmVzIC5mZWF0dXJlcy1sYWJlbCBpbnB1dDpjaGVja2VkICsgLmZlYXR1cmVzLWxhYmVsLWJvcmRlciB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xufVxuLmNhcmQtaXRlbS1mZWF0dXJlcyAuZmVhdHVyZXMtbGFiZWw6aG92ZXIge1xuICBvcGFjaXR5OiAwLjU7XG59XG4uY2FyZC1pdGVtLWZlYXR1cmVzIC5mZWF0dXJlcy1sYWJlbDpudGgtY2hpbGQob2RkKSB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbi5jYXJkLWl0ZW0tZmVhdHVyZXMgLmZlYXR1cmVzLWxhYmVsLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogODJweDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDE0MDBweCkge1xuICAuY2FyZC1pdGVtLWZlYXR1cmVzIC5mZWF0dXJlcy1sYWJlbC13cmFwcGVyIHtcbiAgICB3aWR0aDogNTZweDtcbiAgICBoZWlnaHQ6IDU2cHg7XG4gIH1cbn1cbi5jYXJkLWl0ZW0tZmVhdHVyZXMgLmZlYXR1cmVzLWxhYmVsLWJvcmRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogODAlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxNDAxcHgpIHtcbiAgLmNhcmQtaXRlbS1mZWF0dXJlcyAuZmVhdHVyZXMtbGFiZWwtYm9yZGVyIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cbn1cbi5jYXJkLWl0ZW0tZmVhdHVyZXMgLmZlYXR1cmVzLWxhYmVsLWJvcmRlciAuZmVhdHVyZXMtbGFiZWwge1xuICBib3JkZXI6IG5vbmU7XG59XG4uY2FyZC1pdGVtLWZlYXR1cmVzLXRpdGxlIHtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBtYXJnaW4tYm90dG9tOiAxM3B4O1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xufVxuLmNhcmQtaXRlbS1saW5rIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA0MHB4O1xuICBsaW5lLWhlaWdodDogMzhweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXdlaWdodDogNjAwO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG4uY2FyZC1pdGVtLWxpbms6aG92ZXIge1xuICBvcGFjaXR5OiAwLjU7XG59XG4uY2FyZC1pdGVtLW9wdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDE2cHgpO1xuICBwYWRkaW5nOiAxNnB4IDMycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgY29sb3I6ICMwMDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgLmNhcmQtaXRlbS1vcHRpb25zIHtcbiAgICBwYWRkaW5nOiAxNnB4IDIxcHggMTZweCAxNnB4O1xuICB9XG59XG4uY2FyZC1pdGVtLW9wdGlvbnM6aG92ZXIge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGNvbG9yOiAjMmE0NDU1O1xufVxuLmNhcmQtaXRlbS1vcHRpb25zLXR4dCB7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG59XG4uY2FyZC1pdGVtLW9wdGlvbnMtaW1nIHtcbiAgbWluLXdpZHRoOiAzOHB4O1xuICBtYXgtd2lkdGg6IDM4cHg7XG59XG4uY2FyZC1pdGVtLW9wdGlvbnMtc3BhbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBvcGFjaXR5OiA1MCU7XG59XG4uY2FyZC1pdGVtLW1pbnVzIHtcbiAgbGVmdDogNDclICFpbXBvcnRhbnQ7XG4gIHRvcDogMTIlICFpbXBvcnRhbnQ7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmNhcmQtaXRlbS1yYWRpbyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgfVxuICAuY2FyZC1pdGVtLXJhZGlvOmxhc3QtY2hpbGQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmNhcmQtaXRlbS1yYWRpbyAuY2FyZC1pdGVtLXRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmNhcmQtaXRlbS1yYWRpbyAuY2FyZC1pdGVtLWxpbmsge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gIH1cbn1cbi5jYXJkLWl0ZW0tc3RhdHVzIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDE3cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgb3BhY2l0eTogMC43O1xufVxuLmNhcmQtaXRlbS1kZWxpdmVyeSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyN3B4O1xufVxuLmNhcmQtaXRlbS1kZWxpdmVyeS1zcGFuIHtcbiAgb3BhY2l0eTogMC43O1xufVxuLmNhcmQtaXRlbS1kZWxpdmVyeSBpbWcge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1yaWdodDogOXB4O1xufVxuLmNhcmQtaW50ZXJlc3Qge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuLmNhcmQtaW50ZXJlc3QtdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDJyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjM3NTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtaW50ZXJlc3QtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gIC5jYXJkLWludGVyZXN0LXRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuMzc1cmVtO1xuICB9XG59XG4uY2FyZC1pbnRlcmVzdC1pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogOHB4IDMycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlYmViZWI7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxNnB4KTtcbn1cbi5jYXJkLWludGVyZXN0LWl0ZW0taW1nIHtcbiAgbWF4LXdpZHRoOiA2NHB4O1xuICBtaW4td2lkdGg6IDY0cHg7XG4gIG1hcmdpbi1yaWdodDogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG4uY2FyZC1pbnRlcmVzdC1pdGVtLXR4dCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNvbG9yOiAjMDAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDM4MHB4KSB7XG4gIC5jYXJkLWludGVyZXN0LWl0ZW0tdHh0IHtcbiAgICBmb250LXNpemU6IDAuODc1cmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNhcmQtaW50ZXJlc3QtbW9iIHtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgfVxuICAuY2FyZC1pbnRlcmVzdC1tb2IgLmNvbC00IHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgZmxleDogMCAwIDA7XG4gICAgcGFkZGluZzogMCA4cHg7XG4gIH1cbiAgLmNhcmQtaW50ZXJlc3QtbW9iIC5jYXJkLWludGVyZXN0LWl0ZW0taW1nIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5jYXJkLWludGVyZXN0LW1vYiAuY2FyZC1pbnRlcmVzdC1pdGVtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBwYWRkaW5nOiAxOHB4IDE2cHg7XG4gIH1cbn1cblxuLmNhcmQtaW50ZXJlc3QtbW9iOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIHdpZHRoOiAwO1xufVxuXG4vKiBpZSAxMCsgKi9cbi5jYXJkLWludGVyZXN0LW1vYiB7XG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbn1cblxuLyog0YTRhCAo0YHQstC+0LnRgdGC0LLQviDQsdC+0LvRjNGI0LUg0L3QtSDRgNCw0LHQvtGC0LDQtdGCLCDQtNGA0YPQs9C40YUg0YHQv9C+0YHQvtCx0L7QsiDRgtC+0LbQtSDQvdC10YIpKi9cbi5jYXJkLWludGVyZXN0LW1vYiB7XG4gIG92ZXJmbG93OiAtbW96LXNjcm9sbGJhcnMtbm9uZTtcbn1cblxuLnNsaWRlci1hZGFwdGl2ZS13cmFwOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIHdpZHRoOiAwO1xufVxuXG4vKiBpZSAxMCsgKi9cbi5zbGlkZXItYWRhcHRpdmUtd3JhcCB7XG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbn1cblxuLyog0YTRhCAo0YHQstC+0LnRgdGC0LLQviDQsdC+0LvRjNGI0LUg0L3QtSDRgNCw0LHQvtGC0LDQtdGCLCDQtNGA0YPQs9C40YUg0YHQv9C+0YHQvtCx0L7QsiDRgtC+0LbQtSDQvdC10YIpKi9cbi5zbGlkZXItYWRhcHRpdmUtd3JhcCB7XG4gIG92ZXJmbG93OiAtbW96LXNjcm9sbGJhcnMtbm9uZTtcbn1cblxuLnByb2R1Y3Qtc3dpcGVyIHtcbiAgaGVpZ2h0OiA1ODlweDtcbiAgcGFkZGluZzogMnB4IDJweDtcbn1cbi5wcm9kdWN0LXN3aXBlciAuc3dpcGVyLXNjcm9sbGJhciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5jYXJkLWl0ZW0td3JhcHBlci1kYXJrIC5jYXJkLWl0ZW0tcHJpY2UtY3VycmVudCB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBjb2xvcjogIzAwMDAwMDtcbn1cbi5jYXJkLWl0ZW0td3JhcHBlci1kYXJrIC5jYXJkLWJ0bi1kYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJhNDQ1NTtcbn1cblxuLmRwbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnNsaWRlci1hZGFwdGl2ZS13cmFwIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICAgIHBhZGRpbmc6IDJweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuc2xpZGVyLWFkYXB0aXZlLXNsaWRlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICB3aWR0aDogMjY0cHggIWltcG9ydGFudDtcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gIH1cbiAgLnNsaWRlci1hZGFwdGl2ZSAucHJvZHVjdC1pdGVtIC5zd2lwZXItc2xpZGUge1xuICAgIHdpZHRoOiAyNjRweCAhaW1wb3J0YW50O1xuICB9XG4gIC5zbGlkZXItYWRhcHRpdmUgLnN3aXBlci1idXR0b24tcHJldiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuc2xpZGVyLWFkYXB0aXZlIC5zd2lwZXItYnV0dG9uLW5leHQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnNsaWRlci1hZGFwdGl2ZSAucHJvZHVjdC1pdGVtLWluc3RhbGxtZW50cyB7XG4gICAgbWF4LXdpZHRoOiAxODBweDtcbiAgICBmb250LXNpemU6IDAuODc1cmVtO1xuICB9XG59XG4uc2xpZGVyLWFkYXB0aXZlIC5zd2lwZXItYnV0dG9uLW5leHQsXG4uc2xpZGVyLWFkYXB0aXZlIC5zd2lwZXItYnV0dG9uLXByZXYge1xuICB0b3A6IDQ1JTtcbn1cblxuLnNsaWRlci1hZGFwdGl2ZS1wcmV2IHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi8uLi9pbWFnZXMvaWNvbnMvcHJvZHVjdC1zbGlkZXItcmlnaHQuc3ZnXCIpO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuLnNsaWRlci1hZGFwdGl2ZS1wcmV2OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG59XG4uc2xpZGVyLWFkYXB0aXZlLXByZXYgaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuLnNsaWRlci1hZGFwdGl2ZS1uZXh0IHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi8uLi9pbWFnZXMvaWNvbnMvcHJvZHVjdC1zbGlkZXItcmlnaHQuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuLnNsaWRlci1hZGFwdGl2ZS1uZXh0OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnByb2R1Y3Qtc3dpcGVyLW1vYiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLnByb2R1Y3Qtc3dpcGVyLW1vYiAuc2xpZGVyLWFkYXB0aXZlLXdyYXAge1xuICB0cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucHJvZHVjdC1zd2lwZXItZGVzYyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uc2xpZGVyLWFkYXB0aXZlLW5vbmUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jYXJkLWl0ZW0tY29udGFpbmVyLWFkYXB0aXZlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA1NnB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuY2FyZC1pdGVtLWluZGVudCB7XG4gICAgbWFyZ2luLWxlZnQ6IC0xNXB4O1xuICAgIG1hcmdpbi1yaWdodDogLTE1cHg7XG4gIH1cbn1cblxuLmZlYXR1cmVzLWxhYmVsLWxvbmcgLmZlYXR1cmVzLWxhYmVsLXdyYXBwZXIge1xuICB3aWR0aDogaW5pdGlhbCAhaW1wb3J0YW50O1xuICBtYXgtd2lkdGg6IGluaXRpYWwgIWltcG9ydGFudDtcbiAgbWluLXdpZHRoOiA1NnB4O1xufVxuLmZlYXR1cmVzLWxhYmVsLWxvbmcgLmZlYXR1cmVzLWxhYmVsIHtcbiAgd2lkdGg6IGluaXRpYWwgIWltcG9ydGFudDtcbiAgbWF4LXdpZHRoOiBpbml0aWFsICFpbXBvcnRhbnQ7XG4gIG1pbi13aWR0aDogNTZweCAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5wcm9kdWN0LXN3aXBlci1kZXNjLWludGVyZXN0IC5zd2lwZXItd3JhcHBlciB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDBweCwgMHB4KSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnByb2R1Y3Qtc3dpcGVyLWRlc2MtY2F0YWxvZyAuc3dpcGVyLXdyYXBwZXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMHB4LCAwcHgsIDBweCkgIWltcG9ydGFudDtcbiAgfVxufVxuXG4ucG9wdXAtcHJldmlldy1zbGlkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nOiA0OHB4IDY0cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5wb3B1cC1wcmV2aWV3LXNsaWRlciB7XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAucG9wdXAtcHJldmlldy1zbGlkZXIge1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xuICAucG9wdXAtcHJldmlldy1zbGlkZXIge1xuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG59XG4ucG9wdXAtcHJldmlldy1zbGlkZXIgLnBvcHVwLXByZXZpZXctc2xpZGVyLXZlcnRpYyB7XG4gIHdpZHRoOiAxOSU7XG4gIGhlaWdodDogMTAwJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnBvcHVwLXByZXZpZXctc2xpZGVyIC5wb3B1cC1wcmV2aWV3LXNsaWRlci12ZXJ0aWMge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xuICAucG9wdXAtcHJldmlldy1zbGlkZXIgLnBvcHVwLXByZXZpZXctc2xpZGVyLXZlcnRpYyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLnBvcHVwLXByZXZpZXctc2xpZGVyIC5wb3B1cC1wcmV2aWV3LXNsaWRlci1tYWluIHtcbiAgd2lkdGg6IDc1JTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgcGFkZGluZy10b3A6IDI1cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5wb3B1cC1wcmV2aWV3LXNsaWRlciAucG9wdXAtcHJldmlldy1zbGlkZXItbWFpbiB7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxufVxuLnBvcHVwLXByZXZpZXctc2xpZGVyIC5zd2lwZXIge1xuICBtYXJnaW46IDA7XG59XG4ucG9wdXAtcHJldmlldy1zbGlkZXIgLnN3aXBlci52ZXJ0aWNhbC1zbGlkZXIge1xuICBoZWlnaHQ6IDcwMHB4O1xufVxuLnBvcHVwLXByZXZpZXctc2xpZGVyIC5zd2lwZXIudmVydGljYWwtc2xpZGVyIC5zd2lwZXItd3JhcHBlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5wb3B1cC1wcmV2aWV3LXNsaWRlciAuc3dpcGVyLnZlcnRpY2FsLXNsaWRlciB7XG4gICAgaGVpZ2h0OiAyODBweDtcbiAgfVxufVxuLnBvcHVwLXByZXZpZXctc2xpZGVyIC5zd2lwZXIudmVydGljYWwtc2xpZGVyIC5zd2lwZXItc2xpZGUgaW1nIHtcbiAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbn1cbi5wb3B1cC1wcmV2aWV3LXNsaWRlciAuc3dpcGVyLnZlcnRpY2FsLXNsaWRlciAuc3dpcGVyLXNsaWRlLWFjdGl2ZSBpbWcge1xuICBib3JkZXI6IDJweCBzb2xpZCAjZmZjMTAwO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24ge1xuICBkaXNwbGF5OiBub25lO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC5zd2lwZXItcGFnaW5hdGlvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XG4gIHdpZHRoOiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtd2lkdGgsIHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1zaXplLCAyNHB4KSk7XG4gIGhlaWdodDogdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWhlaWdodCwgdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LXNpemUsIDJweCkpO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJBNDQ1NTtcbn1cblxuLnNsaWRlci1wcmV2aWVzLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogNDVweCAwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcbiAgLnNsaWRlci1wcmV2aWVzLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4ucHJldmlldy1idG4tbmV4dCB7XG4gIGNvbG9yOiAjMDcxYzI4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRyYW5zZm9ybTogcm90YXRlKDI3MGRlZyk7XG4gIHRvcDogMTBweDtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IDQ1cHg7XG59XG4ucHJldmlldy1idG4tbmV4dDphZnRlciB7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnByZXZpZXctYnRuLW5leHQge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gICAgdG9wOiAxMDBweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAtNDVweDtcbiAgfVxufVxuXG4ucHJldmlldy1idG4tcHJldiB7XG4gIGNvbG9yOiAjMDcxYzI4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRyYW5zZm9ybTogcm90YXRlKDI3MGRlZyk7XG4gIHRvcDogOTUlO1xuICByaWdodDogMDtcbiAgbGVmdDogNDVweDtcbn1cbi5wcmV2aWV3LWJ0bi1wcmV2OmFmdGVyIHtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucHJldmlldy1idG4tcHJldiB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICB0b3A6IDI4JTtcbiAgICByaWdodDogMHB4O1xuICAgIGxlZnQ6IDEwMCU7XG4gIH1cbn1cblxuLm1haW4tc2lsZGVyLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMHB4IDMwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xuICAubWFpbi1zaWxkZXItY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG59XG5cbi5tYWluLWJ1dHRvbi1uZXh0IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDUwJTtcbiAgd2lkdGg6IDI1cHg7XG4gIGhlaWdodDogNDBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uLy4vaW1hZ2VzL2ljb25zL2Fycm93LXNsaWRlci1wcmV2aWV3LW5leHQuc3ZnKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGF1dG87XG59XG4ubWFpbi1idXR0b24tbmV4dC5zd2lwZXItYnV0dG9uLWRpc2FibGVkIHtcbiAgb3BhY2l0eTogMC4zNTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xuICAubWFpbi1idXR0b24tbmV4dCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4ubWFpbi1idXR0b24tcHJldiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDUwJTtcbiAgd2lkdGg6IDI1cHg7XG4gIGhlaWdodDogNDBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uLy4vaW1hZ2VzL2ljb25zL2Fycm93LXNsaWRlci1wcmV2aWV3LW5leHQuc3ZnKTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGF1dG87XG59XG4ubWFpbi1idXR0b24tcHJldi5zd2lwZXItYnV0dG9uLWRpc2FibGVkIHtcbiAgb3BhY2l0eTogMC4zNTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xuICAubWFpbi1idXR0b24tcHJldiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uc3dpcGVyLXZlcnRpY2FsID4gLnN3aXBlci13cmFwcGVyIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5wb3B1cC1zZXJ0IHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAyMHB4IGF1dG87XG4gIG1heC13aWR0aDogNjE2cHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG4ucG9wdXAtc2VydCAubWZwLWNsb3NlIHtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogNDJweDtcbn1cblxuLnBvcHVwLXByZXZpZXcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBtYXJnaW46IDBweCBhdXRvO1xuICBwYWRkaW5nLWxlZnQ6IDQwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDQwcHg7XG59XG4ucG9wdXAtcHJldmlldyAubWZwLWNsb3NlLWJ0bi1pbiAubWZwLWNsb3NlIHtcbiAgZm9udC1zaXplOiAzNXB4O1xuICBjb2xvcjogIzg0ODQ4NDtcbiAgcmlnaHQ6IDExMnB4O1xuICB0b3A6IDMycHg7XG59XG5cbi5wb3B1cC1mb3JtLXJldmlld3Mge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMjBweCBhdXRvO1xuICBtYXgtd2lkdGg6IDY5NnB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5wb3B1cC1mb3JtLXJldmlld3Mge1xuICAgIG1hcmdpbjogMDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucG9wdXAtZm9ybS1yZXZpZXdzIC5wb3B1cC1hZ3JlZW1lbnQtdHh0IHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLnBvcHVwLWFncmVlbWVudC10eHQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi0J3QsNC20LjQvNCw0Y8g0LrQvdC+0L/QutGDIMKr0J7RgtC/0YDQsNCy0LjRgtGMINC+0YLQt9GL0LLCuyDQstGLINGB0L7Qs9C70LDRiNCw0LXRgtC10YHRjFwiO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucG9wdXAtZm9ybS1yZXZpZXdzIC5wb3B1cC1hZ3JlZW1lbnQtdHh0OjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwi0K8g0YHQvtCz0LvQsNGI0LDRjtGB0Ywg0YFcIjtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc4MHB4KSB7XG4gIC5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cyB7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm90dG9tOiAwO1xuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIH1cbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgbWF4LXdpZHRoOiA2OTZweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDBweCBhdXRvO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY4MHB4KSB7XG4gIC5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1jb250ZW50IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWhlYWRlciB7XG4gIHBhZGRpbmc6IDM0cHggNDhweDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkM2QzZDM7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcbiAgLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWhlYWRlciB7XG4gICAgcGFkZGluZzogMTVweDtcbiAgfVxufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWhlYWRlci10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMjhweDtcbiAgY29sb3I6ICMwMDA7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtaGVhZGVyLWl0ZW0ge1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcbiAgLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWhlYWRlci1pdGVtIHNwYW46bnRoLWNoaWxkKDEpIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtaGVhZGVyLWl0ZW0gc3BhbjpudGgtY2hpbGQoMikge1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiAjMWE2NmFlO1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkge1xuICBwYWRkaW5nOiAzNHB4IDQ4cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcbiAgLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkge1xuICAgIHBhZGRpbmc6IDI0cHggMTVweDtcbiAgfVxufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luLWJvdHRvbTogMTdweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2ODBweCkge1xuICAucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwgbGFiZWwge1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjMDAwO1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbCBsYWJlbCBzcGFuIHtcbiAgY29sb3I6ICNiYzAwMDA7XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsIC51cmwge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbCAuY3VzdG9tQ2hlY2tib3gge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IC0xO1xuICBvcGFjaXR5OiAwO1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbCAuY3VzdG9tQ2hlY2tib3ggKyBsYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsIC5jdXN0b21DaGVja2JveCArIGxhYmVsOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxZW07XG4gIGhlaWdodDogMWVtO1xuICBmbGV4LXNocmluazogMDtcbiAgZmxleC1ncm93OiAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjYWRiNWJkO1xuICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gIG1hcmdpbi1yaWdodDogMC41ZW07XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogNTAlIDUwJTtcbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwgLmN1c3RvbUNoZWNrYm94OmNoZWNrZWQgKyBsYWJlbDo6YmVmb3JlIHtcbiAgYm9yZGVyLWNvbG9yOiAjMDcxYzI4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDcxYzI4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDggOCclM2UlM2NwYXRoIGZpbGw9JyUyM2ZmZicgZD0nTTYuNTY0Ljc1bC0zLjU5IDMuNjEyLTEuNTM4LTEuNTVMMCA0LjI2IDIuOTc0IDcuMjUgOCAyLjE5M3onLyUzZSUzYy9zdmclM2VcIik7XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsIGlucHV0IHtcbiAgd2lkdGg6IDI4OHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XG4gIHBhZGRpbmc6IDEwcHggMTZweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcbiAgLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbCBpbnB1dCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMjVweDtcbiAgfVxufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbCBpbnB1dDpmb2N1cyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4MDgwODA7XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsIGlucHV0OmhvdmVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzgwODA4MDtcbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwgLmNhcmQtaXRlbS1yYXRpbmctaXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsIC5idG4tc3VibWl0IHtcbiAgcGFkZGluZzogOXB4IDMwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYTQ0NTU7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXdlaWdodDogNzAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY4MHB4KSB7XG4gIC5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwgLmJ0bi1zdWJtaXQge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcbiAgLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1pbmZvIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICB9XG4gIC5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtaW5mbyBpbnB1dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1pbmZvIHNwYW4uZXJyb3Ige1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtZmllbGQtdGV4dGFyZWEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcbiAgLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC10ZXh0YXJlYSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjVweDtcbiAgfVxufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC10ZXh0YXJlYSB0ZXh0YXJlYSB7XG4gIHBhZGRpbmc6IDEwcHggMTZweDtcbiAgd2lkdGg6IDYwMHB4O1xuICBoZWlnaHQ6IDEwNHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHJlc2l6ZTogbm9uZTtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC10ZXh0YXJlYSB0ZXh0YXJlYTpmb2N1cyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4MDgwODA7XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsLWZpZWxkLXF1YWxpdHkge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcbiAgLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC1xdWFsaXR5IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtZmllbGQtcXVhbGl0eSBpbnB1dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTlweDtcbiAgfVxuICAucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsLWZpZWxkLXF1YWxpdHkgaW5wdXQ6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC1xdWFsaXR5IC5wbHVzIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzU1OWU1Mztcbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtZmllbGQtcXVhbGl0eSAubWludXMge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYmMwMDAwO1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC1sb2FkIGlucHV0W3R5cGU9ZmlsZV0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC1sb2FkIC5lcnJvci1maWxlIHtcbiAgY29sb3I6ICNiYzAwMDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtZmllbGQtbG9hZCAuaW1nLWZpbGUge1xuICB3aWR0aDogODhweDtcbiAgaGVpZ2h0OiA2NHB4O1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC1sb2FkIC5sb2FkLWZpbGUge1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBoZWlnaHQ6IDYwcHg7XG4gIHBhZGRpbmc6IDE1cHggMTZweDtcbiAgd2lkdGg6IDI4OHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY4MHB4KSB7XG4gIC5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtZmllbGQtbG9hZCAubG9hZC1maWxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xuICB9XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsLWZpZWxkLWxvYWQgLmxvYWQtZmlsZSBzcGFuIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC0xMnB4O1xuICBjb2xvcjogIzAwMDtcbiAgcGFkZGluZy1sZWZ0OiAxNnB4O1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC11cmwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsLWZpZWxkLXVybCBpbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwO1xuICBwYWRkaW5nOiAxOHB4O1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC11cmwgaW5wdXQge1xuICBoZWlnaHQ6IDYwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogOTtcbiAgcGFkZGluZy1sZWZ0OiA2NnB4O1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1maWVsZC11cmwgaW5wdXQ6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNiYzAwMDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtZmllbGQtc2VuZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsLWZpZWxkLXNlbmQge1xuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gIH1cbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtZmllbGQtc2VuZCAucG9wdXAtYWdyZWVtZW50LXR4dCB7XG4gIHdpZHRoOiAzMjBweDtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtZmllbGQtc2VuZCAuY2hlY2tib3gge1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICB0b3A6IDVweDtcbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtcmF0aW5nIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1yYXRpbmcgLnJhdGluZy1sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1yYXRpbmcgLnJhdGluZy1zZXQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsLXJhdGluZyAucmF0aW5nLXNldCAuY2FyZC1pdGVtLXJhdGluZy1ib2R5IHtcbiAgZm9udC1zaXplOiAzLjEyNXJlbTtcbn1cbi5wb3B1cC1mb3JtLXJldmlld3MgLmZvcm0tcmV2aWV3cy1ib2R5IC5mb3JtLWNlbGwtcmF0aW5nIC5yYXRpbmctc2V0IC5jYXJkLWl0ZW0tcmF0aW5nLWJvZHk6OmJlZm9yZSB7XG4gIGNvbG9yOiAjZjlkZThlO1xufVxuLnBvcHVwLWZvcm0tcmV2aWV3cyAuZm9ybS1yZXZpZXdzLWJvZHkgLmZvcm0tY2VsbC1yYXRpbmcgLnJhdGluZy1zZXQgLmVycm9yIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IC0xNXB4O1xuICBsZWZ0OiAwO1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDAuNzVyZW07XG59XG4ucG9wdXAtZm9ybS1yZXZpZXdzIC5mb3JtLXJldmlld3MtYm9keSAuZm9ybS1jZWxsLXJhdGluZyAucmF0aW5nLXNldCAuY2FyZC1pdGVtLXJhdGluZy12YWx1ZSB7XG4gIGZvbnQtc2l6ZTogMjhweDtcbn1cblxuLmFsbC1maWxlcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5hbGwtZmlsZXMtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xufVxuXG4ucmVtb3ZlLWZpbGUge1xuICB3aWR0aDogMjBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHotaW5kZXg6IDk5OTtcbn1cbi5yZW1vdmUtZmlsZTpob3ZlciB7XG4gIGNvbG9yOiAjZmZjMTAwO1xufVxuXG4udHlwZS1maWxlIHtcbiAgcGFkZGluZzogNXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogNnB4O1xuICBsZWZ0OiAwO1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHotaW5kZXg6IDk5OTtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4ub3Blbi1maWxlcyB7XG4gIHdpZHRoOiA4OHB4O1xuICBoZWlnaHQ6IDY0cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMThweCAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuLm9wZW4tZmlsZXMgaW1nIHtcbiAgd2lkdGg6IDI2cHg7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLnBvcHVwLWNsb3NlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAyNnB4O1xuICBmb250LXNpemU6IDUwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5wb3B1cC1jbG9zZTpob3ZlciB7XG4gIG9wYWNpdHk6IDAuMzU7XG59XG5cbi5wb3B1cC1zZWNvbmQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDUwJTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB3aWR0aDogNTEycHg7XG4gIGhlaWdodDogYXV0bztcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgcGFkZGluZzogMzRweCA0OHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucG9wdXAtc2Vjb25kIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiA1MCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG5cbi5wb3B1cC1zZWNvbmQtYmxvY2sge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnBvcHVwLXNlY29uZC1iZyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI5LCAzOCwgNDQsIDAuMzUpO1xuICB6LWluZGV4OiA5OTk5O1xufVxuXG4ucG9wdXAtc2Vjb25kLXRpdGxlIHtcbiAgbWFyZ2luOiAwIDAgMTVweCAwO1xufVxuXG4ucG9wdXAtc2Vjb25kLXRleHQge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4ucG9wdXAtc2Vjb25kIC51aS1idG4ge1xuICB3aWR0aDogNDglO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5wb3B1cC1zZWNvbmQge1xuICAgIHBhZGRpbmc6IDM0cHggMTVweDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG59XG5cbi5wb3B1cC1zZWNvbmQtYnRuLWV4aXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE0NDU1O1xuICBjb2xvcjogI2ZmZjtcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5wb3B1cC1zZWNvbmQtYnRuLWV4aXQge1xuICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgfVxuICAucG9wdXAtc2Vjb25kLWJ0bi1leGl0LnVpLWJ0biB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5wb3B1cC1zZWNvbmQtYnRuLWNhbmNlbC51aS1idG4ge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5wb3B1cC1zZWNvbmQtYnRuLWNhbmNlbCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4jY3VzdG9tQ2hlY2tib3gtZXJyb3Ige1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgdG9wOiAzNXB4O1xuICBsZWZ0OiAyNHB4O1xuICB3aWR0aDogMTUwcHg7XG4gIGNvbG9yOiByZWQ7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMzI3cHgpIHtcbiAgI2N1c3RvbUNoZWNrYm94LWVycm9yIHtcbiAgICB0b3A6IDUwcHg7XG4gIH1cbn1cblxuLnBvcHVwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogNTIwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgcGFkZGluZzogMzRweCA0OHB4IDQwcHggNDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1MjBweCkge1xuICAucG9wdXAge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgfVxufVxuLnBvcHVwIC5tZnAtY2xvc2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbG9yOiAjMDAwMDAwO1xufVxuLnBvcHVwLWl0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLnBvcHVwLWl0ZW0taW1nIHtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufVxuLnBvcHVwLWl0ZW0taW5mbyB7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG59XG4ucG9wdXAtaXRlbS1pbmZvIC5wb3B1cC1wcm9kdWN0LWxpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG4ucG9wdXAtdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICBmb250LXNpemU6IDEuNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM1O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDUyMHB4KSB7XG4gIC5wb3B1cC10aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgfVxufVxuLnBvcHVwLXByb2R1Y3Qge1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgbWFyZ2luLWJvdHRvbTogMjdweDtcbiAgb3BhY2l0eTogMC44O1xufVxuLnBvcHVwLXByb2R1Y3QtbGluayB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiAjMWE2NmFlO1xuICBsaW5lLWhlaWdodDogMS4zO1xuICBvcGFjaXR5OiAxO1xufVxuLnBvcHVwLXByb2R1Y3QtbGluazpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuLnBvcHVwLWxpbmUge1xuICBtYXJnaW46IDAgLTQ4cHggMjNweCAtNDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QzZDNkMztcbiAgaGVpZ2h0OiAxcHg7XG59XG4ucG9wdXAtdHh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMjJweDtcbiAgb3BhY2l0eTogMC43O1xufVxuLnBvcHVwLWxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIG1hcmdpbi1ib3R0b206IDRweDtcbn1cbi5wb3B1cC1iYWNrY2FsbC1pbnB1dHMge1xuICBtYXJnaW4tYm90dG9tOiAxN3B4O1xufVxuLnBvcHVwLWlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNDBweDtcbiAgcGFkZGluZy1sZWZ0OiAxNnB4O1xuICBmb250LXdlaWdodDogMC44NzVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcbiAgb3V0bGluZTogbm9uZTtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuLnBvcHVwLWlucHV0OmZvY3VzIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcbn1cbi5wb3B1cC1hZ3JlZW1lbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuLnBvcHVwLWFncmVlbWVudC10eHQge1xuICBtYXJnaW4tbGVmdDogLThweDtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBsaW5lLWhlaWdodDogMS4zO1xufVxuLnBvcHVwLWFncmVlbWVudC1saW5rIHtcbiAgY29sb3I6ICMxYTY2YWU7XG59XG4ucG9wdXAtYWdyZWVtZW50LWxpbms6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi5wb3B1cC1idG4ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGhlaWdodDogNDhweDtcbiAgbGluZS1oZWlnaHQ6IDQ4cHg7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE0NDU1O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5wb3B1cC1idG46aG92ZXIge1xuICBvcGFjaXR5OiAwLjU7XG59XG5cbi5jaGVja2JveCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbi5jaGVja2JveC1pbnB1dCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uY2hlY2tib3gtaW5wdXQ6Y2hlY2tlZCArIC5jaGVja2JveC1sYWJlbDo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA3MWMyODtcbn1cbi5jaGVja2JveC1pbnB1dDpjaGVja2VkICsgLmNoZWNrYm94LWxhYmVsOjphZnRlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4uY2hlY2tib3gtbGFiZWwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmctbGVmdDogMzhweDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmNoZWNrYm94LWxhYmVsOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDE2cHg7XG4gIGhlaWdodDogMTZweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2U1ZWRmNztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAxO1xufVxuLmNoZWNrYm94LWxhYmVsOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMThweDtcbiAgaGVpZ2h0OiAxOHB4O1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvaWNvbnMvY2hlY2tib3gtYXJyb3cuc3ZnXCIpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiAxMHB4IDhweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBvcGFjaXR5OiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDI7XG59XG5cbi5wb3B1cC1pdGVtLWluZm8tY291bnRlciAuY2FyZC1pdGVtLWNvdW50ZXIge1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG4ucG9wdXAtaXRlbS1pbmZvLWNvdW50ZXIgLmNhcmQtaXRlbS1wcmljZS1jdXJyZW50IHtcbiAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuLnBvcHVwLWl0ZW0taW5mby1jb3VudGVyIC5jYXJkLWl0ZW0tcHJpY2Uge1xuICBtYXJnaW4tdG9wOiAtNXB4O1xufVxuXG4ucG9wdXAtZmFzdE9kZXIgc3BhbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjb2xvcjogcmVkO1xufVxuXG4ucG9wdXAtcXVlcnkgc3BhbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjb2xvcjogcmVkO1xufVxuXG4ucG9wdXAtYmFja2NhbGwgc3BhbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjb2xvcjogcmVkO1xufVxuXG4ucG9wdXAtcHJpY2Ugc3BhbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjb2xvcjogcmVkO1xufVxuXG4ucG9wdXAtbGFiZWwgc3BhbiB7XG4gIHRvcDogMDtcbn1cblxuLmZvcm0tY2VsbC1maWVsZC1zZW5kIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBtYXJnaW4tcmlnaHQ6IDQwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5mb3JtLWNlbGwtZmllbGQtc2VuZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjRweDtcbiAgfVxufVxuLmZvcm0tY2VsbC1maWVsZC1zZW5kIC5wb3B1cC1hZ3JlZW1lbnQtdHh0IHtcbiAgd2lkdGg6IDMyMHB4O1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuLmZvcm0tY2VsbC1maWVsZC1zZW5kIC5jaGVja2JveCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHRvcDogNXB4O1xufVxuXG4ucG9wdXAtcmV2IHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAyMHB4IGF1dG87XG4gIG1heC13aWR0aDogNjE2cHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG4ucG9wdXAtcmV2IC5tZnAtY2xvc2Uge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiA0MnB4O1xufVxuXG4ucG9wdXAtcmV2IHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAyMHB4IGF1dG87XG4gIG1heC13aWR0aDogNjE2cHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG4ucG9wdXAtcmV2IC5tZnAtY2xvc2Uge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiA0MnB4O1xufVxuXG4ucG9wdXAtY2FyZCB7XG4gIHdpZHRoOiA3OCU7XG4gIHBhZGRpbmc6IDMycHggNjRweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLnBvcHVwLWNhcmQge1xuICAgIHBhZGRpbmc6IDMycHggNDhweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gIC5wb3B1cC1jYXJkIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgfVxuICAucG9wdXAtY2FyZCAuY2FyZC1pdGVtLXByaWNlLWN1cnJlbnQge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjM7XG4gICAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgfVxuICAucG9wdXAtY2FyZCAuY2FyZC1pdGVtLXByaWNlLWN1cnJlbmN5IHtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQ1ODgyMzUyOTQpO1xuICB9XG4gIC5wb3B1cC1jYXJkIC5wb3B1cC1jYXJkLWluZm8ge1xuICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gIH1cbn1cbi5wb3B1cC1jYXJkLWltZyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiAyNHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucG9wdXAtY2FyZC1pbWcge1xuICAgIG1heC13aWR0aDogODhweDtcbiAgfVxufVxuLnBvcHVwLWNhcmQtaW5mbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cbi5wb3B1cC1jYXJkLWluZm8tbGluayB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNjU4ODIzNTI5NCk7XG59XG4ucG9wdXAtY2FyZC10aXRsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnBvcHVwLWNhcmQtdGl0bGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4ucG9wdXAtY2FyZC13cmFwcGVyOm50aC1vZi10eXBlKDIpIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIG1heC13aWR0aDogMjQwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5wb3B1cC1jYXJkLXdyYXBwZXI6bnRoLW9mLXR5cGUoMikge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAucG9wdXAtY2FyZC13cmFwcGVyOm50aC1vZi10eXBlKDEpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG59XG4ucG9wdXAtY2FyZC1jb250YW50IHtcbiAgcGFkZGluZy10b3A6IDI0cHg7XG4gIHBhZGRpbmc6IDI0cHggNjRweCAzMnB4IDY0cHg7XG4gIG1hcmdpbjogMCAtNjRweCAtMzJweCAtNjRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLnBvcHVwLWNhcmQtY29udGFudCB7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICBtYXJnaW46IDAgLTQ4cHggLTMycHggLTQ4cHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAucG9wdXAtY2FyZC1jb250YW50IHtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgIG1hcmdpbjogMCAtNDhweCAtMzJweCAtNDhweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG59XG4ucG9wdXAtY2FyZC1vcHRpb25hbCB7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5wb3B1cC1jYXJkLW9wdGlvbmFsIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICBvdmVyZmxvdy15OiBoaWRkZW47XG4gIH1cbn1cbi5wb3B1cC1jYXJkLW9wdGlvbmFsLWxpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiBjYWxjKDUwJSAtIDE1cHgpO1xuICBoZWlnaHQ6IDQwcHg7XG4gIGxpbmUtaGVpZ2h0OiAzOHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5wb3B1cC1jYXJkLW9wdGlvbmFsLWxpbmsge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtaW4td2lkdGg6IDE4NHB4O1xuICAgIHdpZHRoOiAxODRweDtcbiAgICBoZWlnaHQ6IDgwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbiAgICBwYWRkaW5nOiAxOHB4IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuMztcbiAgICBib3JkZXI6IG5vbmU7XG4gIH1cbn1cbi5wb3B1cC1jYXJkLW9wdGlvbmFsLWxpbms6aG92ZXIge1xuICBjb2xvcjogIzJhNDQ1NTtcbiAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuLnBvcHVwLWNhcmQtb3B0aW9uYWwtbGluazpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMjRweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLnBvcHVwLWNhcmQtb3B0aW9uYWwtbGluazpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xuICB9XG59XG4ucG9wdXAtY2FyZCAuY2FyZC1pdGVtLXByaWNlLWN1cnJlbnQge1xuICBjb2xvcjogIzAwMDAwMDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnBvcHVwLWNhcmQgLmNhcmQtaXRlbS1idG4ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogY2FsYyg1MCUgLSAxNXB4KTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB9XG4gIC5wb3B1cC1jYXJkIC5jYXJkLWl0ZW0tYnRuOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDI0cHg7XG4gIH1cbn1cbi5wb3B1cC1jYXJkIC5jYXJkLWl0ZW0tZmVhdHVyZXMge1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAucG9wdXAtY2FyZCAuY2FyZC1pdGVtLWZlYXR1cmVzIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIH1cbn1cbi5wb3B1cCAucG9wdXAtbGluZS1iaWcge1xuICBtYXJnaW46IDAgLTY0cHggMjNweCAtNjRweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnBvcHVwIC5wb3B1cC1saW5lLWJpZyB7XG4gICAgbWFyZ2luOiAwIC00OHB4IDIzcHggLTQ4cHg7XG4gIH1cbn1cbi5wb3B1cCAucHJvZHVjdC1pdGVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkge1xuICAucG9wdXAgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1pdGVtIHtcbiAgICBtYXgtd2lkdGg6IGluaXRpYWw7XG4gICAgbWluLXdpZHRoOiBub25lO1xuICB9XG4gIC5wb3B1cCAucHJvZHVjdC1pdGVtIC5wcm9kdWN0LWl0ZW0tdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMjhweDtcbiAgfVxuICAucG9wdXAgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1pdGVtLXByaWNlIHtcbiAgICBmb250LXNpemU6IDEuMTI1cmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTAwcHgpIHtcbiAgLnBvcHVwIC5wcm9kdWN0LWl0ZW0gLnByb2R1Y3QtaXRlbS1pbWcge1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIH1cbiAgLnBvcHVwIC5wcm9kdWN0LWl0ZW0gLnByb2R1Y3QtaXRlbS1saW5rcyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAucG9wdXAgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1pdGVtLXJhaXQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnBvcHVwIC5wcm9kdWN0LWl0ZW0gLnByb2R1Y3QtaXRlbS1saWtlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5wb3B1cCAucHJvZHVjdC1pdGVtIC5wcm9kdWN0LWl0ZW0tYWRkIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5wb3B1cCAucHJvZHVjdC1pdGVtIC5wcm9kdWN0LWl0ZW0tYnRuIHtcbiAgICB3aWR0aDogODRweDtcbiAgICBtYXJnaW4tdG9wOiAtMThweDtcbiAgfVxuICAucG9wdXAgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1pdGVtLWJ0bi1zcGFuIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5wb3B1cCAucHJvZHVjdC1pdGVtIC5wcm9kdWN0LWl0ZW0tYnRuIGltZyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbi10b3A6IDVweDtcbiAgfVxuICAucG9wdXAgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1wcmljZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxufVxuLnBvcHVwIC5wcm9kdWN0LXN3aXBlciB7XG4gIGhlaWdodDogaW5pdGlhbDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAubWZwLWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gIH1cbn1cbi5wb3B1cC1saW5lLXNob3cge1xuICBkaXNwbGF5OiBub25lO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAucG9wdXAtbGluZS1zaG93IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xuICAucG9wdXAtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS4zNzVyZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucHJvZHVjdC1zd2lwZXItbW9iLWl0ZW0gLnN3aXBlci13cmFwcGVyIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gIC5wb3B1cC1jYXJkLXdyYXBwZXItYWRhcHRpdmUge1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgcGFkZGluZzogMTZweCAzMnB4IDE2cHggMzJweDtcbiAgICBtYXJnaW46IC0xNnB4IC0zMnB4IC0xNnB4IC0zMnB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gIC5wcm9kdWN0LXN3aXBlci1tb2ItaXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjRweDtcbiAgfVxufVxuXG4uY2FyZC1pdGVtLWZlYXR1cmVzOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIHdpZHRoOiAwO1xufVxuXG4vKiBpZSAxMCsgKi9cbi5jYXJkLWl0ZW0tZmVhdHVyZXMge1xuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XG59XG5cbi8qINGE0YQgKNGB0LLQvtC50YHRgtCy0L4g0LHQvtC70YzRiNC1INC90LUg0YDQsNCx0L7RgtCw0LXRgiwg0LTRgNGD0LPQuNGFINGB0L/QvtGB0L7QsdC+0LIg0YLQvtC20LUg0L3QtdGCKSovXG4uY2FyZC1pdGVtLWZlYXR1cmVzIHtcbiAgb3ZlcmZsb3c6IC1tb3otc2Nyb2xsYmFycy1ub25lO1xufVxuXG4ucG9wdXAtY2FyZC1vcHRpb25hbDo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICB3aWR0aDogMDtcbn1cblxuLyogaWUgMTArICovXG4ucG9wdXAtY2FyZC1vcHRpb25hbCB7XG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbn1cblxuLyog0YTRhCAo0YHQstC+0LnRgdGC0LLQviDQsdC+0LvRjNGI0LUg0L3QtSDRgNCw0LHQvtGC0LDQtdGCLCDQtNGA0YPQs9C40YUg0YHQv9C+0YHQvtCx0L7QsiDRgtC+0LbQtSDQvdC10YIpKi9cbi5wb3B1cC1jYXJkLW9wdGlvbmFsIHtcbiAgb3ZlcmZsb3c6IC1tb3otc2Nyb2xsYmFycy1ub25lO1xufVxuXG4ucG9wdXAtc2ltaWxhciB7XG4gIHdpZHRoOiA3OCU7XG4gIHBhZGRpbmc6IDM0cHggNjRweCA0MHB4IDY0cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5wb3B1cC1zaW1pbGFyIHtcbiAgICBwYWRkaW5nOiAzNHB4IDQ4cHggNDBweCA0OHB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgLnBvcHVwLXNpbWlsYXIge1xuICAgIHBhZGRpbmc6IDM0cHggMTVweCA0MHB4IDE1cHg7XG4gIH1cbiAgLnBvcHVwLXNpbWlsYXIgLnBvcHVwLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuMzc1cmVtO1xuICB9XG4gIC5wb3B1cC1zaW1pbGFyIC5wb3B1cC1wcm9kdWN0LXNwYW4ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5wb3B1cC1zaW1pbGFyLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG1hcmdpbi1ib3R0b206IDI3cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTI2MHB4KSB7XG4gIC5wb3B1cC1zaW1pbGFyLXdyYXBwZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4ucG9wdXAtc2ltaWxhci13cmFwcGVyIC5jYXJkLWl0ZW0tb3B0aW9ucyB7XG4gIG1heC13aWR0aDogNDI0cHg7XG59XG4ucG9wdXAtc2ltaWxhci1jb250YW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbiAgcGFkZGluZzogMjNweCA2NHB4IDQwcHggNjRweDtcbiAgbWFyZ2luOiAtMjNweCAtNjRweCAtNDBweCAtNjRweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnBvcHVwLXNpbWlsYXItY29udGFudCB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgfVxuICAucG9wdXAtc2ltaWxhci1jb250YW50IC5wcm9kdWN0LWl0ZW0ge1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1MDApIHtcbiAgLnBvcHVwLXNpbWlsYXItY29udGFudCAucHJvZHVjdC1pdGVtIHtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIH1cbn1cbi5wb3B1cC1zaW1pbGFyIC5wb3B1cC1saW5lLWJpZyB7XG4gIG1hcmdpbjogMCAtNjRweCAyM3B4IC02NHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucG9wdXAtc2ltaWxhciAucG9wdXAtbGluZS1iaWcge1xuICAgIG1hcmdpbjogMCAtNDhweCAyM3B4IC00OHB4O1xuICB9XG59XG4ucG9wdXAtc2ltaWxhciAucHJvZHVjdC1pdGVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbn1cbi5wb3B1cC1zaW1pbGFyIC5wcm9kdWN0LWl0ZW0gLnByb2R1Y3QtaXRlbSB7XG4gIG1heC13aWR0aDogaW5pdGlhbDtcbiAgbWluLXdpZHRoOiBub25lO1xufVxuLnBvcHVwLXNpbWlsYXIgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1pdGVtLXRpdGxlIHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMjhweDtcbn1cbi5wb3B1cC1zaW1pbGFyIC5wcm9kdWN0LWl0ZW0gLnByb2R1Y3QtaXRlbS1wcmljZSB7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTAwcHgpIHtcbiAgLnBvcHVwLXNpbWlsYXIgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1pdGVtLWltZyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgfVxuICAucG9wdXAtc2ltaWxhciAucHJvZHVjdC1pdGVtIC5wcm9kdWN0LWl0ZW0tbGlua3Mge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnBvcHVwLXNpbWlsYXIgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1pdGVtLXJhaXQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnBvcHVwLXNpbWlsYXIgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1pdGVtLWxpa2Uge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnBvcHVwLXNpbWlsYXIgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1pdGVtLWFkZCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAucG9wdXAtc2ltaWxhciAucHJvZHVjdC1pdGVtIC5wcm9kdWN0LWl0ZW0tYnRuIHtcbiAgICB3aWR0aDogODRweDtcbiAgICBtYXJnaW4tdG9wOiAtMThweDtcbiAgfVxuICAucG9wdXAtc2ltaWxhciAucHJvZHVjdC1pdGVtIC5wcm9kdWN0LWl0ZW0tYnRuLXNwYW4ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnBvcHVwLXNpbWlsYXIgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1pdGVtLWJ0biBpbWcge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG4gIH1cbiAgLnBvcHVwLXNpbWlsYXIgLnByb2R1Y3QtaXRlbSAucHJvZHVjdC1wcmljZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxufVxuLnBvcHVwLXNpbWlsYXIgLnByb2R1Y3Qtc3dpcGVyIHtcbiAgaGVpZ2h0OiBpbml0aWFsO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucG9wdXAtc2ltaWxhciAuc3dpcGVyLXNsaWRlIHtcbiAgICB3aWR0aDogMjY0cHggIWltcG9ydGFudDtcbiAgfVxuICAucG9wdXAtc2ltaWxhciAucHJvZHVjdC1pdGVtIHtcbiAgICBtaW4td2lkdGg6IDI2NHB4O1xuICAgIG1heC13aWR0aDogMzEycHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucHJvZHVjdC1zd2lwZXItbW9iLXNpbWlsYXIgLnN3aXBlci13cmFwcGVyIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLnBvcHVwLWZpbHRlcnMge1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIG1hcmdpbjogaW5pdGlhbDtcbiAgcGFkZGluZzogMHB4IDQ1cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1heC13aWR0aDogNDc1cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgLnBvcHVwLWZpbHRlcnMge1xuICAgIHBhZGRpbmc6IDBweCAyMHB4O1xuICB9XG59XG4ucG9wdXAtZmlsdGVycy10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luOiAwIC0yNTBweDtcbiAgcGFkZGluZzogMTZweCAyNTBweDtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkM2QzZDM7XG59XG4ucG9wdXAtZmlsdGVycyAubWZwLWNsb3NlIHtcbiAgZm9udC1zaXplOiAwO1xuICB0b3A6IDI0cHg7XG4gIHJpZ2h0OiAyNHB4O1xuICBoZWlnaHQ6IDI0cHg7XG4gIHdpZHRoOiAyNHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi9pbWFnZXMvaWNvbnMvQ2xvc2Uuc3ZnKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuXG4ucG9wdXAtd3JhcCB7XG4gIG1heC13aWR0aDogNDc1cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5wb3B1cC13cmFwIC5jYWxjdWxhdG9yLWJ0bi13cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiA0NzVweDtcbn1cbi5wb3B1cC13cmFwIC5jYWxjdWxhdG9yLWJ0bi13cmFwcGVyIC5jYWxjdWxhdG9yLWJ0biB7XG4gIGZsZXg6IDAgMCA4NC43JTtcbiAgbWF4LXdpZHRoOiA4NC43JTtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMHB4O1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwcHg7XG4gIHBhZGRpbmc6IDBweCAyMHB4O1xufVxuLnBvcHVwLXdyYXAgLmNhbGN1bGF0b3ItYnRuLXdyYXBwZXIgLmNhbGN1bGF0b3ItcmVsb2FkIHtcbiAgZmxleDogMCAwIDE1LjMlO1xuICBtYXgtd2lkdGg6IDE1LjMlO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMHB4O1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMHB4O1xuICB0ZXh0LW92ZXJmbG93OiBpbml0aWFsO1xufVxuXG4ubWZwLXdyYXAge1xuICBwb3NpdGlvbjogZml4ZWQgIWltcG9ydGFudDtcbiAgdG9wOiAwICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuIGF1dG8gIWltcG9ydGFudDtcbn1cblxuLm1mcC1iZyB7XG4gIHBvc2l0aW9uOiBmaXhlZCAhaW1wb3J0YW50O1xuICB0b3A6IDAgIWltcG9ydGFudDtcbn1cblxuLnBvcHVwLWltZyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnphZ2x1c2hrYS1waG9uZSAucG9wdXAtdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uemFnbHVzaGthLXBob25lIC5wb3B1cC10ZXh0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XG4gIC56YWdsdXNoa2EtcGhvbmUge1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgfVxufVxuLnphZ2x1c2hrYS1waG9uZSAubWZwLWNsb3NlIHtcbiAgZm9udC1zaXplOiAwO1xuICB0b3A6IDI0cHg7XG4gIHJpZ2h0OiAyNHB4O1xuICBoZWlnaHQ6IDI0cHg7XG4gIHdpZHRoOiAyNHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi9pbWFnZXMvaWNvbnMvQ2xvc2Uuc3ZnKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuLnphZ2x1c2hrYS1waG9uZSAucGFnZS1zdGlja2VycyB7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbiAgb3ZlcmZsb3cteDogaW5pdGlhbDtcbiAgd2hpdGUtc3BhY2U6IGluaXRpYWw7XG59XG4uemFnbHVzaGthLXBob25lIC5wYWdlLXN0aWNrZXJzIC51aS1zdGlja2VyIHtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xufSIsIkBpbXBvcnQgXCIuL2Fic3RyYWN0cy92YXJcIjtcclxuQGltcG9ydCBcIi4vYWJzdHJhY3RzL21peGluXCI7XHJcbioge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbWluLWhlaWdodDogMTAwJTtcclxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBtaW4taGVpZ2h0OiAxMDAlO1xyXG4gIGZvbnQtZmFtaWx5OiAkZmZPcGVuU2FucztcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIGZvbnQtc2l6ZTogcmVtKDE2cHgpO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjQyO1xyXG4gIGNvbG9yOiAjMDAwO1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbn1cclxuXHJcbiN3cmFwcGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIG1pbi1oZWlnaHQ6IDEwMCU7XHJcbiAgbWluLXdpZHRoOiAxMDAlO1xyXG59XHJcbiNtaWRkbGUge1xyXG4gIC13ZWJraXQtYm94LWZsZXg6IDE7XHJcbiAgZmxleDogMSAwIGF1dG87XHJcbn1cclxuXHJcbiNmb290ZXIge1xyXG4gIC13ZWJraXQtYm94LWZsZXg6IDA7XHJcbiAgZmxleDogMCAwIGF1dG87XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogMTQwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHBhZGRpbmctbGVmdDogNDBweDtcclxuICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICB9XHJcbn1cclxuXHJcbi8vIExheW91dFxyXG5AaW1wb3J0IFwiLi9sYXlvdXQvZ3JpZFwiO1xyXG5AaW1wb3J0IFwiLi9sYXlvdXQvaGVhZGVyXCI7XHJcbkBpbXBvcnQgXCIuL2xheW91dC9mb290ZXJcIjtcclxuQGltcG9ydCBcIi4vbGF5b3V0L2Zvcm1cIjtcclxuLy8gQmFzZVxyXG5AaW1wb3J0IFwiLi9iYXNlL3R5cG9ncmFwaHlcIjtcclxuQGltcG9ydCBcIi4vYmFzZS9kZWZhdWx0XCI7XHJcbi8vIENvbXBvbmVudFxyXG5AaW1wb3J0IFwiLi9jb21wb25lbnRzL2J1dHRvbnNcIjtcclxuQGltcG9ydCBcIi4vY29tcG9uZW50cy9zdGlja2Vyc1wiO1xyXG5AaW1wb3J0IFwiLi9jb21wb25lbnRzL2JyZWFkY3J1bWJzXCI7XHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvaW5wdXRcIjtcclxuQGltcG9ydCBcIi4vY29tcG9uZW50cy9yYXRpbmdcIjtcclxuQGltcG9ydCBcIi4vY29tcG9uZW50cy9kb3dubG9hZC1saW5rXCI7XHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvcHJvZHVjdFwiO1xyXG5AaW1wb3J0IFwiLi9jb21wb25lbnRzL2NpcmNsZS1pbmZvXCI7XHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvYnRuLWZlZWRiYWNrXCI7XHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvY2FyZFN0aWNreVwiO1xyXG5AaW1wb3J0IFwiLi9jb21wb25lbnRzL2xpc3QtbGlcIjtcclxuLy8gUGFnZXNcclxuQGltcG9ydCBcIi4vcGFnZXMvcGFnZXNcIjtcclxuQGltcG9ydCBcIi4vcGFnZXMvbmF6elwiO1xyXG5cclxuLy8gVmVuZG9yc1xyXG5AaW1wb3J0IFwiLi92ZW5kb3JzL3N3aXBlci1zbGlkZXJcIjtcclxuLy8gUG9wdXBzXHJcbkBpbXBvcnQgXCIuL3BvcHVwcy9wcmV2aWV3XCI7XHJcbkBpbXBvcnQgXCIuL3BvcHVwcy9zZXJ0XCI7XHJcbkBpbXBvcnQgXCIuL3BvcHVwcy9mb3JtLXJldmlld3NcIjtcclxuQGltcG9ydCBcIi4vcG9wdXBzL29mZXIuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiLi9wb3B1cHMvcmV2LWltZy5zY3NzXCI7XHJcbkBpbXBvcnQgXCIuL3BvcHVwcy9yZXYtdmlkZW8uc2Nzc1wiO1xyXG5AaW1wb3J0IFwiLi9wb3B1cHMvY2FyZC1pdGVtLnNjc3NcIjtcclxuQGltcG9ydCBcIi4vcG9wdXBzL2NhcmQtc2ltaWxhci5zY3NzXCI7XHJcbkBpbXBvcnQgXCIuL3BvcHVwcy9maWx0ZXJzLnNjc3NcIjtcclxuQGltcG9ydCBcIi4vcG9wdXBzL3phZ2x1c2hrYS5zY3NzXCI7XHJcbiIsIiRmZlBvcHBpbnM6IFwiUG9wcGluc1wiLCBzYW5zLXNlcmlmO1xyXG4kZmZPcGVuU2FuczogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcclxuJGNvbG9yQmx1ZTogIzFhNjZhZTtcclxuJGNvbG9yRGFyazogIzJhNDQ1NTtcclxuJGNvbG9yUmVkOiAjYmMwMDAwO1xyXG4iLCIucm93IHtcclxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XHJcbiAgZGlzcGxheTogLXdlYmtpdC1pbmxpbmUtYm94O1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtaW5saW5lLWZsZXg7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgZGlzcGxheTogLW1zLWZsZXg7XHJcbiAgZGlzcGxheTogLW1zLWlubGluZS1mbGV4Ym94O1xyXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgLXdlYmtpdC1mbGV4LWZsb3c6IHJvdyB3cmFwO1xyXG4gIC1tcy1mbGV4LWZsb3c6IHJvdyB3cmFwO1xyXG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XHJcbiAgLXdlYmtpdC1mbGV4LXdyYXA6IHdyYXA7XHJcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcclxuICBtYXJnaW4tbGVmdDogLTEycHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAtMTJweDtcclxufVxyXG5cclxuLmZsZXgge1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcclxuICBkaXNwbGF5OiAtd2Via2l0LWlubGluZS1ib3g7XHJcbiAgZGlzcGxheTogLXdlYmtpdC1pbmxpbmUtZmxleDtcclxuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICBkaXNwbGF5OiAtbXMtZmxleDtcclxuICBkaXNwbGF5OiAtbXMtaW5saW5lLWZsZXhib3g7XHJcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG59XHJcbi52YWxpZ24tY2VudGVyIHtcclxuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xyXG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xyXG4gIC1tcy1hbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5qdXN0aWZ5LWNlbnRlciB7XHJcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAtbXMtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5zcGFjZS1iZXR3ZWVuIHtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbi50ZXh0LXJpZ2h0IHtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG5cclxuLnRleHQtbGVmdCB7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuW2NsYXNzKj1cImNvbC1cIl0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmctbGVmdDogMTJweDtcclxuICBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xyXG59XHJcblxyXG4uY2xlYXIge1xyXG4gIHBhZGRpbmctbGVmdDogMHB4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDBweDtcclxufVxyXG5cclxuXHJcblxyXG4vKiAgMTItY29sdW1uICovXHJcblxyXG4uY29sLTEge1xyXG4gIC1tcy1mbGV4OiAwIDAgOC4zMzMzMyU7XHJcbiAgZmxleDogMCAwIDguMzMzMzMlO1xyXG4gIG1heC13aWR0aDogOC4zMzMzMyU7XHJcbn1cclxuXHJcbi5jb2wtMiB7XHJcbiAgLW1zLWZsZXg6IDAgMCAxNi42NjY2NyU7XHJcbiAgZmxleDogMCAwIDE2LjY2NjY3JTtcclxuICBtYXgtd2lkdGg6IDE2LjY2NjY3JTtcclxufVxyXG5cclxuLmNvbC0zIHtcclxuICAtbXMtZmxleDogMCAwIDI1JTtcclxuICBmbGV4OiAwIDAgMjUlO1xyXG4gIG1heC13aWR0aDogMjUlO1xyXG59XHJcblxyXG4uY29sLTQge1xyXG4gIC1tcy1mbGV4OiAwIDAgMzMuMzMzMzMlO1xyXG4gIGZsZXg6IDAgMCAzMy4zMzMzMyU7XHJcbiAgbWF4LXdpZHRoOiAzMy4zMzMzMyU7XHJcbn1cclxuXHJcbi5jb2wtNSB7XHJcbiAgLW1zLWZsZXg6IDAgMCA0MS42NjY2NyU7XHJcbiAgZmxleDogMCAwIDQxLjY2NjY3JTtcclxuICBtYXgtd2lkdGg6IDQxLjY2NjY3JTtcclxufVxyXG5cclxuLmNvbC02IHtcclxuICAtbXMtZmxleDogMCAwIDUwJTtcclxuICBmbGV4OiAwIDAgNTAlO1xyXG4gIG1heC13aWR0aDogNTAlO1xyXG59XHJcblxyXG4uY29sLTcge1xyXG4gIC1tcy1mbGV4OiAwIDAgNTguMzMzMzMlO1xyXG4gIGZsZXg6IDAgMCA1OC4zMzMzMyU7XHJcbiAgbWF4LXdpZHRoOiA1OC4zMzMzMyU7XHJcbn1cclxuXHJcbi5jb2wtOCB7XHJcbiAgLW1zLWZsZXg6IDAgMCA2Ni42NjY2NyU7XHJcbiAgZmxleDogMCAwIDY2LjY2NjY3JTtcclxuICBtYXgtd2lkdGg6IDY2LjY2NjY3JTtcclxufVxyXG5cclxuLmNvbC05IHtcclxuICAtbXMtZmxleDogMCAwIDc1JTtcclxuICBmbGV4OiAwIDAgNzUlO1xyXG4gIG1heC13aWR0aDogNzUlO1xyXG59XHJcblxyXG4uY29sLTEwIHtcclxuICAtbXMtZmxleDogMCAwIDgzLjMzMzMzJTtcclxuICBmbGV4OiAwIDAgODMuMzMzMzMlO1xyXG4gIG1heC13aWR0aDogODMuMzMzMzMlO1xyXG59XHJcblxyXG4uY29sLTExIHtcclxuICAtbXMtZmxleDogMCAwIDkxLjY2NjY3JTtcclxuICBmbGV4OiAwIDAgOTEuNjY2NjclO1xyXG4gIG1heC13aWR0aDogOTEuNjY2NjclO1xyXG59XHJcblxyXG4uY29sLTEyIHtcclxuICAtbXMtZmxleDogMCAwIDEwMCU7XHJcbiAgZmxleDogMCAwIDEwMCU7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMzIwcHgpIHtcclxuICAuY29sLXNzLTAge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbiAgLmNvbC1zcy0xIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgOC4zMzMzMyU7XHJcbiAgICBmbGV4OiAwIDAgOC4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDguMzMzMzMlO1xyXG4gIH1cclxuICAuY29sLXNzLTIge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAxNi42NjY2NyU7XHJcbiAgICBmbGV4OiAwIDAgMTYuNjY2NjclO1xyXG4gICAgbWF4LXdpZHRoOiAxNi42NjY2NyU7XHJcbiAgfVxyXG4gIC5jb2wtc3MtMyB7XHJcbiAgICAtbXMtZmxleDogMCAwIDI1JTtcclxuICAgIGZsZXg6IDAgMCAyNSU7XHJcbiAgICBtYXgtd2lkdGg6IDI1JTtcclxuICB9XHJcbiAgLmNvbC1zcy00IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgMzMuMzMzMzMlO1xyXG4gICAgZmxleDogMCAwIDMzLjMzMzMzJTtcclxuICAgIG1heC13aWR0aDogMzMuMzMzMzMlO1xyXG4gIH1cclxuICAuY29sLXNzLTUge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA0MS42NjY2NyU7XHJcbiAgICBmbGV4OiAwIDAgNDEuNjY2NjclO1xyXG4gICAgbWF4LXdpZHRoOiA0MS42NjY2NyU7XHJcbiAgfVxyXG4gIC5jb2wtc3MtNiB7XHJcbiAgICAtbXMtZmxleDogMCAwIDUwJTtcclxuICAgIGZsZXg6IDAgMCA1MCU7XHJcbiAgICBtYXgtd2lkdGg6IDUwJTtcclxuICB9XHJcbiAgLmNvbC1zcy03IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNTguMzMzMzMlO1xyXG4gICAgZmxleDogMCAwIDU4LjMzMzMzJTtcclxuICAgIG1heC13aWR0aDogNTguMzMzMzMlO1xyXG4gIH1cclxuICAuY29sLXNzLTgge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA2Ni42NjY2NyU7XHJcbiAgICBmbGV4OiAwIDAgNjYuNjY2NjclO1xyXG4gICAgbWF4LXdpZHRoOiA2Ni42NjY2NyU7XHJcbiAgfVxyXG4gIC5jb2wtc3MtOSB7XHJcbiAgICAtbXMtZmxleDogMCAwIDc1JTtcclxuICAgIGZsZXg6IDAgMCA3NSU7XHJcbiAgICBtYXgtd2lkdGg6IDc1JTtcclxuICB9XHJcbiAgLmNvbC1zcy0xMCB7XHJcbiAgICAtbXMtZmxleDogMCAwIDgzLjMzMzMzJTtcclxuICAgIGZsZXg6IDAgMCA4My4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC1zcy0xMSB7XHJcbiAgICAtbXMtZmxleDogMCAwIDkxLjY2NjY3JTtcclxuICAgIGZsZXg6IDAgMCA5MS42NjY2NyU7XHJcbiAgICBtYXgtd2lkdGg6IDkxLjY2NjY3JTtcclxuICB9XHJcbiAgLmNvbC1zcy0xMiB7XHJcbiAgICAtbXMtZmxleDogMCAwIDEwMCU7XHJcbiAgICBmbGV4OiAwIDAgMTAwJTtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6IDQwMHB4KSB7XHJcbiAgLmNvbC11cy0wIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIC5jb2wtdXMtMSB7XHJcbiAgICAtbXMtZmxleDogMCAwIDguMzMzMzMlO1xyXG4gICAgZmxleDogMCAwIDguMzMzMzMlO1xyXG4gICAgbWF4LXdpZHRoOiA4LjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC11cy0yIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgMTYuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDE2LjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogMTYuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLXVzLTMge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAyNSU7XHJcbiAgICBmbGV4OiAwIDAgMjUlO1xyXG4gICAgbWF4LXdpZHRoOiAyNSU7XHJcbiAgfVxyXG4gIC5jb2wtdXMtNCB7XHJcbiAgICAtbXMtZmxleDogMCAwIDMzLjMzMzMzJTtcclxuICAgIGZsZXg6IDAgMCAzMy4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDMzLjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC11cy01IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNDEuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDQxLjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogNDEuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLXVzLTYge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA1MCU7XHJcbiAgICBmbGV4OiAwIDAgNTAlO1xyXG4gICAgbWF4LXdpZHRoOiA1MCU7XHJcbiAgfVxyXG4gIC5jb2wtdXMtNyB7XHJcbiAgICAtbXMtZmxleDogMCAwIDU4LjMzMzMzJTtcclxuICAgIGZsZXg6IDAgMCA1OC4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDU4LjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC11cy04IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNjYuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDY2LjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogNjYuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLXVzLTkge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA3NSU7XHJcbiAgICBmbGV4OiAwIDAgNzUlO1xyXG4gICAgbWF4LXdpZHRoOiA3NSU7XHJcbiAgfVxyXG4gIC5jb2wtdXMtMTAge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA4My4zMzMzMyU7XHJcbiAgICBmbGV4OiAwIDAgODMuMzMzMzMlO1xyXG4gICAgbWF4LXdpZHRoOiA4My4zMzMzMyU7XHJcbiAgfVxyXG4gIC5jb2wtdXMtMTEge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA5MS42NjY2NyU7XHJcbiAgICBmbGV4OiAwIDAgOTEuNjY2NjclO1xyXG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NyU7XHJcbiAgfVxyXG4gIC5jb2wtdXMtMTIge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAxMDAlO1xyXG4gICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xyXG4gIC5jb2wteHMtMSB7XHJcbiAgICAtbXMtZmxleDogMCAwIDguMzMzMzMlO1xyXG4gICAgZmxleDogMCAwIDguMzMzMzMlO1xyXG4gICAgbWF4LXdpZHRoOiA4LjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC14cy0yIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgMTYuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDE2LjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogMTYuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLXhzLTMge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAyNSU7XHJcbiAgICBmbGV4OiAwIDAgMjUlO1xyXG4gICAgbWF4LXdpZHRoOiAyNSU7XHJcbiAgfVxyXG4gIC5jb2wteHMtNCB7XHJcbiAgICAtbXMtZmxleDogMCAwIDMzLjMzMzMzJTtcclxuICAgIGZsZXg6IDAgMCAzMy4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDMzLjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC14cy01IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNDEuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDQxLjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogNDEuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLXhzLTYge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA1MCU7XHJcbiAgICBmbGV4OiAwIDAgNTAlO1xyXG4gICAgbWF4LXdpZHRoOiA1MCU7XHJcbiAgfVxyXG4gIC5jb2wteHMtNyB7XHJcbiAgICAtbXMtZmxleDogMCAwIDU4LjMzMzMzJTtcclxuICAgIGZsZXg6IDAgMCA1OC4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDU4LjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC14cy04IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNjYuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDY2LjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogNjYuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLXhzLTkge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA3NSU7XHJcbiAgICBmbGV4OiAwIDAgNzUlO1xyXG4gICAgbWF4LXdpZHRoOiA3NSU7XHJcbiAgfVxyXG4gIC5jb2wteHMtMTAge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA4My4zMzMzMyU7XHJcbiAgICBmbGV4OiAwIDAgODMuMzMzMzMlO1xyXG4gICAgbWF4LXdpZHRoOiA4My4zMzMzMyU7XHJcbiAgfVxyXG4gIC5jb2wteHMtMTEge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA5MS42NjY2NyU7XHJcbiAgICBmbGV4OiAwIDAgOTEuNjY2NjclO1xyXG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NyU7XHJcbiAgfVxyXG4gIC5jb2wteHMtMTIge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAxMDAlO1xyXG4gICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gIC5jb2wtc20tMSB7XHJcbiAgICAtbXMtZmxleDogMCAwIDguMzMzMzMlO1xyXG4gICAgZmxleDogMCAwIDguMzMzMzMlO1xyXG4gICAgbWF4LXdpZHRoOiA4LjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC1zbS0yIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgMTYuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDE2LjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogMTYuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLXNtLTMge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAyNSU7XHJcbiAgICBmbGV4OiAwIDAgMjUlO1xyXG4gICAgbWF4LXdpZHRoOiAyNSU7XHJcbiAgfVxyXG4gIC5jb2wtc20tNCB7XHJcbiAgICAtbXMtZmxleDogMCAwIDMzLjMzMzMzJTtcclxuICAgIGZsZXg6IDAgMCAzMy4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDMzLjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC1zbS01IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNDEuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDQxLjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogNDEuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLXNtLTYge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA1MCU7XHJcbiAgICBmbGV4OiAwIDAgNTAlO1xyXG4gICAgbWF4LXdpZHRoOiA1MCU7XHJcbiAgfVxyXG4gIC5jb2wtc20tNyB7XHJcbiAgICAtbXMtZmxleDogMCAwIDU4LjMzMzMzJTtcclxuICAgIGZsZXg6IDAgMCA1OC4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDU4LjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC1zbS04IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNjYuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDY2LjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogNjYuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLXNtLTkge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA3NSU7XHJcbiAgICBmbGV4OiAwIDAgNzUlO1xyXG4gICAgbWF4LXdpZHRoOiA3NSU7XHJcbiAgfVxyXG4gIC5jb2wtc20tMTAge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA4My4zMzMzMyU7XHJcbiAgICBmbGV4OiAwIDAgODMuMzMzMzMlO1xyXG4gICAgbWF4LXdpZHRoOiA4My4zMzMzMyU7XHJcbiAgfVxyXG4gIC5jb2wtc20tMTEge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA5MS42NjY2NyU7XHJcbiAgICBmbGV4OiAwIDAgOTEuNjY2NjclO1xyXG4gICAgbWF4LXdpZHRoOiA5MS42NjY2NyU7XHJcbiAgfVxyXG4gIC5jb2wtc20tMTIge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAxMDAlO1xyXG4gICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcclxuICAuY29sLW1kLTEge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA4LjMzMzMzJTtcclxuICAgIGZsZXg6IDAgMCA4LjMzMzMzJTtcclxuICAgIG1heC13aWR0aDogOC4zMzMzMyU7XHJcbiAgfVxyXG4gIC5jb2wtbWQtMiB7XHJcbiAgICAtbXMtZmxleDogMCAwIDE2LjY2NjY3JTtcclxuICAgIGZsZXg6IDAgMCAxNi42NjY2NyU7XHJcbiAgICBtYXgtd2lkdGg6IDE2LjY2NjY3JTtcclxuICB9XHJcbiAgLmNvbC1tZC0zIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgMjUlO1xyXG4gICAgZmxleDogMCAwIDI1JTtcclxuICAgIG1heC13aWR0aDogMjUlO1xyXG4gIH1cclxuICAuY29sLW1kLTQge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAzMy4zMzMzMyU7XHJcbiAgICBmbGV4OiAwIDAgMzMuMzMzMzMlO1xyXG4gICAgbWF4LXdpZHRoOiAzMy4zMzMzMyU7XHJcbiAgfVxyXG4gIC5jb2wtbWQtNSB7XHJcbiAgICAtbXMtZmxleDogMCAwIDQxLjY2NjY3JTtcclxuICAgIGZsZXg6IDAgMCA0MS42NjY2NyU7XHJcbiAgICBtYXgtd2lkdGg6IDQxLjY2NjY3JTtcclxuICB9XHJcbiAgLmNvbC1tZC02IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNTAlO1xyXG4gICAgZmxleDogMCAwIDUwJTtcclxuICAgIG1heC13aWR0aDogNTAlO1xyXG4gIH1cclxuICAuY29sLW1kLTcge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA1OC4zMzMzMyU7XHJcbiAgICBmbGV4OiAwIDAgNTguMzMzMzMlO1xyXG4gICAgbWF4LXdpZHRoOiA1OC4zMzMzMyU7XHJcbiAgfVxyXG4gIC5jb2wtbWQtOCB7XHJcbiAgICAtbXMtZmxleDogMCAwIDY2LjY2NjY3JTtcclxuICAgIGZsZXg6IDAgMCA2Ni42NjY2NyU7XHJcbiAgICBtYXgtd2lkdGg6IDY2LjY2NjY3JTtcclxuICB9XHJcbiAgLmNvbC1tZC05IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNzUlO1xyXG4gICAgZmxleDogMCAwIDc1JTtcclxuICAgIG1heC13aWR0aDogNzUlO1xyXG4gIH1cclxuICAuY29sLW1kLTEwIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgODMuMzMzMzMlO1xyXG4gICAgZmxleDogMCAwIDgzLjMzMzMzJTtcclxuICAgIG1heC13aWR0aDogODMuMzMzMzMlO1xyXG4gIH1cclxuICAuY29sLW1kLTExIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgOTEuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDkxLjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogOTEuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLW1kLTEyIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgMTAwJTtcclxuICAgIGZsZXg6IDAgMCAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIH1cclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTE3MHB4KSB7XHJcbiAgLmNvbC1sZy0xIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgOC4zMzMzMyU7XHJcbiAgICBmbGV4OiAwIDAgOC4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDguMzMzMzMlO1xyXG4gIH1cclxuICAuY29sLWxnLTIge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAxNi42NjY2NyU7XHJcbiAgICBmbGV4OiAwIDAgMTYuNjY2NjclO1xyXG4gICAgbWF4LXdpZHRoOiAxNi42NjY2NyU7XHJcbiAgfVxyXG4gIC5jb2wtbGctMyB7XHJcbiAgICAtbXMtZmxleDogMCAwIDI1JTtcclxuICAgIGZsZXg6IDAgMCAyNSU7XHJcbiAgICBtYXgtd2lkdGg6IDI1JTtcclxuICB9XHJcbiAgLmNvbC1sZy00IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgMzMuMzMzMzMlO1xyXG4gICAgZmxleDogMCAwIDMzLjMzMzMzJTtcclxuICAgIG1heC13aWR0aDogMzMuMzMzMzMlO1xyXG4gIH1cclxuICAuY29sLWxnLTUge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA0MS42NjY2NyU7XHJcbiAgICBmbGV4OiAwIDAgNDEuNjY2NjclO1xyXG4gICAgbWF4LXdpZHRoOiA0MS42NjY2NyU7XHJcbiAgfVxyXG4gIC5jb2wtbGctNiB7XHJcbiAgICAtbXMtZmxleDogMCAwIDUwJTtcclxuICAgIGZsZXg6IDAgMCA1MCU7XHJcbiAgICBtYXgtd2lkdGg6IDUwJTtcclxuICB9XHJcbiAgLmNvbC1sZy03IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNTguMzMzMzMlO1xyXG4gICAgZmxleDogMCAwIDU4LjMzMzMzJTtcclxuICAgIG1heC13aWR0aDogNTguMzMzMzMlO1xyXG4gIH1cclxuICAuY29sLWxnLTgge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA2Ni42NjY2NyU7XHJcbiAgICBmbGV4OiAwIDAgNjYuNjY2NjclO1xyXG4gICAgbWF4LXdpZHRoOiA2Ni42NjY2NyU7XHJcbiAgfVxyXG4gIC5jb2wtbGctOSB7XHJcbiAgICAtbXMtZmxleDogMCAwIDc1JTtcclxuICAgIGZsZXg6IDAgMCA3NSU7XHJcbiAgICBtYXgtd2lkdGg6IDc1JTtcclxuICB9XHJcbiAgLmNvbC1sZy0xMCB7XHJcbiAgICAtbXMtZmxleDogMCAwIDgzLjMzMzMzJTtcclxuICAgIGZsZXg6IDAgMCA4My4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC1sZy0xMSB7XHJcbiAgICAtbXMtZmxleDogMCAwIDkxLjY2NjY3JTtcclxuICAgIGZsZXg6IDAgMCA5MS42NjY2NyU7XHJcbiAgICBtYXgtd2lkdGg6IDkxLjY2NjY3JTtcclxuICB9XHJcbiAgLmNvbC1sZy0xMiB7XHJcbiAgICAtbXMtZmxleDogMCAwIDEwMCU7XHJcbiAgICBmbGV4OiAwIDAgMTAwJTtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6IDEzMzBweCkge1xyXG4gIC5jb2wtbC0xIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgOC4zMzMzMyU7XHJcbiAgICBmbGV4OiAwIDAgOC4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDguMzMzMzMlO1xyXG4gIH1cclxuICAuY29sLWwtMiB7XHJcbiAgICAtbXMtZmxleDogMCAwIDE2LjY2NjY3JTtcclxuICAgIGZsZXg6IDAgMCAxNi42NjY2NyU7XHJcbiAgICBtYXgtd2lkdGg6IDE2LjY2NjY3JTtcclxuICB9XHJcbiAgLmNvbC1sLTMge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAyNSU7XHJcbiAgICBmbGV4OiAwIDAgMjUlO1xyXG4gICAgbWF4LXdpZHRoOiAyNSU7XHJcbiAgfVxyXG4gIC5jb2wtbC00IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgMzMuMzMzMzMlO1xyXG4gICAgZmxleDogMCAwIDMzLjMzMzMzJTtcclxuICAgIG1heC13aWR0aDogMzMuMzMzMzMlO1xyXG4gIH1cclxuICAuY29sLWwtNSB7XHJcbiAgICAtbXMtZmxleDogMCAwIDQxLjY2NjY3JTtcclxuICAgIGZsZXg6IDAgMCA0MS42NjY2NyU7XHJcbiAgICBtYXgtd2lkdGg6IDQxLjY2NjY3JTtcclxuICB9XHJcbiAgLmNvbC1sLTYge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA1MCU7XHJcbiAgICBmbGV4OiAwIDAgNTAlO1xyXG4gICAgbWF4LXdpZHRoOiA1MCU7XHJcbiAgfVxyXG4gIC5jb2wtbC03IHtcclxuICAgIC1tcy1mbGV4OiAwIDAgNTguMzMzMzMlO1xyXG4gICAgZmxleDogMCAwIDU4LjMzMzMzJTtcclxuICAgIG1heC13aWR0aDogNTguMzMzMzMlO1xyXG4gIH1cclxuICAuY29sLWwtOCB7XHJcbiAgICAtbXMtZmxleDogMCAwIDY2LjY2NjY3JTtcclxuICAgIGZsZXg6IDAgMCA2Ni42NjY2NyU7XHJcbiAgICBtYXgtd2lkdGg6IDY2LjY2NjY3JTtcclxuICB9XHJcbiAgLmNvbC1sLTkge1xyXG4gICAgLW1zLWZsZXg6IDAgMCA3NSU7XHJcbiAgICBmbGV4OiAwIDAgNzUlO1xyXG4gICAgbWF4LXdpZHRoOiA3NSU7XHJcbiAgfVxyXG4gIC5jb2wtbC0xMCB7XHJcbiAgICAtbXMtZmxleDogMCAwIDgzLjMzMzMzJTtcclxuICAgIGZsZXg6IDAgMCA4My4zMzMzMyU7XHJcbiAgICBtYXgtd2lkdGg6IDgzLjMzMzMzJTtcclxuICB9XHJcbiAgLmNvbC1sLTExIHtcclxuICAgIC1tcy1mbGV4OiAwIDAgOTEuNjY2NjclO1xyXG4gICAgZmxleDogMCAwIDkxLjY2NjY3JTtcclxuICAgIG1heC13aWR0aDogOTEuNjY2NjclO1xyXG4gIH1cclxuICAuY29sLWwtMTIge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAxMDAlO1xyXG4gICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcbi8vIDEwIENPTE9OQUsg8J+UpfCflKXwn5Sl8J+UpfCflKXwn5Sl8J+UpVxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTE3MHB4KSB7XHJcbiAgLmNvbC14bC0xIHtcclxuICAgIGZsZXg6IDAgMCAxMCU7XHJcbiAgICBtYXgtd2lkdGg6IDEwJTtcclxuICB9XHJcbiAgLmNvbC14bC0yIHtcclxuICAgIGZsZXg6IDAgMCAyMCU7XHJcbiAgICBtYXgtd2lkdGg6IDIwJTtcclxuICB9XHJcblxyXG4gIC5jb2wteGwtMyB7XHJcbiAgICBmbGV4OiAwIDAgMzAlO1xyXG4gICAgbWF4LXdpZHRoOiAzMCU7XHJcbiAgfVxyXG4gIC5jb2wteGwtNCB7XHJcbiAgICBmbGV4OiAwIDAgNDAlO1xyXG4gICAgbWF4LXdpZHRoOiA0MCU7XHJcbiAgfVxyXG4gIC5jb2wteGwtNSB7XHJcbiAgICBmbGV4OiAwIDAgNTAlO1xyXG4gICAgbWF4LXdpZHRoOiA1MCU7XHJcbiAgfVxyXG4gIC5jb2wteGwtNiB7XHJcbiAgICBmbGV4OiAwIDAgNjAlO1xyXG4gICAgbWF4LXdpZHRoOiA2MCU7XHJcbiAgfVxyXG4gIC5jb2wteGwtNyB7XHJcbiAgICBmbGV4OiAwIDAgNzAlO1xyXG4gICAgbWF4LXdpZHRoOiA3MCU7XHJcbiAgfVxyXG4gIC5jb2wteGwtOCB7XHJcbiAgICBmbGV4OiAwIDAgODAlO1xyXG4gICAgbWF4LXdpZHRoOiA4MCU7XHJcbiAgfVxyXG4gIC5jb2wteGwtOSB7XHJcbiAgICBmbGV4OiAwIDAgOTAlO1xyXG4gICAgbWF4LXdpZHRoOiA5MCU7XHJcbiAgfVxyXG4gIC5jb2wteGwtMTAge1xyXG4gICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcbiIsIi5tYWluLWNvbnRhY3RzLXRlbC1hcnJvdyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBtYXJnaW4tbGVmdDogNnB4O1xyXG4gIGJvdHRvbTogMnB4O1xyXG4gIG1heC13aWR0aDogMTJweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgaW1nIHtcclxuICAgIG1pbi13aWR0aDogMTJweDtcclxuICB9XHJcbn1cclxuLm1haW4tY29udGFjdHMtdGVsLW51bWJlcnMge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgYmFja2dyb3VuZDogI2ZmZjtcclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxufVxyXG4ubnVtYmVycy1vcGVuIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4vLyDwn42kXHJcbi5oZWFkZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW4tYm90dG9tOiAxN3B4O1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzLCBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMsIC13ZWJraXQtdHJhbnNmb3JtIDAuNHM7XHJcbiAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcclxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICBwYWRkaW5nOiAxMXB4IDA7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuICAubWVudSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xyXG4gICAgcGFkZGluZzogMTBweCAwcHg7XHJcbiAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIGxpIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBhIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDMycHg7XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzMDBweCkge1xyXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XHJcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXdyYXAge1xyXG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtdGltZSB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDU2cHg7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtYWRkcmVzcyB7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgfVxyXG4gICAgJi1pY29uIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IC0ycHg7XHJcbiAgICAgIGxlZnQ6IC0yNnB4O1xyXG4gICAgICBtYXgtd2lkdGg6IDI0cHg7XHJcbiAgICAgIGhlaWdodDogMjRweDtcclxuICAgICAgaW1nIHtcclxuICAgICAgICBtYXgtaGVpZ2h0OiAyNHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5tYWluIHtcclxuICAgIHBhZGRpbmc6IDE4cHggMHB4O1xyXG4gICAgJi1jb250YWluZXIge1xyXG4gICAgICBnYXA6IDMycHg7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIHtcclxuICAgICAgICBnYXA6IDIwcHg7XHJcbiAgICAgIH1cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgIGdhcDogMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcbiAgICAmLWNhcmQge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMnB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWxvZ28ge1xyXG4gICAgICBmbGV4OiAwIDAgMTkycHg7XHJcbiAgICAgIG1heC13aWR0aDogMTkycHg7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1heC13aWR0aDogaW5pdGlhbDtcclxuICAgICAgICBmbGV4OiBhdXRvO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICB9XHJcbiAgICAgICYtaW1nIHtcclxuICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgIH1cclxuICAgICAgaW1nIHtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA0MHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWNhdGFsb2cge1xyXG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JSZWQ7XHJcbiAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgcGFkZGluZzogMHB4IDE0cHg7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgaGVpZ2h0OiA0OHB4O1xyXG4gICAgICAgIHdpZHRoOiA0OHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiA0OHB4O1xyXG4gICAgICB9XHJcbiAgICAgICYtd3JhcHBlciB7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGVuZDtcclxuICAgICAgICAgIGZsZXg6IDAgMCAxMzRweDtcclxuICAgICAgICAgIG1heC13aWR0aDogMTM0cHg7XHJcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcclxuICAgICAgICAgICAgZmxleDogMCAwIDEwOHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDEycHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtdGV4dCB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMjcwcHgpIHtcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXRvZ2dsZXIge1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgd2lkdGg6IDE4cHg7XHJcbiAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgIGJvdHRvbTogLTJweDtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMzUwcHgpIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDRweDtcclxuICAgICAgfVxyXG4gICAgICAmOmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgd2lkdGg6IDE4cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgdG9wOiAtNnB4O1xyXG4gICAgICB9XHJcbiAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAxOHB4O1xyXG4gICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHRvcDogLTEycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtY29udGFjdHMge1xyXG4gICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xyXG4gICAgICBhIHtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgfVxyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgfVxyXG4gICAgICAmLXRlbCxcclxuICAgICAgJi1lbWFpbCB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMjZweDtcclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xyXG4gICAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAmLWljb24ge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwJSwgLTUwJSk7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICBtYXgtd2lkdGg6IDIwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICBtYXgtaGVpZ2h0OiAyMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1tZW51IHtcclxuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIH1cclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAmLXNlcnZpY2VzIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyNnB4O1xyXG4gICAgICAgIHRyYW5zaXRpb246IDAuMXMgZWFzZTtcclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XHJcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtaW1nIHtcclxuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1zdmcge1xyXG4gICAgICAgICAgbWF4LXdpZHRoOiAyNHB4O1xyXG4gICAgICAgICAgbWF4LWhlaWdodDogMjRweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtdGV4dCB7XHJcbiAgICAgICAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDEzKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJi1sYWJlbCB7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICB3aWR0aDogMzBweDtcclxuICAgICAgICAgIGhlaWdodDogMTZweDtcclxuICAgICAgICAgIGJhY2tncm91bmQ6ICRjb2xvclJlZDtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgICBmb250LXNpemU6IHJlbSgxMik7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC01MCUpO1xyXG4gICAgICAgICAgdG9wOiAzcHg7XHJcbiAgICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5uYXYge1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIGdhcDogMnB4O1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgICYtd3JhcHBlciB7XHJcbiAgICAgIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgICB9XHJcblxyXG4gICAgJi1pdGVtIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgcGFkZGluZzogMTVweCAxNXB4O1xyXG4gICAgICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGZsZXg6IDAgMCAyMCU7XHJcbiAgICAgIG1heC13aWR0aDogMjAlO1xyXG4gICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2VkZWRlZDtcclxuICAgICAgfVxyXG4gICAgICAmLWltZyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICBtYXgtaGVpZ2h0OiAzMnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTM0MHB4KSB7XHJcbiAgICAgICAgICBsZWZ0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTI0MHB4KSB7XHJcbiAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1zZWxlY3Qge1xyXG4gICAgICBjb2xvcjogJGNvbG9yUmVkO1xyXG4gICAgfVxyXG4gIH1cclxuICAubW9iLW1lbnUge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDI0cHg7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDEycHg7XHJcbiAgICAgIH1cclxuICAgICAgJi1pbWcge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBtYXgtd2lkdGg6IDMycHg7XHJcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xyXG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDhweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIG1heC1oZWlnaHQ6IDMycHg7XHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMzUwcHgpIHtcclxuICAgICAgICAgICAgbWF4LWhlaWdodDogMjhweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5tb2JpbGUtc2VwYXIge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLm1vYmlsZS1jYXJkIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIG1heC13aWR0aDogMzJweDtcclxuICBpbWcge1xyXG4gICAgbWF4LWhlaWdodDogMzJweDtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNTBweCkge1xyXG4gICAgICBtYXgtaGVpZ2h0OiAyOHB4O1xyXG4gICAgfVxyXG4gIH1cclxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDMycHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgLm1vYmlsZS1zZXBhciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB3aWR0aDogMXB4O1xyXG4gICAgICBoZWlnaHQ6IDgwcHg7XHJcbiAgICAgIGJhY2tncm91bmQ6ICNkM2QzZDM7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgICB0b3A6IDUwJTtcclxuICAgICAgbGVmdDogNTAlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gSW5wdXRcclxuLm1haW4tc2VhcmNoIHtcclxuICAmLWZvcm0ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG4gICYtaW5wdXQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItY29sb3I6ICNkM2QzZDM7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA4N3B4O1xyXG4gIH1cclxuICAmLWJ0biB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICB3aWR0aDogODBweDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JEYXJrO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCUsIC01MCUpO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAgNXB4IDVweCAwO1xyXG4gICAgJi1pbWcge1xyXG4gICAgICBtYXgtd2lkdGg6IDI0cHg7XHJcbiAgICAgIGhlaWdodDogMjRweDtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBib3R0b206IC0ycHg7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgaW1nIHtcclxuICAgICAgICBtYXgtaGVpZ2h0OiAyNHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uaGVhZGVyLmhlYWRlckNhcmRfZml4ZWQge1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuLmhlYWRlcl9maXhlZCB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgei1pbmRleDogOTk5O1xyXG4gIGxlZnQ6IDA7XHJcbiAgdG9wOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpO1xyXG4gIC5tYWluIHtcclxuICAgIHBhZGRpbmc6IDE3cHggMHB4O1xyXG4gIH1cclxufVxyXG5cclxuLndyYXBwZXJfZml4ZWQge1xyXG4gIHBhZGRpbmctdG9wOiAxOTVweDtcclxufVxyXG5cclxuLmhlYWRlckNhcmRfZml4ZWQge1xyXG4gIGJveC1zaGFkb3c6IGluaXRpYWw7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkM2QzZDM7XHJcbn1cclxuIiwiLmZvb3RlciB7XHJcbiAgcGFkZGluZzogNDBweCAwcHg7XHJcbiAgYmFja2dyb3VuZDogIzFkMjYyYztcclxuICBjb2xvcjogI2ZmZjtcclxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIHBhZGRpbmc6IDMycHggMHB4IDM3cHggMHB4O1xyXG4gIH1cclxuICB1bCBsaSB7XHJcbiAgICAvLyBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIH1cclxuICB9XHJcbiAgdWwgbGkgYSB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIG9wYWNpdHk6IDAuNTtcclxuICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIH1cclxuICB9XHJcbiAgJi10b3Age1xyXG4gICAgcGFkZGluZy1ib3R0b206IDI3cHg7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xyXG4gICAgfVxyXG4gICAgJi10aXRsZSB7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICAmLmZvb3Rlci1vcGVuIHtcclxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIycHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjZmZmO1xyXG4gICAgICAgICAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgI2ZmZjtcclxuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XHJcbiAgICAgICAgICB3aWR0aDogOHB4O1xyXG4gICAgICAgICAgaGVpZ2h0OiA4cHg7XHJcbiAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgIHRvcDogNXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLmZvb3Rlci1vcGVuOmFmdGVyIHtcclxuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYgKyB1bCB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLmZvb3Rlci1vcGVuICsgdWwge1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXNlcnZpY2VzIHtcclxuICAgICBcclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNDRweDtcclxuICAgICAgICAuZm9vdGVyLXRvcC13cmFwIHtcclxuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXdyYXAge1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xyXG4gICAgICAgIHBhZGRpbmc6IDIwcHggMTVweDtcclxuICAgICAgICBtYXJnaW46IDBweCAtMjBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1hYm91dCB7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIHtcclxuICAgICAgICAmLXdyYXBwZXIge1xyXG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTlweDtcclxuICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1pbmZvIHtcclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xyXG4gICAgICAgICYtd3JhcHBlciB7XHJcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWNvbnRhY3Qge1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtcGF5IHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMjdweDtcclxuICAgIH1cclxuICAgICYtbG9nbyB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxuICAgICAgbWF4LXdpZHRoOiAxNTBweDtcclxuICAgICAgaW1nIHtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA0OHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXdyYXBwZXIge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAyN3B4O1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXJlc291cmNlIHtcclxuICAgICAgLmZvb3Rlci10b3AtdGl0bGUge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIH1cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgLmZvb3Rlci10b3AtdGl0bGUge1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAmICsgLmZvb3Rlci10b3AtbWVkaWEtd3JhcHBlciB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmLmZvb3Rlci1vcGVuICsgLmZvb3Rlci10b3AtbWVkaWEtd3JhcHBlciB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICYgKyAuZm9vdGVyLWJvdHRvbS1pbmZvIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICYuZm9vdGVyLW9wZW4gKyAuZm9vdGVyLWJvdHRvbS1pbmZvIHtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJi1zdWIge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDM0cHg7XHJcbiAgICAgIH1cclxuICAgICAgJi13cmFwcGVyIHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gICYtY29udGFjdHMge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuICAgICYtbGluayB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgZm9udC1zaXplOiByZW0oMjIpO1xyXG4gICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTI0MHB4KSBhbmQgKG1pbi13aWR0aDogMTE3MHB4KSB7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMjApO1xyXG4gICAgICB9XHJcbiAgICAgICY6aG92ZXIge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICB9XHJcbiAgICAgICYtaW1nIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGJvdHRvbTogLTJweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAyMHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gICYtc3RyZWV0IHtcclxuICAgIG1heC13aWR0aDogMjE1cHg7XHJcbiAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgIG1heC13aWR0aDogaW5pdGlhbDtcclxuICAgIH1cclxuICB9XHJcbiAgJi1jbG9jayB7XHJcbiAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDI2cHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLWJvdHRvbSB7XHJcbiAgICBwYWRkaW5nLXRvcDogMzFweDtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICBwYWRkaW5nLXRvcDogMDtcclxuICAgIH1cclxuICAgICYtbGlua3Mge1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgfVxyXG4gICAgICAmLXRpdGxlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDExcHg7XHJcbiAgICAgIH1cclxuICAgICAgJi1saW5rIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDQwcHg7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIG1heC1oZWlnaHQ6IDQwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXNvY2lhbHMge1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuICAgICAgfVxyXG4gICAgICAmLXdyYXBwZXIge1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTcwcHgpIHtcclxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAmLXRpdGxlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDExcHg7XHJcbiAgICAgIH1cclxuICAgICAgJi1saW5rIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gICAgICAgIG1pbi13aWR0aDogNDBweDtcclxuICAgICAgICBtaW4taGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHN2ZyB7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xyXG4gICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgICB3aWR0aDogMjRweDtcclxuICAgICAgICAgIGhlaWdodDogMjRweDtcclxuICAgICAgICAgIGZpbGw6ICNmZmY7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICBcclxuICAgIH1cclxuICAgICYtcmVpdCB7XHJcbiAgICAgICYtdGl0bGUge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTFweDtcclxuICAgICAgfVxyXG4gICAgICAmLWxpbmsge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAxOTBweDtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMTJweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzOHB4O1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNDBweCkgYW5kIChtaW4td2lkdGg6IDExNzBweCkge1xyXG4gICAgICAgICAgd2lkdGg6IDE3NXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBzcGFuIHtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgIC8vIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5maXgtbWFwIHtcclxuICAgICAgICAgIHRvcDogNXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtbWFwIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMDBweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRvcDogM3B4O1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMjQwcHgpIGFuZCAobWluLXdpZHRoOiAxMTcwcHgpIHtcclxuICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIG1heC1oZWlnaHQ6IDI0cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtc3RhciB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIG1heC13aWR0aDogMjBweDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdG9wOiAycHg7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIG1heC1oZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWluZm8ge1xyXG4gICAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICAgICYtc3VidGl0bGUge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDYwcHg7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xyXG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJi1jb29weXJpZ2h0IHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxMik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5mb290ZXItdG9wLXdyYXAge1xyXG4gIG1hcmdpbi1ib3R0b206IDI3cHg7XHJcbn1cclxuXHJcbi8vIGN1c3RvbSBjb2x1bW5zXHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogMTE3MHB4KSB7XHJcbiAgLmNvbC1ub25lIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gIC5jb2wtbm9uZS03IHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcbiIsInAge1xyXG4gIHBhZGRpbmc6IDVweCAwcHg7XHJcbn1cclxuXHJcbnVsLFxyXG5vbCxcclxubGkge1xyXG4gIHBhZGRpbmc6IDBweDtcclxuICBtYXJnaW46IDBweDtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5oMSxcclxuaDIsXHJcbmgzLFxyXG5oNCxcclxuaDUsXHJcbi5oMSxcclxuLmgyLFxyXG4uaDMsXHJcbi5oNCxcclxuLmg1IHtcclxuICBmb250LWZhbWlseTogJGZmT3BlblNhbnM7XHJcbiAgY29sb3I6ICMwMDA7XHJcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbiAgbGluZS1oZWlnaHQ6IDEuNDI7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxufVxyXG5cclxuaDEsXHJcbi5oMSB7XHJcbiAgZm9udC1zaXplOiByZW0oNDBweCk7XHJcbn1cclxuXHJcbmgyLFxyXG4uaDIge1xyXG4gIGZvbnQtc2l6ZTogcmVtKDMycHgpO1xyXG59XHJcblxyXG5oMyxcclxuLmgzIHtcclxuICBmb250LXNpemU6IHJlbSgyMnB4KTtcclxufVxyXG5cclxuaDQsXHJcbi5oNCB7XHJcbiAgZm9udC1zaXplOiByZW0oMThweCk7XHJcbn1cclxuaDUsXHJcbi5oNSB7XHJcbiAgZm9udC1zaXplOiByZW0oMTZweCk7XHJcbn1cclxuXHJcbmEge1xyXG4gIGNvbG9yOiAkY29sb3JCbHVlO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG5iLFxyXG51bCxcclxubGkge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcbiIsImltZyB7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogYXV0bztcclxufVxyXG4iLCJidXR0b24ge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLy8gRXhhbXBsZSBvZiBCdG5cclxuLnVpLWJ0biB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGhlaWdodDogNDhweDtcclxuICBsaW5lLWhlaWdodDogNDZweDtcclxuICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gIC8vIHBhZGRpbmc6IDBweCAzNnB4O1xyXG4gIGZvbnQtZmFtaWx5OiAkZmZPcGVuU2FucztcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIGZvbnQtc2l6ZTogcmVtKDE2cHgpO1xyXG4gIGNvbG9yOiAjMDAwO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBvcGFjaXR5OiAwLjg7XHJcbiAgfVxyXG59IiwiLy8gU3RpY2tlcnNcclxuLnBhZ2Utc3RpY2tlcnMge1xyXG4gIG1hcmdpbi1ib3R0b206IDEzcHg7XHJcbiAgb3ZlcmZsb3cteDogYXV0bztcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG59XHJcbi8qINGF0YDQvtC8LCDRgdCw0YTQsNGA0LggKi9cclxuLnBhZ2Utc3RpY2tlcnM6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICB3aWR0aDogMDtcclxufVxyXG5cclxuLyogaWUgMTArICovXHJcbi5wYWdlLXN0aWNrZXJzIHtcclxuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbi8qINGE0YQgKNGB0LLQvtC50YHRgtCy0L4g0LHQvtC70YzRiNC1INC90LUg0YDQsNCx0L7RgtCw0LXRgiwg0LTRgNGD0LPQuNGFINGB0L/QvtGB0L7QsdC+0LIg0YLQvtC20LUg0L3QtdGCKSovXHJcbi5wYWdlLXN0aWNrZXJzIHtcclxuICBvdmVyZmxvdzogLW1vei1zY3JvbGxiYXJzLW5vbmU7XHJcbn1cclxuLnVpLXN0aWNrZXIge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBoZWlnaHQ6IDMycHg7XHJcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgcGFkZGluZzogMCAxNnB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogJGZmT3BlblNhbnM7XHJcbiAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICB0cmFuc2l0aW9uOiAwLjNzIGVhc2U7XHJcbn1cclxuXHJcbi5zdGlja2VyLXllbGxvdyB7XHJcbiAgY29sb3I6ICNmZmMxMDA7XHJcbiAgYm9yZGVyLWNvbG9yOiAjZmZjMTAwO1xyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZjMTAwO1xyXG4gIH1cclxufVxyXG4uc3RpY2tlci1ibHVlIHtcclxuICBjb2xvcjogIzFhNjZhZTtcclxuICBib3JkZXItY29sb3I6ICMxYTY2YWU7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQ6ICMxYTY2YWU7XHJcbiAgfVxyXG59XHJcbi5zdGlja2VyLWdyZWVuIHtcclxuICBjb2xvcjogIzU1OWU1MztcclxuICBib3JkZXItY29sb3I6ICM1NTllNTM7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQ6ICM1NTllNTM7XHJcbiAgfVxyXG59XHJcbi5zdGlja2VyLXB1cnBsZSB7XHJcbiAgY29sb3I6ICM3ZDNlOGM7XHJcbiAgYm9yZGVyLWNvbG9yOiAjN2QzZThjO1xyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBiYWNrZ3JvdW5kOiAjN2QzZThjO1xyXG4gIH1cclxufVxyXG4uc3RpY2tlci1yZWQge1xyXG4gIGNvbG9yOiAjYmMwMDAwO1xyXG4gIGJvcmRlci1jb2xvcjogI2JjMDAwMDtcclxuICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYmFja2dyb3VuZDogI2JjMDAwMDtcclxuICB9XHJcbn1cclxuLnN0aWNrZXItb3JhbmdlIHtcclxuICBjb2xvcjogI2YyODcwNTtcclxuICBib3JkZXItY29sb3I6ICNmMjg3MDU7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQ6ICNmMjg3MDU7XHJcbiAgfVxyXG59XHJcbi5zdGlja2VyLWN5YW4ge1xyXG4gIGNvbG9yOiAjODNkYmU0O1xyXG4gIGJvcmRlci1jb2xvcjogIzgzZGJlNDtcclxuICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYmFja2dyb3VuZDogIzgzZGJlNDtcclxuICB9XHJcbn1cclxuIiwiLy8gQnJlYWRjcnVtYnMgZXhhbXBsZVxyXG5bY2xhc3MqPVwiLWJyZWFkY3J1bWJzXCJdIHtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGEge1xyXG4gICAgZm9udC1zaXplOiByZW0oMTRweCk7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIDpsYXN0LWNoaWxkIHtcclxuICAgIG9wYWNpdHk6IDAuNTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGkge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxuICBpIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA4cHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICB9XHJcbn1cclxuXHJcbi5wYWdlLWJyZWFkY3J1bWJzIHtcclxuICBtYXJnaW4tYm90dG9tOiAyOHB4O1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjRweDtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAucGFnZS1icmVhZGNydW1icyB7XHJcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHJcbiAgICBpLFxyXG4gICAgYSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICBhOm50aC1sYXN0LWNoaWxkKC1uICsgMykge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB9XHJcbiAgICBpOm50aC1sYXN0LWNoaWxkKC1uICsgMikge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ucGFnZS1icmVhZGNydW1iczo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gIHdpZHRoOiAwO1xyXG59XHJcbi5wYWdlLWJyZWFkY3J1bWJzIHtcclxuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XHJcbn1cclxuLnBhZ2UtYnJlYWRjcnVtYnMge1xyXG4gIG92ZXJmbG93OiAtbW96LXNjcm9sbGJhcnMtbm9uZTtcclxufVxyXG4iLCJcclxuLnVpLWlucHV0IHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAzOHB4O1xyXG4gIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgcGFkZGluZzogMHB4IDE2cHg7XHJcbiAgZm9udC1mYW1pbHk6ICRmZk9wZW5TYW5zO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgZm9udC1zaXplOiByZW0oMTRweCk7XHJcbiAgY29sb3I6ICMwMDA7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzgwODA4MDtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgdHJhbnNpdGlvbjogMC4zcyBlYXNlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAmOmhvdmVyIHtcclxuICAgIG9wYWNpdHk6IDAuODtcclxuICB9XHJcbiAgLy8gJjphY3RpdmUsICY6Zm9jdXMge1xyXG4gIC8vICAgb3V0bGluZS1jb2xvcjogcmVkO1xyXG4gIC8vIH1cclxufVxyXG4iLCJbY2xhc3MqPVwiLXJhdGluZ1wiXSB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxufVxyXG5cclxuW2NsYXNzKj1cIi1yYXRpbmctdmFsdWVcIl0ge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBsaW5lLWhlaWdodDogMTtcclxuICBwYWRkaW5nLWxlZnQ6IDhweDtcclxuICBmb250LWZhbWlseTogJGZmT3BlblNhbnM7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBmb250LXNpemU6IHJlbSgxNik7XHJcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcclxufVxyXG5cclxuW2NsYXNzKj1cIi1yYXRpbmctYm9keVwiXSB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBmb250LXNpemU6IHJlbSgyNSk7XHJcblxyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piF4piF4piF4piF4piFJztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgY29sb3I6ICNEM0QzRDM7XHJcbiAgfVxyXG59XHJcblxyXG5bY2xhc3MqPVwiLXJhdGluZy1pdGVtc1wiXSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG59XHJcblxyXG5bY2xhc3MqPVwiLXJhdGluZy1pdGVtXCJdIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgb3BhY2l0eTogMDtcclxufVxyXG5cclxuW2NsYXNzKj1cIi1yYXRpbmctYWN0aXZlXCJdIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgJjo6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogXCLimIXimIXimIXimIXimIVcIjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICB0b3A6IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIGNvbG9yOiAjRkZDMTAwO1xyXG4gICAgfVxyXG59IiwiLmRvYy1saW5rIHtcclxuICAmLWRvd25sb2FkIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI0QzRDNEMztcclxuICAgIHBhZGRpbmc6IDdweCAxNnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDY0cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gICAgdHJhbnNpdGlvbjogMC4zcyBlYXNlO1xyXG5cclxuICAgICYtdGl0bGUge1xyXG4gICAgICB3aWR0aDogNzAlO1xyXG4gICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICAgIGNvbG9yOiAjMDAwO1xyXG5cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzNTVweCkge1xyXG4gICAgICAgIHdpZHRoOiAyMTNweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtZm9ybWF0IHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICYtaW5mbyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzcGFuIHtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgICBmb250LXNpemU6IHJlbSgxMik7XHJcbiAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi1pY29uIHtcclxuICAgICAgICBsaW5lLWhlaWdodDogMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLnByb2R1Y3Qge1xyXG4gICYtaXRlbSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nOiAxNnB4IDIwcHggMjRweCAyMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICAvLyBtaW4td2lkdGg6IDI2NHB4O1xyXG4gICAgLy8gbWF4LXdpZHRoOiAzMTJweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICYtbGlua3Mge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgfVxyXG4gICAgJi1pbnN0YWxsbWVudHMge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA1MHB4KTtcclxuICAgICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgICBsaW5lLWhlaWdodDogMjRweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yRGFyaztcclxuICAgICAgcGFkZGluZzogMCAxNnB4O1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgLy8gb3ZlcmZsb3cteDogYXV0bztcclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICY6aG92ZXIge1xyXG4gICAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1vcGVuIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIGhlaWdodDogMjRweDtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICAgICAgd2lkdGg6IDM2cHg7XHJcbiAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICB9XHJcbiAgICAgIGltZyB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1pbWcge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA0NXB4O1xyXG4gICAgICBtYXgtaGVpZ2h0OiAyMDBweDtcclxuICAgIH1cclxuICAgICYtc3RhdHMge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XHJcbiAgICB9XHJcbiAgICAmLXJhaXQge1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIHdpZHRoOiA2NHB4O1xyXG4gICAgICBoZWlnaHQ6IDI0cHg7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmMxMDA7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgJi1zcGFuIHtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1jb2RlIHtcclxuICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICYtbnVtYmVyIHtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXRpdGxlIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxM3B4O1xyXG4gICAgICBsaW5lLWhlaWdodDogMS4zO1xyXG4gICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICB3aGl0ZS1zcGFjZTogaW5pdGlhbDtcclxuICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICY6aG92ZXIge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXByaWNlIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcclxuICAgICAgZm9udC1zaXplOiByZW0oMjIpO1xyXG4gICAgICBmb250LXdlaWdodDogNzAwO1xyXG5cclxuICAgICAgJi1zcGFuIHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxNik7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgfVxyXG4gICAgICAmLW9sZCB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxNik7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmZlBvcHBpbnM7XHJcbiAgICAgICAgY29sb3I6ICM4MDgwODA7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1idXR0b25zIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIH1cclxuICAgICYtYnRuIHtcclxuICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDk4cHgpO1xyXG4gICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yUmVkO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICBwYWRkaW5nOiAwIDEycHg7XHJcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICY6aG92ZXIge1xyXG4gICAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgICAgfVxyXG4gICAgICBpbWcge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtbGlrZSB7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB3aWR0aDogNDBweDtcclxuICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICBpbWcge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgIH1cclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWFkZCB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtc2hvdyB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgei1pbmRleDogMjtcclxuICAgICAgdWwge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB6LWluZGV4OiAxMTtcclxuICAgICAgfVxyXG4gICAgICAmLWxpbmsge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMTZweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtZGVzY3JpcHRpb24ge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBsZWZ0OiAxNnB4O1xyXG4gICAgICB0b3A6IDk5JTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgICAgei1pbmRleDogNDtcclxuICAgICAgcGFkZGluZzogMCAxNnB4O1xyXG4gICAgICBtYXJnaW46IDAgLTE2cHg7XHJcblxyXG4gICAgICBib3gtc2hhZG93OiAwIDJweCAzcHggMCByZ2IoMCAwIDAgLyAxMCUpO1xyXG5cclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgfVxyXG4gICAgJi1pbmZvIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxMik7XHJcbiAgICAgIH1cclxuICAgICAgJi1zcGFuIHtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gICYtb3BlbiB7XHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgLnByb2R1Y3QtaXRlbS1saWtlIHtcclxuICAgICAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgICB9XHJcbiAgICAgIC5wcm9kdWN0LWl0ZW0tc2hvdyB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIH1cclxuICAgICAgLnByb2R1Y3QtaXRlbS1pbWcge1xyXG4gICAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgICAgfVxyXG4gICAgICAucHJvZHVjdC1pdGVtLWJ0biB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yRGFyaztcclxuICAgICAgfVxyXG5cclxuICAgICAgLnByb2R1Y3QtaXRlbS1wcmljZS1vbGQge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgICAgfVxyXG4gICAgICAucHJvZHVjdC1pdGVtLWJ1dHRvbnMge1xyXG4gICAgICAgIC8vIG1hcmdpbi1ib3R0b206IDE3cHg7XHJcbiAgICAgIH1cclxuICAgICAgLnByb2R1Y3QtaXRlbS1kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIH1cclxuICAgICAgLnByb2R1Y3QtaXRlbS1vcGVuIHtcclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDE4MGRlZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbi5wcm9kdWN0LWJsdWUge1xyXG4gIGNvbG9yOiAjMWE2NmFlO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMxYTY2YWU7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxYTY2YWU7XHJcbiAgfVxyXG59XHJcbi5wcm9kdWN0LWdyZWVuIHtcclxuICBjb2xvcjogIzU1OWU1MztcclxuICBib3JkZXI6IDFweCBzb2xpZCAjNTU5ZTUzO1xyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU5ZTUzO1xyXG4gIH1cclxufVxyXG4ucHJvZHVjdC1wdXJwbGUge1xyXG4gIGNvbG9yOiAjN2QzZThjO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICM3ZDNlOGM7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM3ZDNlOGM7XHJcbiAgfVxyXG59XHJcbi5wcm9kdWN0LXJlZCB7XHJcbiAgY29sb3I6ICNiYzAwMDA7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2JjMDAwMDtcclxuICAmOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2JjMDAwMDtcclxuICB9XHJcbn1cclxuLnByb2R1Y3Qtb3JhbmdlIHtcclxuICBjb2xvcjogI2YyODcwNTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZjI4NzA1O1xyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjI4NzA1O1xyXG4gIH1cclxufVxyXG4ucHJvZHVjdC1jeWFuIHtcclxuICBjb2xvcjogIzgzZGJlNDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjODNkYmU0O1xyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODNkYmU0O1xyXG4gIH1cclxufVxyXG4ucHJvZHVjdC1wcmljZSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuLnByb2R1Y3QtaXRlbS1idG4tc3BhbiB7XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG59XHJcbi5wcm9kdWN0LWhlaWdodCB7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBoZWlnaHQ6IDU1OXB4O1xyXG4gIH1cclxuICAucHJvZHVjdC1pdGVtLWRlc2NyaXB0aW9uIHtcclxuICAgIHRvcDogODglO1xyXG4gIH1cclxufVxyXG4ucHJvZHVjdC1oZWlnaHQtYXV0byB7XHJcbiAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgJjpob3ZlciB7XHJcbiAgICAucHJvZHVjdC1pdGVtIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNzBweDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLy8gISBIdG1sIOKkteKkteKkteKkteKkteKkteKkteKkteKkteKkteKktVxyXG4vLyA8c3BhbiBjbGFzcz1cImNpcmNsZS1pbmZvXCI+XHJcbi8vIDxzdmcgY2xhc3M9XCJjaXJjbGUtaW5mby1zdmdcIj5cclxuLy8gICA8dXNlIHhsaW5rOmhyZWY9XCIuL2ltYWdlcy9zdmcvc3ltYm9scy5zdmcjY2lyY2xlLWluZm8taWNvblwiPjwvdXNlPlxyXG4vLyA8L3N2Zz5cclxuLy8gPHNwYW4gY2xhc3M9XCJjaXJjbGUtaW5mby10ZXh0XCI+XHJcbi8vICAg0JLQuNC90YLQvtCy0L7QuSDQutC+0LzQv9GA0LXRgdGB0L7RgCDQvNCw0YDQutC4IEExUiBCQi00RkMg0YDQtdGI0LDQtdGCINCy0LDQttC90YPRjiDQtNC70Y8g0L/RgNC+0LjQt9Cy0L7QtNGB0YLQstCwINC30LDQtNCw0YfRgyAtINGB0L3QsNCx0LbQsNC10YIg0L/QvdC10LLQvNC+0LjQvdGB0YLRgNGD0LzQtdC90YLRiyDQuCDQv9C90LXQstC80LDRgtC40YfQtdGB0LrQuNC1INGB0LjRgdGC0LXQvNGLINGB0LbQsNGC0YvQvCDQstC+0LfQtNGD0YXQvtC8LlxyXG4vLyA8L3NwYW4+XHJcbi8vIDwvc3Bhbj5cclxuXHJcbi5jaXJjbGUtaW5mbyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB6LWluZGV4OiAxO1xyXG4gIHRvcDogMnB4O1xyXG4gIGhlaWdodDogMTZweDtcclxuICB3aWR0aDogMTZweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xyXG5cclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2QzZDNkMztcclxuXHJcbiAgICAuY2lyY2xlLWluZm8tc3ZnIHtcclxuICAgICAgZmlsbDogI2ZmZjtcclxuICAgIH1cclxuICB9XHJcbiAgJi1zdmcge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDVweDtcclxuICAgIGhlaWdodDogOHB4O1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIGZpbGw6ICNkM2QzZDM7XHJcbiAgfVxyXG4gICYtdGV4dCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDMxOHB4O1xyXG4gICAgbGVmdDogMjNweDtcclxuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICBwYWRkaW5nOiAxN3B4IDE4cHggMTlweCAyNXB4O1xyXG4gICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMztcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgfVxyXG4gICY6aG92ZXIgJi10ZXh0IHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcbn1cclxuIiwiLy8gLmJ0bi1mZWVkYmFja1xyXG5cclxuLmJ0bi1mZWVkYmFjayB7XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG4gIGhlaWdodDogNDhweDtcclxuICBsaW5lLWhlaWdodDogNDhweDtcclxuICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4iLCJAbWVkaWEobWF4LXdpZHRoOjU3NnB4KSB7XHJcbiAgLmNvbC0wIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLmNhcmQtc3RpY2t5IHtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHotaW5kZXg6IDEwO1xyXG4gIGJveC1zaGFkb3c6IDBweCAwcHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgJi13cmFwcGVyIHtcclxuICAgIHBhZGRpbmc6IDEwcHggMHB4O1xyXG4gIH1cclxuICAmLWJ0biB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6ICRjb2xvclJlZDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgQG1lZGlhKG1heC13aWR0aDoxMDI0cHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDA7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjU3NnB4KSB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMTZweDtcclxuICAgIH1cclxuICAgICYtd3JhcHBlciB7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgQG1lZGlhKG1heC13aWR0aDo1NzZweCkge1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBlbmQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtaW1nIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgbWF4LXdpZHRoOiA0NnB4O1xyXG4gICAgICBsaW5lLWhlaWdodDogMDtcclxuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgQG1lZGlhKG1heC13aWR0aDo0MDBweCkge1xyXG4gICAgICAgICAgbWF4LXdpZHRoOiAzNnB4O1xyXG4gICAgICB9XHJcbiAgICAgIGltZyB7XHJcbiAgICAgICAgbWF4LWhlaWdodDogMzhweDtcclxuICAgICAgfVxyXG4gICAgICBAbWVkaWEobWF4LXdpZHRoOjEwMjRweCkge1xyXG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gICYtaXRlbSB7XHJcbiAgICAmLWltZyB7XHJcbiAgICAgIG1heC13aWR0aDogNzJweDtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAyNHB4O1xyXG4gICAgICBpbWcge1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDcycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtdGl0bGUge1xyXG4gICAgICBmb250LXNpemU6IHJlbSgxOCk7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDRweDtcclxuICAgIH1cclxuIFxyXG4gIH1cclxuICAuY2FyZC1pdGVtLXdyYXAge1xyXG4gICAgICBAbWVkaWEobWF4LXdpZHRoOjEwMjRweCkge1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIH1cclxuICAgICAgQG1lZGlhKG1heC13aWR0aDo1NzZweCkge1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xyXG4gICAgICB9XHJcbiAgfVxyXG4gIC5jYXJkLWl0ZW0tcmF0aW5nIHtcclxuICAgIEBtZWRpYShtYXgtd2lkdGg6MTAyNHB4KSB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICB9XHJcbiAgLmNhcmQtaXRlbS1wcmljZS1jdXJyZW5jeSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDE2KTtcclxuICAgIH1cclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDAwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxNSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5jYXJkLWl0ZW0tcHJpY2UtY3VycmVudCB7XHJcbiAgICBcclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDAwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgyNCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5jYXJkLWl0ZW0tY291bnRlciB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgfVxyXG4gXHJcbn1cclxuXHJcbi5jYXJkLWJyZWFja3BvaW50LW9wZW4ge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4iLCIudWktdWwge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgbGkge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCUsLTUwJSk7XHJcbiAgICAgICAgICAgIGxlZnQ6IC0xNXB4O1xyXG4gICAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDhweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA4cHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYzEwMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbiIsIi5jYXJkIHtcclxuICAmLWl0ZW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogODVweDtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJi10eHQge1xyXG4gICAgICBwYWRkaW5nOiAwIDAgMCAyNHB4O1xyXG4gICAgfVxyXG5cclxuICAgICYtaGVhZGxpbmUge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAyMnB4O1xyXG5cclxuICAgICAgJi10aXRsZSB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICBmb250LXNpemU6IHJlbSg0MCk7XHJcbiAgICAgICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogN3B4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjM2O1xyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDI4cHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMjJweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtY29kZSB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcblxyXG4gICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi1saW5rcyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMzg1cHgpIHtcclxuICAgICAgICAgIC5jYXJkLWl0ZW0tcmV2aWV3cyB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1yZXZpZXdzIHtcclxuICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgZm9udC1zaXplOiByZW0oMTYpO1xyXG4gICAgICBjb2xvcjogJGNvbG9yQmx1ZTtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xyXG4gICAgICBtYXJnaW4tbGVmdDogOHB4O1xyXG4gICAgICBsaW5lLWhlaWdodDogMDtcclxuXHJcbiAgICAgICY6aG92ZXIge1xyXG4gICAgICAgIG9wYWNpdHk6IDAuMzU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWZhdiB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xyXG4gICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICBmb250LXNpemU6IHJlbSgxNik7XHJcbiAgICAgIGNvbG9yOiAkY29sb3JCbHVlO1xyXG5cclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgb3BhY2l0eTogMC4zNTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaW1nIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdG9wOiA0cHg7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWNvbXBhcmlzb24ge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDE2KTtcclxuICAgICAgY29sb3I6ICRjb2xvckJsdWU7XHJcblxyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICBvcGFjaXR5OiAwLjM1O1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpbWcge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0b3A6IDRweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtY29udHJvbGxlciB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuXHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzODVweCkge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWFib3V0IHtcclxuICAgICAgcGFkZGluZzogMjRweCAyNHB4IDQ4cHggMzJweDtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICAgICAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwcHggMHB4O1xyXG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG5cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAuY29sLXhsLTU6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtc2xpZGVyIHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLWVsIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDM0OHB4O1xyXG4gICAgICAgIG1hcmdpbjogMHB4IGF1dG87XHJcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xyXG5cclxuICAgICAgICAuc3dpcGVyLmVsIHtcclxuICAgICAgICAgIHBhZGRpbmc6IDAgNXB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnN3aXBlci1idXR0b24tbmV4dCxcclxuICAgICAgICAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcclxuICAgICAgICAgIHRvcDogOTIlO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgICAgcmlnaHQ6IDA7XHJcblxyXG4gICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcclxuICAgICAgICAgIGxlZnQ6IDA7XHJcblxyXG4gICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3dpcGVyLWJ1dHRvbi1uZXh0OmFmdGVyIHtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICAgICAgICAgIGNvbG9yOiAjMDcxYzI4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnN3aXBlci1idXR0b24tcHJldjphZnRlciB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDI1cHg7XHJcbiAgICAgICAgICBjb2xvcjogIzA3MWMyODtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zd2lwZXItc2xpZGUge1xyXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMmE0NDU1O1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3dpcGVyLXNsaWRlIHtcclxuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICBsaW5lLWhlaWdodDogMDtcclxuICAgICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zd2lwZXItc2xpZGUtYWN0aXZlIHtcclxuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMyYTQ0NTU7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3dpcGVyLXdyYXBwZXIge1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAuY2FyZC1pdGVtLXNsaWRlci1lbCB7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi1wcmV2aWV3IHtcclxuICAgICAgICAuc3dpcGVyLWJ1dHRvbi1uZXh0LFxyXG4gICAgICAgIC5zd2lwZXItYnV0dG9uLXByZXYge1xyXG4gICAgICAgICAgdG9wOiA0MCU7XHJcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgICByaWdodDogMDtcclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zd2lwZXItYnV0dG9uLXByZXYge1xyXG4gICAgICAgICAgbGVmdDogMDtcclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zd2lwZXItYnV0dG9uLW5leHQ6YWZ0ZXIge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgICAgICAgY29sb3I6ICMwNzFjMjg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3dpcGVyLWJ1dHRvbi1wcmV2OmFmdGVyIHtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICAgICAgICAgIGNvbG9yOiAjMDcxYzI4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnN3aXBlci1zbGlkZSB7XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgLy8gbWF4LWhlaWdodDogMzI4cHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDMwcHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3dpcGVyLXBhZ2luYXRpb24ge1xyXG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcclxuICAgICAgICAgIHdpZHRoOiB2YXIoXHJcbiAgICAgICAgICAgIC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LXdpZHRoLFxyXG4gICAgICAgICAgICB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtc2l6ZSwgMjRweClcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgICBoZWlnaHQ6IHZhcihcclxuICAgICAgICAgICAgLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaGVpZ2h0LFxyXG4gICAgICAgICAgICB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtc2l6ZSwgMnB4KVxyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlIHtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyYTQ0NTU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1jYXB0aW9uIHtcclxuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgZm9udC1zaXplOiByZW0oMjIpO1xyXG4gICAgICBjb2xvcjogIzAwMDAwMDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMThweDtcclxuICAgIH1cclxuXHJcbiAgICAmLXNwZWNpZmljYXRpb25zIHtcclxuICAgICAgJi1kZXNjIHtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2QzZDNkMztcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMnB4O1xyXG5cclxuICAgICAgICAudWktYnRuIHtcclxuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xyXG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgICAgcGFkZGluZzogMCAxMnB4O1xyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDM4cHg7XHJcblxyXG4gICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtdHh0IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xyXG5cclxuICAgICAgICAmOm50aC1sYXN0LWNoaWxkKDIpIHtcclxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOm50aC1sYXN0LWNoaWxkKC1uICsgMykgLmNhcmQtaXRlbS1zcGVjaWZpY2F0aW9ucy1zdWJ0aXRsZSB7XHJcbiAgICAgICAgICBjb2xvcjogIzFhNjZhZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtY2FwdGlvbiB7XHJcbiAgICAgICAgd2lkdGg6IDYyJTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1zdWJ0aXRsZSB7XHJcbiAgICAgICAgd2lkdGg6IDM4JTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtc2VydmljZXMge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDQ4cHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtZGVzYyB7XHJcbiAgICAgICAgLnVpLWJ0biB7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgICAgICBwYWRkaW5nOiA5cHg7XHJcbiAgICAgICAgICBsaW5lLWhlaWdodDogMDtcclxuXHJcbiAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi10eHQge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLXN1YnRpdGxlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLWNvbnRlbnQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDE2cHg7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtd2FycmFudHkge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE5cHg7XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNjBweCkge1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAudHh0IHtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogN3B4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmOm50aC1jaGlsZCgzKSB7XHJcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi1idG4ge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGdhcDogOHB4O1xyXG5cclxuICAgICAgICBzdmcge1xyXG4gICAgICAgICAgd2lkdGg6IDMycHg7XHJcbiAgICAgICAgICBoZWlnaHQ6IDMycHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzcGFuIHtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMzYwcHgpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnNlcnZpY2VzLWJ0biB7XHJcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xyXG4gICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgLy8gaGVpZ2h0OiA4MHB4O1xyXG4gICAgICAgICAgcGFkZGluZzogMTJweCAyNHB4IDEycHggMjRweDtcclxuICAgICAgICAgIHdpZHRoOiAzMyU7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2Utb3V0O1xyXG5cclxuICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcblxyXG4gICAgICAgICAgICBzdmcge1xyXG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2Utb3V0O1xyXG4gICAgICAgICAgICAgIGZpbGw6ICMyYTQ0NTU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICAgIGNvbG9yOiAjMmE0NDU1O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgc3ZnIHtcclxuICAgICAgICAgICAgZmlsbDogI2QzZDNkMztcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgycHgpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMzYwcHgpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAuaW1nLWJ0biB7XHJcbiAgICAgICAgICAgIC5mb290ZXItYm90dG9tLXNvY2lhbHMtc3ZnIHtcclxuICAgICAgICAgICAgICB3aWR0aDogNDJweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtbW9yZS1pbmZvIHtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICAgICAgYm9yZGVyLXJhZGl1czogMHB4IDBweCA4cHggOHB4O1xyXG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC50YWJzIHtcclxuICAgICAgICAmLW5hdiB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2QzZDNkMztcclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgbGkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDE2KTtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjOTk5O1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IHJlbSgxOCk7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xyXG5cclxuICAgICAgICAgICAgJi5hY3RpdmUge1xyXG4gICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMmE0NDU1O1xyXG4gICAgICAgICAgICAgIGNvbG9yOiAjMmE0NDU1O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTE3MnB4KSB7XHJcbiAgICAgICAgICAgICAgcGFkZGluZzogMTVweCA1cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtaXRlbSB7XHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtaXRlbXMge1xyXG4gICAgICAgICAgLmFjY29yZGlvbi1pdGVtcy10aXRsZSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogNTZweDtcclxuICAgICAgICAgICAgICBwYWRkaW5nOiAxNnB4IDA7XHJcbiAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLmFjY29yZGlvbi1jb250ZW50IHtcclxuICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYuYWN0aXZlIHtcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICBwYWRkaW5nOiAyNHB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLnRhYjIge1xyXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAudGFibGUge1xyXG4gICAgICAgICAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgYm9yZGVyOiAwcHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcblxyXG4gICAgICAgICAgICAmLmJvdHRvbSB7XHJcbiAgICAgICAgICAgICAgdGQge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxuICAgICAgICAgICAgICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aCB7XHJcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgICAgICAgIHRleHQtYWxpZ246IHN0YXJ0O1xyXG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMzJweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGQge1xyXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDE0cHggMTBweDtcclxuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuXHJcbiAgICAgICAgICAgICAgLnRvb2x0aXAge1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDE2cHg7XHJcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgICAgICAgICAgJi1ib3gge1xyXG4gICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjUyO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAudG9vbHRpcCAudG9vbHRpcHRleHQge1xyXG4gICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcclxuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMjBweCAxNnB4O1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgICAgIHRvcDogMTM1JTtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IC0yOTAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC02MHB4O1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIC50b29sdGlwOmhvdmVyIC50b29sdGlwdGV4dCB7XHJcbiAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICY6bnRoLWNoaWxkKDEpIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE0cHggMCAxNHB4IDMycHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDMycHg7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgJjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICMxYTY2YWU7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgdGJvZHkgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICB0Ym9keSB0cjpudGgtY2hpbGQob2RkKSB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLWl0ZW0ge1xyXG4gICAgICAgICAgcGFkZGluZzogMzJweCAzOXB4IDMycHggMzdweDtcclxuXHJcbiAgICAgICAgICAmLnRhYmxlIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMzBweCAwIDAgMDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmLnZpZGVvIHtcclxuICAgICAgICAgICAgcGFkZGluZzogNDBweCAxNnB4O1xyXG5cclxuICAgICAgICAgICAgLnZpZGVvLWNvbnRlbnQge1xyXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDAgMTJweDtcclxuICAgICAgICAgICAgICBtYXJnaW46IDAgMTJweDtcclxuXHJcbiAgICAgICAgICAgICAgJi1ib3gge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgICAgICAgICAgICAgICAgLnZpZGVvLWNvbnRlbnQge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCAwIDI1cHggMDtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJi10ZXh0IHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjRweDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmLXRpdGxlIHtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICYtbGlzdCB7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuXHJcbiAgICAgICAgICAgIGxpIHtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xyXG5cclxuICAgICAgICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogLTE1cHg7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDlweDtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA4cHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjMTAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLmRvYyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDExNzBweCkge1xyXG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgICAgICAgICAmLXBpY3R1cmUge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5jb2wtNyB7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAuY29sLTUge1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLXBpY3R1cmUge1xyXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDE2cHg7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi1yZXZpZXdzIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDg2cHg7XHJcbiAgICAuY2FyZC1pdGVtLXJhdGluZyB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAucmV2aWV3cy51aS1idG4uYWxsIHtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgfVxyXG4gICAgJi1idG4ge1xyXG4gICAgICBsaW5lLWhlaWdodDogMDtcclxuICAgIH1cclxuXHJcbiAgICAuc3dpcGVyLW5leHQsXHJcbiAgICAuc3dpcGVyLXJ0bCAuc3dpcGVyLXByZXYge1xyXG4gICAgICB3aWR0aDogNDBweDtcclxuICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICBib3gtc2hhZG93OiAwcHggMHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHotaW5kZXg6IDk5OTtcclxuICAgICAgdG9wOiA0NiU7XHJcbiAgICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgICAvKiBwYWRkaW5nOiAxMHB4OyAqL1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIHBhZGRpbmc6IDEwcHggMDtcclxuXHJcbiAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpbWcge1xyXG4gICAgICAgIHdpZHRoOiA4cHg7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5zd2lwZXItcHJldixcclxuICAgIC5zd2lwZXItcnRsIC5zd2lwZXItbmV4dCB7XHJcbiAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgei1pbmRleDogOTk5O1xyXG4gICAgICB0b3A6IDQ2JTtcclxuICAgICAgbGVmdDogMjBweDtcclxuICAgICAgLyogcGFkZGluZzogMTBweDsgKi9cclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBwYWRkaW5nOiAxMHB4IDA7XHJcblxyXG4gICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgfVxyXG5cclxuICAgICAgaW1nIHtcclxuICAgICAgICB3aWR0aDogOHB4O1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5zd2lwZXIucmV2aWV3cyB7XHJcbiAgICAgIHBhZGRpbmc6IDIwcHggMTBweDtcclxuXHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICAvLyBvdmVyZmxvdzogc2Nyb2xsO1xyXG4gICAgICAgIG92ZXJmbG93LXg6IGF1dG87XHJcbiAgICAgICAgb3ZlcmZsb3cteTogaGlkZGVuO1xyXG4gICAgICAgIC8vIHBhZGRpbmc6IDIwcHggODBweCAyMHB4IDA7XHJcbiAgICAgICAgLy8gbWFyZ2luLXJpZ2h0OiAtMjBweDtcclxuICAgICAgICAvLyBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDEycHg7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMnB4O1xyXG5cclxuICAgICAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5zd2lwZXItYnV0dG9uLWRpc2FibGVkIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIG9wYWNpdHk6IDAuMzU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1oZWFkbGluZSB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG5cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMnB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnN3aXBlci1idXR0b24tbmV4dCB7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnN3aXBlci1idXR0b24tcHJldiB7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi10eHQge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBAbWVkaWEgKG1heC13aWR0aDogMzQ1cHgpIHtcclxuICAgICAgLy8gICAvLyBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAvLyAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICAvLyB9XHJcblxyXG4gICAgICAmLXRpdGxlIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDMycHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDMzNXB4KSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzcGFuIHtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG5cclxuICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzMzVweCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuY2FyZC1pdGVtLXJhdGluZy12YWx1ZSB7XHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMzM1cHgpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLmNhcmQtaXRlbS1yYXRpbmcge1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzMzVweCkge1xyXG4gICAgICAgICAgcGFkZGluZy10b3A6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnJldmlld3Mge1xyXG4gICAgICAmLnVpLWJ0biB7XHJcbiAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICMyYTQ0NTU7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcclxuICAgICAgICAgIG1hcmdpbi10b3A6IDI2cHg7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYuYWxsIHtcclxuICAgICAgICAgIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgICAgICAgICBjb2xvcjogIzAwMDtcclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBtYXJnaW46IDE2cHggYXV0bztcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWNvbnRlbnQge1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG5cclxuICAgICAgJi1oZWFkZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDIwcHggMjRweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLXR4dCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1uYW1lIHtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1kYXRhIHtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLWJvZHkge1xyXG4gICAgICAgIHBhZGRpbmc6IDIwcHggMjRweDtcclxuXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICBjb2xvcjogIzFhNjZhZTtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcblxyXG4gICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuMzU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLXRleHQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtdGl0bGUge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLWRlc2Mge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uY2FyZC1pbmZvLW1lZGlhIHtcclxuICAudGFicyB7XHJcbiAgICAmLW5hdiB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2QzZDNkMztcclxuXHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBsaSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBhIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTYpO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgY29sb3I6ICM5OTk7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxOCk7XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcblxyXG4gICAgICAgICYuYWN0aXZlIHtcclxuICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMmE0NDU1O1xyXG4gICAgICAgICAgY29sb3I6ICMyYTQ0NTU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTE3MnB4KSB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4IDVweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWl0ZW0ge1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1pdGVtcyB7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcblxyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNTVweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgLmFjY29yZGlvbjpudGgtbGFzdC1jaGlsZCgtbiArIDIpIC5hY2NvcmRpb24taXRlbXMtdGl0bGUge1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDAgMCAxMHB4IDEwcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5hY2NvcmRpb24ge1xyXG4gICAgICAgICYudGFiNCB7XHJcbiAgICAgICAgICAuYWNjb3JkaW9uLWl0ZW1zLXRpdGxlIHtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5hY2NvcmRpb24taXRlbXMtdGl0bGUge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAuYnRuLWFjYyB7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICByaWdodDogMjRweDtcclxuICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTUwJSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgaGVpZ2h0OiA1NnB4O1xyXG4gICAgICAgICAgcGFkZGluZzogMTZweCAwO1xyXG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLmFjY29yZGlvbi1jb250ZW50IHtcclxuICAgICAgICBwYWRkaW5nOiAxNnB4O1xyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi5hY3RpdmUge1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICBwYWRkaW5nOiAyNHB4O1xyXG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLnRhYjIge1xyXG4gICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5kb2Mge1xyXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDY4MHB4KSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgICAgICAgICAmLXBpY3R1cmUge1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtbGluayB7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC52aWRlby1jb250ZW50IHtcclxuICAgICAgICAgIHBhZGRpbmc6IDAgMTJweDtcclxuICAgICAgICAgIG1hcmdpbjogMCAxMnB4O1xyXG5cclxuICAgICAgICAgICYtYm94IHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC50YWJsZSB7XHJcbiAgICAgICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBib3JkZXI6IDBweDtcclxuICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG5cclxuICAgICAgICAmLmJvdHRvbSB7XHJcbiAgICAgICAgICB0ZCB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxuICAgICAgICAgICAgJjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aCB7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICAgIHRleHQtYWxpZ246IHN0YXJ0O1xyXG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAzMnB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGQge1xyXG4gICAgICAgICAgcGFkZGluZzogMTJweCAxMHB4O1xyXG4gICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcblxyXG4gICAgICAgICAgICAmOm50aC1jaGlsZCgxKSB7XHJcbiAgICAgICAgICAgICAgcGFkZGluZzogMTBweCAwIDAgMzJweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDAgMCAxMHB4IDMycHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAudG9vbHRpcCB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMTZweDtcclxuXHJcbiAgICAgICAgICAgICYtYm94IHtcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuY2lyY2xlLWluZm8tc3ZnIHtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDVweDtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDhweDtcclxuICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgICAgICAgZmlsbDogI2QzZDNkMztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC50b29sdGlwIC50b29sdGlwdGV4dCB7XHJcbiAgICAgICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgICAgICAgICAgcGFkZGluZzogMjBweCAxNnB4O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgICAgIHRvcDogMTM1JTtcclxuICAgICAgICAgICAgbGVmdDogLTI5MCU7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMTMwcHg7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAudG9vbHRpcDpob3ZlciAudG9vbHRpcHRleHQge1xyXG4gICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICY6bnRoLWNoaWxkKDEpIHtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAzMnB4O1xyXG4gICAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xyXG4gICAgICAgICAgICAmOm50aC1jaGlsZCgyKSB7XHJcbiAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAzMnB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgICBjb2xvcjogIzFhNjZhZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRib2R5IHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGJvZHkgdHI6bnRoLWNoaWxkKG9kZCkge1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWl0ZW0ge1xyXG4gICAgICBwYWRkaW5nOiAzMnB4IDM5cHggMzJweCAzN3B4O1xyXG5cclxuICAgICAgJi50YWJsZSB7XHJcbiAgICAgICAgcGFkZGluZzogMzBweCAwIDAgMDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi10ZXh0IHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLXRpdGxlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1saXN0IHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcblxyXG4gICAgICAgIGxpIHtcclxuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJweDtcclxuXHJcbiAgICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgbGVmdDogLTE1cHg7XHJcbiAgICAgICAgICAgIHRvcDogOXB4O1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICB3aWR0aDogOHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDhweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjMTAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gWW91VHViZVxyXG5cclxuLnBvcHVwLXlvdXR1YmUge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgJi1idG4ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6ICNiYzAwMDA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICB3aWR0aDogMTI0cHg7XHJcbiAgICBoZWlnaHQ6IDY0cHg7XHJcbiAgICBpbWcge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIG1heC1oZWlnaHQ6IDMycHg7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgICB0b3A6IDUwJTtcclxuICAgICAgbGVmdDogNTAlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLnBvcHVwLXlvdXR1YmUge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgJi13cmFwcGVyIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIycHg7XHJcbiAgfVxyXG4gICYtYnRuIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYmMwMDAwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgd2lkdGg6IDEyNHB4O1xyXG4gICAgaGVpZ2h0OiA2NHB4O1xyXG4gICAgaW1nIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBtYXgtaGVpZ2h0OiAzMnB4O1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgdG9wOiA1MCU7XHJcbiAgICAgIGxlZnQ6IDUwJTtcclxuICAgIH1cclxuICB9XHJcbiAgJi10d28ge1xyXG4gICAgLnBvcHVwLXlvdXR1YmUtYnRuIHtcclxuICAgICAgd2lkdGg6IDgwcHg7XHJcbiAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgaW1nIHtcclxuICAgICAgICBtYXgtaGVpZ2h0OiAyMHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ucG9wdXAtcmV2Lm1mcC1pbWFnZS1ob2xkZXIgLm1mcC1jbG9zZSxcclxuLm1mcC1pZnJhbWUtaG9sZGVyIC5tZnAtY2xvc2Uge1xyXG4gIHJpZ2h0OiAxMnB4O1xyXG4gIHRleHQtYWxpZ246IGluaXRpYWw7XHJcbiAgcGFkZGluZy1yaWdodDogMDtcclxuICB3aWR0aDogaW5pdGlhbDtcclxufVxyXG4ubWZwLWlmcmFtZS1ob2xkZXIgLm1mcC1jbG9zZSB7XHJcbiAgdG9wOiAwO1xyXG59XHJcbiIsIkBtZWRpYSAobWluLXdpZHRoOiAzMDBweCkge1xyXG4gIC5jb2wtdmlkZW8tMzAwIHtcclxuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XHJcbiAgICBmbGV4OiAwIDAgMzEycHg7XHJcbiAgICBtYXgtd2lkdGg6IDMxMnB4O1xyXG4gIH1cclxufVxyXG5cclxuLmNhdGFsb2cge1xyXG4gIC5jYXJkLWludGVyZXN0LXdyYXAge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDYsIDFmcik7XHJcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyLCAxZnIpO1xyXG4gICAgY29sdW1uLWdhcDogMjRweDtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAtMTVweDtcclxuICAgICAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICAgICAgb3ZlcmZsb3cteDogYXV0bztcclxuICAgICAgLnJvdzpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgZmxleC13cmFwOiBub3dyYXA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgLmNhcmQtaW50ZXJlc3QtaXRlbSB7XHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMjVweCAxOHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICYtaW1nIHtcclxuICAgICAgbWluLXdpZHRoOiBpbml0aWFsO1xyXG4gICAgICBtYXgtd2lkdGg6IDk1cHg7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAuY2FyZC1pbnRlcmVzdC1pdGVtLXR4dCB7XHJcbiAgICAgICAgLy8gYmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbDtcclxuICAgICAgICBjb2xvcjogIzJhNDQ1NTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAuY2FyZC1pbnRlcmVzdC10aXRsZSB7XHJcbiAgICBmb250LXNpemU6IHJlbSg0MCk7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcclxuICAgICAgZm9udC1zaXplOiByZW0oMzIpO1xyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDIyKTtcclxuICAgIH1cclxuICB9XHJcbiAgLnBvcHVwLXlvdXR1YmUtd3JhcHBlciB7XHJcbiAgICBwIHtcclxuICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi1zdGlja2VycyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1NXB4O1xyXG4gICAgJi13cmFwIHtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGEge1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICB9XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgb3ZlcmZsb3cteDogYXV0bztcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC0xNXB4O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC51aS1zdGlja2VyIHtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMmE0NDU1O1xyXG4gICAgICAgIGNvbG9yOiAjMmE0NDU1O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWJ0biB7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMHB4O1xyXG5cclxuICAgICAgJi10ZXh0IHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIH1cclxuICAgICAgJi1pbWcge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICAgICAgICBtYXgtd2lkdGg6IDEwcHg7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIG1heC1oZWlnaHQ6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAuc3RpY2tlcl9pdGVtIHtcclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi1wcm9kdWN0cyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0NnB4O1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbiAgICB9XHJcbiAgICAmLXRpdGxlIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMjJweDtcclxuICAgICAgZm9udC1zaXplOiByZW0oMzIpO1xyXG4gICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgyOCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtc3RpY2tlcnMge1xyXG4gICAgICAudWktc3RpY2tlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmMDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtd3JhcCB7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWJhbm5lciB7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMzFweDtcclxuICAgIH1cclxuICAgICYtc2VhcmNoIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIHBhZGRpbmc6IDBweCA1cHg7XHJcbiAgICAgIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgICAgIGhlaWdodDogNTZweDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDU2cHg7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICBjb2xvcjogIzg0ODQ4NDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMzNweDtcclxuICAgICAgc3BhbiB7XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtZmllbGQge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAzM3B4O1xyXG4gICAgICAmLXRpdGxlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xyXG4gICAgICB9XHJcbiAgICAgICYtY29udGFpbmVyIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gICAgICB9XHJcbiAgICAgICYtbGFiZWwge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgIH1cclxuICAgICAgJi1pbnB1dCB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDBweCAxNnB4O1xyXG4gICAgICAgIGNvbG9yOiAjZDNkM2QzO1xyXG4gICAgICAgICY6OnBsYWNlaG9sZGVyIHtcclxuICAgICAgICAgIGNvbG9yOiAjZDNkM2QzO1xyXG4gICAgICAgIH1cclxuICAgICAgICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcclxuICAgICAgfVxyXG4gICAgICAmLWNoZWNrYm94IHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjODQ4NDg0O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgfVxyXG4gICAgICAmLWJ0biB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICAgIGhlaWdodDogMzJweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMzJweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xyXG4gICAgICB9XHJcbiAgICAgICYtdGV4dCB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB9XHJcbiAgICAgICYtaW1nIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgIHdpZHRoOiAxMnB4O1xyXG4gICAgICAgIG1heC13aWR0aDogMTJweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi9pbWFnZXMvaWNvbnMvZ3JlZW4tY3Jvc3Muc3ZnKTtcclxuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1zbGlkZXIge1xyXG4gICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICBiYWNrZ3JvdW5kOiAjZDNkM2QzO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICYtcHJvZ3Jlc3Mge1xyXG4gICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAyNSU7XHJcbiAgICAgICAgcmlnaHQ6IDI1JTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgYmFja2dyb3VuZDogIzA3MWMyODtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1yYW5nZSB7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgJi1pbnB1dCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRvcDogLTRweDtcclxuICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1iYXIge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDM1cHg7XHJcbiAgICAgIC5jYXRhbG9nLXByb2R1Y3RzLWZpbHRlci1maWx0ZXJzIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICAuY2F0YWxvZy1wcm9kdWN0cy1maWx0ZXItdHh0IHtcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5jYXRhbG9nLXByb2R1Y3RzLWZpbHRlci1zZWN0aW9uIHtcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5jYXRhbG9nLXByb2R1Y3RzLWZpbHRlci1maWx0ZXJzIHtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWZpbHRlciB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MzBweCkge1xyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAuY2F0YWxvZy1wcm9kdWN0cy1maWx0ZXItcG9wdWxhciB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMzVweDtcclxuICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBhcHBlYXJhbmNlOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiAjMDAwMDAwYTg7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTYpO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvaWNvbnMvY2F0YWxvZy1wcm9kdWN0cy1hcnJvd3Muc3ZnXCIpIG5vLXJlcGVhdFxyXG4gICAgICAgICAgcmlnaHQ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgMnB4IGNlbnRlcjtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIG9wYWNpdHk6IDAuNztcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XHJcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIC8vICYtdHh0IHtcclxuICAgICAgLy8gICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICAgICAgLy8gICBvcGFjaXR5OiAwLjc7XHJcbiAgICAgIC8vIH1cclxuICAgICAgJi1zZWN0aW9uIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAtNHB4O1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1maWx0ZXJzIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIG1hcmdpbi1yaWdodDogMTJweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGltZyB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAuZmlsdGVyLWltZyB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLXBhZ2ludGFpb24ge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA0NXB4O1xyXG4gICAgICAmLW1vcmUge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDQ4cHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGNvbG9yOiAjMDAwMDAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtYnRucyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMTZweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJi1idG4ge1xyXG4gICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogNDBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAmLWRvdHMge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG4gICAgICAgIC5wYWdpbmF0aW9uLWRvdHMge1xyXG4gICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIHdpZHRoOiA0cHg7XHJcbiAgICAgICAgICBoZWlnaHQ6IDRweDtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgJjo6YmVmb3JlLFxyXG4gICAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgbGVmdDogMTRweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgbGVmdDogLTEwcHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWJ0biB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xyXG4gICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAzOHB4O1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgICB9XHJcbiAgICAmLXJlbmlldiB7XHJcbiAgICAgIGhlaWdodDogNTZweDtcclxuICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogOHB4O1xyXG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogOHB4O1xyXG5cclxuICAgICAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiKDAgMCAwIC8gMTAlKTtcclxuICAgICAgJi1zdmcge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0b3A6IDNweDtcclxuICAgICAgICB3aWR0aDogMjZweDtcclxuICAgICAgICBoZWlnaHQ6IDIycHg7XHJcbiAgICAgICAgZmlsbDogI2QzZDNkMztcclxuICAgICAgfVxyXG4gICAgICAuY2FsY3VsYXRvci1idG4ge1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiA1NnB4O1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBwYWRkaW5nOiAwIDVweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNmNWY1ZjU7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBzcGFuIHtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIC5jYWxjdWxhdG9yLXJlbG9hZCB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogaW5pdGlhbDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnByb2R1Y3QtaXRlbSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDI0cHgpO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgfVxyXG4gIH1cclxuICAmLWluZm8ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTRweDtcclxuICAgICYtdGl0bGUge1xyXG4gICAgICBmb250LXNpemU6IHJlbSgzMik7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDIxcHg7XHJcbiAgICB9XHJcbiAgICAmLXRleHQge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xyXG4gICAgfVxyXG4gICAgJi1zdWJ0aXRsZSB7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDJweDtcclxuICAgIH1cclxuICAgICYtYnRuIHtcclxuICAgICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgICBsaW5lLWhlaWdodDogMzNweDtcclxuICAgICAgcGFkZGluZzogMHB4IDE2cHg7XHJcbiAgICB9XHJcbiAgICAmLWxpc3Qge1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDI3cHg7XHJcbiAgICAgIGxpIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgbGVmdDogLTE1cHg7XHJcbiAgICAgICAgICB0b3A6IDlweDtcclxuICAgICAgICAgIHdpZHRoOiA4cHg7XHJcbiAgICAgICAgICBoZWlnaHQ6IDhweDtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmMxMDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtaGlkZGVuIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gICYtcXVlc3Rpb24tYW5kLWFjdGljbGVzIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDYwcHg7XHJcbiAgfVxyXG4gICYtcXVlc3Rpb24ge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA0OHB4O1xyXG4gICAgfVxyXG4gICAgJi10aXRsZSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDI2cHg7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDMyKTtcclxuICAgIH1cclxuICAgICYtaXRlbSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG5cclxuICAgICAgJi10aXRsZSB7XHJcbiAgICAgICAgcGFkZGluZzogMTdweCAwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDU2cHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgIC5xdWVzdGlvbi14IHtcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAlLCAtNTAlKTtcclxuICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgbGVmdDogMjRweDtcclxuICAgICAgICAgIHdpZHRoOiAxNnB4O1xyXG4gICAgICAgICAgaGVpZ2h0OiAxNnB4O1xyXG4gICAgICAgICAgJjpiZWZvcmUsXHJcbiAgICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBsZWZ0OiA4cHg7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiIFwiO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDE2cHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAycHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmMxMDA7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAmLXRleHQge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZzogMTVweCAxNnB4IDI3cHggMHB4O1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogNTZweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAmLXZpZGVvIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDg1cHg7XHJcbiAgICAmLXdyYXAge1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMjBweDtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAucm93IHtcclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgIGZsZXgtd3JhcDogbm93cmFwO1xyXG4gICAgICAgIG92ZXJmbG93LXg6IGF1dG87XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC5yb3c6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICAgICAgd2lkdGg6IDA7XHJcbiAgICB9XHJcbiAgICAucm93IHtcclxuICAgICAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xyXG4gICAgfVxyXG4gICAgLnJvdyB7XHJcbiAgICAgIG92ZXJmbG93OiAtbW96LXNjcm9sbGJhcnMtbm9uZTtcclxuICAgIH1cclxuICAgICYtaXRlbSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgfVxyXG4gICAgICAmLXByZXZpZXcge1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDlweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMDtcclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgbWF4LWhlaWdodDogMTc2cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtdGV4dCB7XHJcbiAgICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAmLWJyYW5kcyB7XHJcbiAgICAmLWhlYWRlciB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgICB9XHJcbiAgICAmLW1haW4ge1xyXG4gICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpO1xyXG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyLCAxZnIpO1xyXG4gICAgICBncmlkLWdhcDogMjRweDtcclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogLTE1cHg7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICAgICAgICBvdmVyZmxvdy14OiBhdXRvO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXRpdGxlIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICBmb250LXNpemU6IHJlbSgzMik7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDIyKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1idG4ge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmZlZWRiYWNrX2xpbmsge1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA1NnB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWl0ZW0ge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDE2cHgpO1xyXG4gICAgICBwYWRkaW5nOiAxNnB4IDMwcHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcblxyXG4gICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgIHRyYW5zaXRpb246IDAuM3MgZWFzZSBhbGw7XHJcbiAgICAgICY6aG92ZXIge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgICAgfVxyXG4gICAgICAmLWltZyB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxNDBweDtcclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgbWF4LWhlaWdodDogNDhweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgJi1hcnRpY2xlcyB7XHJcbiAgICAmLXRpdGxlIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMjRweDtcclxuICAgIH1cclxuICAgICYtaXRlbSB7XHJcbiAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgICAgJi1pbWcge1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE3cHg7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIG1heC1oZWlnaHQ6IDE5MnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAmLWNvbnRlbnQge1xyXG4gICAgICAgIHBhZGRpbmc6IDBweCAyNHB4IDIwcHggMjRweDtcclxuICAgICAgfVxyXG4gICAgICAmLWRhdGUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDExcHg7XHJcbiAgICAgIH1cclxuICAgICAgJi10aXRsZSB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgICAgIH1cclxuICAgICAgJi10ZXh0IHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTdweDtcclxuICAgICAgfVxyXG4gICAgICAmLWxpbmsge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvckJsdWU7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgLmNoZWNrYm94IHtcclxuICAgIC8vICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICYtaW5wdXQge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAmOmNoZWNrZWQgKyAuY2hlY2tib3gtbGFiZWw6OmJlZm9yZSB7XHJcbiAgICAgICAgLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JDeWFuO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwNzFjMjg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICB9XHJcbiAgICAgICY6Y2hlY2tlZCArIC5jaGVja2JveC1sYWJlbDo6YWZ0ZXIge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtbGFiZWwge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIC8vIHZlcnRpY2FsLWFsaWduOiBzdWI7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMjhweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB3aWR0aDogMTZweDtcclxuICAgICAgICBoZWlnaHQ6IDE2cHg7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U1ZWRmNztcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAycHg7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICB9XHJcbiAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAxOHB4O1xyXG4gICAgICAgIGhlaWdodDogMThweDtcclxuXHJcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL2ljb25zL2NoZWNrYm94LWFycm93LnN2Z1wiKSBuby1yZXBlYXQ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiAxMHB4IDhweDtcclxuICAgICAgICAvLyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMXB4O1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgei1pbmRleDogMjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAuY29udGFjdCB7XHJcbiAgICBwYWRkaW5nOiA2NHB4IDBweDtcclxuICAgIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgICAmLWl0ZW0ge1xyXG4gICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDIwcHgpO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XHJcbiAgICAgIHBhZGRpbmc6IDM1cHg7XHJcbiAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAubWFpbi1zZWFyY2gtZm9ybSB7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtdGl0bGUge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMjIpO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDlweDtcclxuXHJcbiAgICAgICAgbWF4LXdpZHRoOiAzNzVweDtcclxuICAgICAgICAmLW1haWwge1xyXG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjdweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJi10ZXh0IHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxNik7XHJcbiAgICAgICAgY29sb3I6ICM4NDg0ODQ7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjdweDtcclxuICAgICAgfVxyXG4gICAgICAmLWluZm8ge1xyXG4gICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgY29sb3I6ICMxYTY2YWU7XHJcbiAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtYmcge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICByaWdodDogLTRweDtcclxuICAgICAgICBib3R0b206IC02cHg7XHJcbiAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDY4MHB4KSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLm1haW4tc2VhcmNoLWZvcm0ge1xyXG4gICAgICBtYXgtd2lkdGg6IDM1MnB4O1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxN3B4O1xyXG4gICAgfVxyXG4gICAgLm1haW4tc2VhcmNoLWJ0biB7XHJcbiAgICAgIGJhY2tncm91bmQ6ICRjb2xvclJlZDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuLmNhbGN1bGF0b3Ige1xyXG4gIHBhZGRpbmctdG9wOiA1NHB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgbWFyZ2luLWJvdHRvbTogNjRweDtcclxuICAmLXRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogcmVtKDMyKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDIyKTtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMzRweDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgc3BhbiB7XHJcbiAgICAgIGNvbG9yOiAkY29sb3JCbHVlO1xyXG4gICAgfVxyXG4gIH1cclxuICAmLWNvdW50ZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDVweDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDQ1cHgpO1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICAgIGhlaWdodDogY2FsYygxMDAlIC0gMjBweCk7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICB9XHJcbiAgICAmLXRpdGxlIHtcclxuICAgICAgZm9udC1mYW1pbHk6ICRmZlBvcHBpbnM7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDE4KTtcclxuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG4gICAgfVxyXG4gICAgJi10ZXh0IHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMjFweDtcclxuICAgIH1cclxuICAgICYtZmllbGQge1xyXG4gICAgICBpbnB1dCB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgIHdpZHRoOiAxNDRweDtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMTZweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAmLXdyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDMycHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gICYtdG90YWwge1xyXG4gICAgZm9udC1zaXplOiByZW0oODApO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuXHJcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgJi1zdWJ0ZXh0IHtcclxuICAgICAgZm9udC1zaXplOiByZW0oMTgpO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHJpZ2h0OiAxMnB4O1xyXG4gICAgfVxyXG4gIH1cclxuICAmLWJ0biB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogOHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogOHB4O1xyXG4gICAgcGFkZGluZzogMHB4IDc0cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3JEYXJrO1xyXG4gIH1cclxuICAmLWJ0bi13cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG4gICYtcmVsb2FkIHtcclxuICAgIGJhY2tncm91bmQ6ICRjb2xvckRhcms7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogOHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDhweDtcclxuICAgIHBhZGRpbmc6IDAgMTVweDtcclxuICAgICYtaW1nIHtcclxuICAgICAgbWF4LXdpZHRoOiAyNnB4O1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgICYtc3ZnIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdG9wOiAzcHg7XHJcbiAgICAgICAgZmlsbDogI2ZmZjtcclxuICAgICAgICB3aWR0aDogMjZweDtcclxuICAgICAgICBoZWlnaHQ6IDIycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuLy8gU3R5bGUgZm9yIHN0aWNrZXIgaGlkZVxyXG4uc3RpY2tlci1oaWRkZW4ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLnN0aWNrZXItaGlkZGVuLW9wZW4ge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG4uc3RpY2tlci1oaWRkZW4tb3BlbkIge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbi8vIENhdGFsb2ctZmllbGQgc3R5bGVcclxuXHJcbi5jYXRhbG9nLXByb2R1Y3RzLXByaWNlLWlucHV0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBnYXA6IDhweDtcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG4uY2F0YWxvZy1wcm9kdWN0cy1wcmljZS1pbnB1dCAuY2F0YWxvZy1wcm9kdWN0cy1wcmljZS1maWVsZCB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGhlaWdodDogNDBweDtcclxufVxyXG5cclxuLmNhdGFsb2ctcHJvZHVjdHMtcHJpY2UtZmllbGQgaW5wdXQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBwYWRkaW5nOiAwcHggMTZweDtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGZvbnQtc2l6ZTogMTlweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICBjb2xvcjogI2QzZDNkMztcclxuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG4uY2F0YWxvZy1wcm9kdWN0cy1zbGlkZXIgLnByb2dyZXNzIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJhY2tncm91bmQ6ICMwNzFjMjg7XHJcbn1cclxuXHJcbi5jYXRhbG9nLXByb2R1Y3RzLXJhbmdlLWlucHV0IGlucHV0IHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA1cHg7XHJcbiAgdG9wOiAxcHg7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXJnaW46IDA7XHJcbiAgYmFja2dyb3VuZDogbm9uZTtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwicmFuZ2VcIl06Oi13ZWJraXQtc2xpZGVyLXRodW1iIHtcclxuICBoZWlnaHQ6IDE3cHg7XHJcbiAgd2lkdGg6IDE3cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGJhY2tncm91bmQ6ICMwNzFjMjg7XHJcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gIGJveC1zaGFkb3c6IDAgMCA2cHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1cInJhbmdlXCJdOjotbW96LXJhbmdlLXRodW1iIHtcclxuICBoZWlnaHQ6IDE3cHg7XHJcbiAgd2lkdGg6IDE3cHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBiYWNrZ3JvdW5kOiAjMDcxYzI4O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xyXG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcclxuICBib3gtc2hhZG93OiAwIDAgNnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XHJcbn1cclxuXHJcbi8vIENoZWNrYm94IG9wZW4vY2xvc2VcclxuXHJcbi5jaGVja2JveC1oaWRlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uY2hlY2tib3gtb24ge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLnN0aWNrZXItaGlkZGVuLW9wZW4taW5mbyB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5jYXRhbG9nLXF1ZXN0aW9uLXRvZ2dsZSB7XHJcbiAgLmNhdGFsb2ctcXVlc3Rpb24taXRlbS10ZXh0IHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcbiAgLnF1ZXN0aW9uLXgge1xyXG4gICAgJjo6YmVmb3JlIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gRXJyb3IgbWFpbFxyXG4uY2F0YWxvZy1zZWFyY2gtZm9ybSB7XHJcbiAgc3Bhbi5lcnJvciB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYm90dG9tOiAtMTVweDtcclxuICAgIGNvbG9yOiAkY29sb3JSZWQ7XHJcbiAgICBmb250LXNpemU6IHJlbSgxMik7XHJcbiAgfVxyXG59XHJcblxyXG4ucmFuZ2Utc2xpZGVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuLmlycy0tcm91bmQge1xyXG4gIGhlaWdodDogaW5pdGlhbDtcclxufVxyXG4uaXJzLS1yb3VuZCAuaXJzLWJhciB7XHJcbiAgdG9wOiAwO1xyXG59XHJcblxyXG4uaXJzLS1yb3VuZCAuaXJzLWxpbmUge1xyXG4gIHRvcDogLTFweDtcclxuICBoZWlnaHQ6IDJweDtcclxufVxyXG4uaXJzLS1yb3VuZCAuaXJzLWZyb20sXHJcbi5pcnMtLXJvdW5kIC5pcnMtdG8sXHJcbi5pcnMtLXJvdW5kIC5pcnMtc2luZ2xlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi5pcnMtLXJvdW5kIC5pcnMtbWluLFxyXG4uaXJzLS1yb3VuZCAuaXJzLW1heCB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLmlycy0tcm91bmQgLmlycy1oYW5kbGUge1xyXG4gIGJhY2tncm91bmQ6ICMwNzFjMjg7XHJcbiAgYm9yZGVyOiA0cHggc29saWQgIzA3MWMyODtcclxuICBoZWlnaHQ6IDE2cHg7XHJcbiAgd2lkdGg6IDE2cHg7XHJcbiAgdG9wOiAtN3B4O1xyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZDogIzA3MWMyODtcclxuICB9XHJcbn1cclxuXHJcbi5pcnMtLXJvdW5kIC5pcnMtaGFuZGxlLnN0YXRlX2hvdmVyIHtcclxuICBiYWNrZ3JvdW5kOiAjMDcxYzI4O1xyXG59XHJcblxyXG4uaXJzLS1yb3VuZCAuaXJzLWJhciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA3MWMyODtcclxuICBoZWlnaHQ6IDJweDtcclxufVxyXG5cclxuLmNhdGFsb2ctcHJvZHVjdHMtZ3JpZCB7XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgLnByb2R1Y3QtaXRlbS1kZXNjcmlwdGlvbiB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIH1cclxuXHJcbiAgICAucHJvZHVjdCB7XHJcbiAgICAgICYtaXRlbSB7XHJcbiAgICAgICAgJi1yYWl0IHtcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtb3BlbiB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLWltZyB7XHJcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE4cHg7XHJcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiA2cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtdGl0bGUge1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1saW5rcyB7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtYnRuIHtcclxuICAgICAgICAgIHdpZHRoOiA4NHB4O1xyXG4gICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmLXNwYW4ge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmLWluZm8ge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgJi1hZGFwdGl2ZSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmLWluc3RhbGxtZW50cyB7XHJcbiAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJi1pbWcge1xyXG4gICAgICAgIHdpZHRoOiAzMCUgIWltcG9ydGFudDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnByb2R1Y3Qge1xyXG4gICAgICAmLWl0ZW0ge1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMzAwcHgpIHtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtaW1nIHtcclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgICB3aWR0aDogMjclO1xyXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxOHB4O1xyXG4gICAgICAgICAgLnByb2R1Y3QtaXRlbS1vcGVuIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5wcm9kdWN0LWl0ZW0tcmFpdCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAucHJvZHVjdC1pdGVtLWluc3RhbGxtZW50cyB7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLnByb2R1Y3QtaXRlbS10aXRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAucHJvZHVjdC1pdGVtLWltZyB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuLmNhdGFsb2ctcHJvZHVjdHMtbGluZSB7XHJcbiAgLmNvbC0xMixcclxuICAuY29sLXNtLTYsXHJcbiAgLmNvbC1sLTQge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgZmxleDogMTAwJTtcclxuICB9XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgLnByb2R1Y3QtaXRlbS1idG4ge1xyXG4gICAgICBtYXgtd2lkdGg6IDg0cHg7XHJcbiAgICB9XHJcbiAgICAucHJvZHVjdC1pdGVtLWJ0bi1zcGFuIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICAgIC5wcm9kdWN0LWl0ZW0tYnRuIGltZyB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgfVxyXG4gIH1cclxuICAucHJvZHVjdCB7XHJcbiAgICAmLWl0ZW0ge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBtaW4td2lkdGg6IDEwMCU7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxNnB4O1xyXG4gICAgICAmLW9wZW4ge1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtaW5zdGFsbG1lbnRzIHtcclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtdGl0bGUge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtY29udGFpbmVyIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIHdpZHRoOiA3MyU7XHJcbiAgICAgIH1cclxuICAgICAgJi1idG4ge1xyXG4gICAgICB9XHJcbiAgICAgICYtaW5mbyB7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICB9XHJcbiAgICAgICYtZGVzY3JpcHRpb24ge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICB9XHJcbiAgICAgICYtaW1nIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1pbWcge1xyXG4gICAgICB3aWR0aDogMjYlO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICB9XHJcbiAgICAmLWluZm8ge1xyXG4gICAgICB3aWR0aDogNjAlO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcbiAgICB9XHJcbiAgICAmLXByaWNlIHtcclxuICAgICAgd2lkdGg6IDM3JTtcclxuICAgIH1cclxuXHJcbiAgICAmLWhvdmVyIHtcclxuICAgIH1cclxuICB9XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDY5MHB4KSB7XHJcbiAgICAucHJvZHVjdCB7XHJcbiAgICAgICYtaXRlbSB7XHJcbiAgICAgICAgJi1jb250YWluZXIge1xyXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtcmFpdCB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLWltZyB7XHJcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtaW1nIHtcclxuICAgICAgICB3aWR0aDogMjclICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAzNnB4O1xyXG4gICAgICB9XHJcbiAgICAgICYtaW5mbyB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxuICAgICAgfVxyXG4gICAgICAmLXByaWNlIHtcclxuICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbi8vIC5jYXRhbG9nLXByb2R1Y3RzIHtcclxuLy8gICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcclxuLy8gICAgIC5wcm9kdWN0LWl0ZW0tY29kZSB7XHJcbi8vICAgICAgIG1hcmdpbi1sZWZ0OiAtMTJweDtcclxuLy8gICAgIH1cclxuLy8gICB9XHJcbi8vIH1cclxuLmNhdGFsb2ctaW1nLW9wYWNpdHkge1xyXG4gIGltZyB7XHJcbiAgICBvcGFjaXR5OiAwLjM7XHJcbiAgfVxyXG59XHJcbi8vQXJ0aWNsZS1hcnJvd1xyXG5cclxuLnNsaWRlcl9hcnRpY2xlIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAtMjVweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEycHg7XHJcbiAgfVxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICB9XHJcbiAgLnN3aXBlci1idXR0b24tZGlzYWJsZWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gIH1cclxuICAuc3dpcGVyLXdyYXBwZXIge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICBvdmVyZmxvdy14OiBhdXRvO1xyXG4gICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgIG1hcmdpbjogMHB4IC01cHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5zd2lwZXItc2xpZGUge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICBtYXgtd2lkdGg6IDQyNHB4O1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDI0cHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbi8qINGF0YDQvtC8LCDRgdCw0YTQsNGA0LggKi9cclxuLnN3aXBlci13cmFwcGVyOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgd2lkdGg6IDA7XHJcbn1cclxuXHJcbi8qIGllIDEwKyAqL1xyXG4uc3dpcGVyLXdyYXBwZXIge1xyXG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuLyog0YTRhCAo0YHQstC+0LnRgdGC0LLQviDQsdC+0LvRjNGI0LUg0L3QtSDRgNCw0LHQvtGC0LDQtdGCLCDQtNGA0YPQs9C40YUg0YHQv9C+0YHQvtCx0L7QsiDRgtC+0LbQtSDQvdC10YIpKi9cclxuLnN3aXBlci13cmFwcGVyIHtcclxuICBvdmVyZmxvdzogLW1vei1zY3JvbGxiYXJzLW5vbmU7XHJcbn1cclxuLmFydGljbGUtYnV0dG9uLXByZXYsXHJcbi5hcnRpY2xlLWJ1dHRvbi1uZXh0IHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDQwcHg7XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLy4uL2ltYWdlcy9pY29ucy9wcm9kdWN0LXNsaWRlci1yaWdodC5zdmcpO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiKDAgMCAwIC8gMTAlKTtcclxuICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2IoMCAwIDAgLyAxMCUpO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufVxyXG4uYXJ0aWNsZS1idXR0b24tcHJldiB7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcclxuICB0b3A6IDQzJTtcclxuICBsZWZ0OiA4cHg7XHJcbiAgei1pbmRleDogOTtcclxufVxyXG4uYXJ0aWNsZS1idXR0b24tbmV4dCB7XHJcbiAgdG9wOiA0MyU7XHJcbiAgcmlnaHQ6IDhweDtcclxuICB6LWluZGV4OiA5O1xyXG59XHJcblxyXG4vLyDQodC60YDRi9GC0LjQtSDRgdC60YDQvtC70Lsg0LHQsNGA0LBcclxuXHJcbi5jYXRhbG9nLXN0aWNrZXJzLXdyYXA6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICB3aWR0aDogMDtcclxufVxyXG4uY2F0YWxvZy1zdGlja2Vycy13cmFwIHtcclxuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XHJcbn1cclxuLmNhdGFsb2ctc3RpY2tlcnMtd3JhcCB7XHJcbiAgb3ZlcmZsb3c6IC1tb3otc2Nyb2xsYmFycy1ub25lO1xyXG59XHJcblxyXG4uY2F0YWxvZy1icmFuZHMtbWFpbjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gIHdpZHRoOiAwO1xyXG59XHJcbi5jYXRhbG9nLWJyYW5kcy1tYWluIHtcclxuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XHJcbn1cclxuLmNhdGFsb2ctYnJhbmRzLW1haW4ge1xyXG4gIG92ZXJmbG93OiAtbW96LXNjcm9sbGJhcnMtbm9uZTtcclxufVxyXG5cclxuLmNhcmQtaW50ZXJlc3Qtd3JhcDo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gIHdpZHRoOiAwO1xyXG59XHJcbi5jYXJkLWludGVyZXN0LXdyYXAge1xyXG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcclxufVxyXG4uY2FyZC1pbnRlcmVzdC13cmFwIHtcclxuICBvdmVyZmxvdzogLW1vei1zY3JvbGxiYXJzLW5vbmU7XHJcbn1cclxuXHJcbi5jYXRhbG9nLXByb2R1Y3RzLWltZy1vcGVuIHtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi9pbWFnZXMvaWNvbnMvcmVkLWNyb3NzLnN2Zyk7XHJcbn1cclxuIiwiLmNhcmQge1xyXG4gICYtaXRlbSB7XHJcbiAgICAmLXdyYXBwZXIge1xyXG4gICAgICBwYWRkaW5nOiAyN3B4IDI0cHggMjBweCAyNHB4O1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgICAgICYtbWlzc2luZyB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWNvdW50ZXIge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogNTVweDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMzQwcHgpIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcbiAgICAgIH1cclxuICAgICAgJi10eHQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDEyKTtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgICAgICBjb2xvcjogIzAwMDAwMGFiO1xyXG4gICAgICB9XHJcbiAgICAgICYtYnRuIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkM2QzZDM7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvckRhcms7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICBtYXJnaW4tbGVmdDogLTEwcHg7XHJcblxyXG4gICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgdG9wOiA0OCU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDU0JTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtaW5wdXQge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xyXG4gICAgICAgIHdpZHRoOiA1NXB4O1xyXG4gICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxOCk7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1wcmljZSB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgICAgJi10eHQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDEyKTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS4zO1xyXG4gICAgICB9XHJcbiAgICAgICYtb2xkIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxOCk7XHJcbiAgICAgICAgY29sb3I6ICM4MDgwODA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgICAgfVxyXG4gICAgICAmLW5ldyB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDhweDtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiA4cHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYzEwMDtcclxuICAgICAgICBoZWlnaHQ6IDE4cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE4cHg7XHJcbiAgICAgICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xyXG4gICAgICB9XHJcbiAgICAgICYtY3VycmVudCB7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMjgpO1xyXG4gICAgICAgIGNvbG9yOiAjYmMwMDAwO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgIH1cclxuICAgICAgJi1jdXJyZW5jeSB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMThweDtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxOCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtbGluZSB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICBtYXJnaW4tbGVmdDogLTI0cHg7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogLTI0cHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgICB9XHJcbiAgICAmLWJ0biB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvclJlZDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICB9XHJcbiAgICAgICY6bnRoLW9mLXR5cGUoMikge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yUmVkO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvclJlZDtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtcXVlc3Rpb24ge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICB9XHJcbiAgICAgIGltZyB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA2cHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAyMHB4O1xyXG4gICAgICB9XHJcbiAgICAgICYtbGluayB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTtcclxuICAgICAgICBjb2xvcjogJGNvbG9yQmx1ZTtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi10aXRsZSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDE4KTtcclxuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgICAgZm9udC1mYW1pbHk6ICRmZlBvcHBpbnM7XHJcbiAgICB9XHJcbiAgICAmLWZlYXR1cmVzIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgICB3aWR0aDogNDYlO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcblxyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgLmZlYXR1cmVzLWxhYmVsIHtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICB3aWR0aDogNTZweDtcclxuICAgICAgICAgIGhlaWdodDogNTZweDtcclxuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAmOm50aC1jaGlsZChvZGQpIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDI0cHg7XHJcbiAgICAgIH1cclxuICAgICAgLmZlYXR1cmVzLWlucHV0IHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICAgIC5mZWF0dXJlcy1sYWJlbCB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogNHB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDhweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXgtd2lkdGg6IDgycHg7XHJcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjZDNkM2QzO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgNHB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgaW5wdXQ6Y2hlY2tlZCArIC5mZWF0dXJlcy1sYWJlbC1ib3JkZXIge1xyXG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpudGgtY2hpbGQob2RkKSB7XHJcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtd3JhcHBlciB7XHJcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICBtYXgtd2lkdGg6IDgycHg7XHJcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1NnB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDU2cHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtYm9yZGVyIHtcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgaGVpZ2h0OiA4MCU7XHJcbiAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDE0MDFweCkge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAuZmVhdHVyZXMtbGFiZWwge1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLXRpdGxlIHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxMik7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTNweDtcclxuICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWxpbmsge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAzOHB4O1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLW9wdGlvbnMge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDE2cHgpO1xyXG4gICAgICBwYWRkaW5nOiAxNnB4IDMycHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xyXG4gICAgICAgIHBhZGRpbmc6IDE2cHggMjFweCAxNnB4IDE2cHg7XHJcbiAgICAgIH1cclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZjtcclxuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICAgICAgY29sb3I6ICMyYTQ0NTU7XHJcbiAgICAgIH1cclxuICAgICAgJi10eHQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE4KTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjM7XHJcbiAgICAgIH1cclxuICAgICAgJi1pbWcge1xyXG4gICAgICAgIC8vIGZsZXg6IDAgMCA5JTtcclxuICAgICAgICBtaW4td2lkdGg6IDM4cHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAzOHB4O1xyXG4gICAgICB9XHJcbiAgICAgICYtc3BhbiB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICAgIG9wYWNpdHk6IDUwJTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1taW51cyB7XHJcbiAgICAgIC8vICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAvLyAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgLy8gICB0b3A6IDUwJTtcclxuICAgICAgLy8gICBsZWZ0OiA1MCU7XHJcbiAgICAgIC8vICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgIC8vICAgd2lkdGg6IDE2cHg7XHJcbiAgICAgIC8vICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgIC8vICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgICAgLy8gICBib3JkZXItcmFkaXVzOiA4cHg7XHJcblxyXG4gICAgICBsZWZ0OiA0NyUgIWltcG9ydGFudDtcclxuICAgICAgdG9wOiAxMiUgIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgICYtcmFkaW8ge1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcclxuICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgICAgICAuY2FyZC1pdGVtLXRpdGxlIHtcclxuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmNhcmQtaXRlbS1saW5rIHtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLXN0YXR1cyB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxN3B4O1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDIyKTtcclxuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgb3BhY2l0eTogMC43O1xyXG4gICAgfVxyXG4gICAgJi1kZWxpdmVyeSB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAyN3B4O1xyXG4gICAgICAmLXNwYW4ge1xyXG4gICAgICAgIG9wYWNpdHk6IDAuNztcclxuICAgICAgfVxyXG4gICAgICBpbWcge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDlweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAmLWludGVyZXN0IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbiAgICAmLXRpdGxlIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgZm9udC1zaXplOiByZW0oMzIpO1xyXG4gICAgICBsaW5lLWhlaWdodDogMS4zNzU7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgyOCk7XHJcbiAgICAgIH1cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMjIpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWl0ZW0ge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBwYWRkaW5nOiA4cHggMzJweDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ViZWJlYjtcclxuICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDE2cHgpO1xyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICAvLyBvcGFjaXR5OiAwLjU7XHJcbiAgICAgICAgLy8gYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcclxuICAgICAgfVxyXG4gICAgICAmLWltZyB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA2NHB4O1xyXG4gICAgICAgIG1pbi13aWR0aDogNjRweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgICAgIH1cclxuICAgICAgJi10eHQge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMztcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzODBweCkge1xyXG4gICAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4vLyAuZmVhdHVyZXMtbGFiZWwgPiBpbnB1dDpjaGVja2VkIHtcclxuLy8gICBib3JkZXI6IDJweCBzb2xpZCAkY29sb3JEYXJrO1xyXG4vLyB9XHJcbi8vIC5jYXJkLWl0ZW0tZmVhdHVyZXMgLmZlYXR1cmVzLWlucHV0W3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkICsgLmZlYXR1cmVzLWxhYmVsIHtcclxuLy8gICBib3JkZXI6IDJweCBzb2xpZCAkY29sb3JEYXJrO1xyXG4vLyB9XHJcbi8vIC5zd2lwZXIge1xyXG4vLyAgIGhlaWdodDogNTY4cHg7XHJcbi8vIH1cclxuLmNhcmQtaW50ZXJlc3QtbW9iIHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcclxuICAgIG92ZXJmbG93LXg6IGF1dG87XHJcbiAgICBvdmVyZmxvdy15OiBoaWRkZW47XHJcbiAgICAvLyB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgLmNvbC00IHtcclxuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICBmbGV4OiAwIDAgMDtcclxuICAgICAgcGFkZGluZzogMCA4cHg7XHJcbiAgICB9XHJcbiAgICAuY2FyZC1pbnRlcmVzdC1pdGVtLWltZyB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAuY2FyZC1pbnRlcmVzdC1pdGVtIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICBwYWRkaW5nOiAxOHB4IDE2cHg7XHJcbiAgICB9XHJcbiAgICAvLyAuY2FyZC1pbnRlcmVzdC1pdGVtLXR4dCB7XHJcbiAgICAvLyAgIGhlaWdodDogMTAwJTtcclxuICAgIC8vICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgLy8gICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgLy8gfVxyXG4gIH1cclxufVxyXG4vL9C+0YLQutC70Y7Rh9C10L3QuNC1INGB0LrRgNC+0LvQsdCw0YDQsFxyXG4uY2FyZC1pbnRlcmVzdC1tb2I6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICB3aWR0aDogMDtcclxufVxyXG4vKiBpZSAxMCsgKi9cclxuLmNhcmQtaW50ZXJlc3QtbW9iIHtcclxuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XHJcbn1cclxuLyog0YTRhCAo0YHQstC+0LnRgdGC0LLQviDQsdC+0LvRjNGI0LUg0L3QtSDRgNCw0LHQvtGC0LDQtdGCLCDQtNGA0YPQs9C40YUg0YHQv9C+0YHQvtCx0L7QsiDRgtC+0LbQtSDQvdC10YIpKi9cclxuLmNhcmQtaW50ZXJlc3QtbW9iIHtcclxuICBvdmVyZmxvdzogLW1vei1zY3JvbGxiYXJzLW5vbmU7XHJcbn1cclxuLnNsaWRlci1hZGFwdGl2ZS13cmFwOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgd2lkdGg6IDA7XHJcbn1cclxuLyogaWUgMTArICovXHJcbi5zbGlkZXItYWRhcHRpdmUtd3JhcCB7XHJcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xyXG59XHJcbi8qINGE0YQgKNGB0LLQvtC50YHRgtCy0L4g0LHQvtC70YzRiNC1INC90LUg0YDQsNCx0L7RgtCw0LXRgiwg0LTRgNGD0LPQuNGFINGB0L/QvtGB0L7QsdC+0LIg0YLQvtC20LUg0L3QtdGCKSovXHJcbi5zbGlkZXItYWRhcHRpdmUtd3JhcCB7XHJcbiAgb3ZlcmZsb3c6IC1tb3otc2Nyb2xsYmFycy1ub25lO1xyXG59XHJcbi5wcm9kdWN0LXN3aXBlciB7XHJcbiAgaGVpZ2h0OiA1ODlweDtcclxuICBwYWRkaW5nOiAycHggMnB4O1xyXG4gIC5zd2lwZXItc2Nyb2xsYmFyIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG4uY2FyZC1pdGVtLXdyYXBwZXItZGFyayB7XHJcbiAgLmNhcmQtaXRlbS1wcmljZS1jdXJyZW50IHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgfVxyXG4gIC5jYXJkLWJ0bi1kYXJrIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvckRhcms7XHJcbiAgfVxyXG59XHJcbi5kcG4ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5zbGlkZXItYWRhcHRpdmUge1xyXG4gIC8vIGRpc3BsYXk6IGJsb2NrO1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICYtd3JhcCB7XHJcbiAgICAgIG92ZXJmbG93LXg6IGF1dG87XHJcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcclxuICAgICAgcGFkZGluZzogMnB4O1xyXG4gICAgfVxyXG4gIH1cclxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAmLXNsaWRlIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgICB3aWR0aDogMjY0cHggIWltcG9ydGFudDtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG4gICAgfVxyXG4gICAgLnByb2R1Y3QtaXRlbSAuc3dpcGVyLXNsaWRlIHtcclxuICAgICAgd2lkdGg6IDI2NHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICAgIC5zd2lwZXItYnV0dG9uLW5leHQge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gICAgLnByb2R1Y3QtaXRlbS1pbnN0YWxsbWVudHMge1xyXG4gICAgICBtYXgtd2lkdGg6IDE4MHB4O1xyXG4gICAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5zd2lwZXItYnV0dG9uLW5leHQsXHJcbiAgLnN3aXBlci1idXR0b24tcHJldiB7XHJcbiAgICB0b3A6IDQ1JTtcclxuICB9XHJcbn1cclxuLnNsaWRlci1hZGFwdGl2ZS1wcmV2IHtcclxuICB3aWR0aDogNDBweDtcclxuICBoZWlnaHQ6IDQwcHg7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi8uLi9pbWFnZXMvaWNvbnMvcHJvZHVjdC1zbGlkZXItcmlnaHQuc3ZnXCIpO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICY6OmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgfVxyXG4gIGltZyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gIH1cclxufVxyXG4uc2xpZGVyLWFkYXB0aXZlLW5leHQge1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLy4uL2ltYWdlcy9pY29ucy9wcm9kdWN0LXNsaWRlci1yaWdodC5zdmdcIik7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICY6OmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgfVxyXG59XHJcbi5wcm9kdWN0LXN3aXBlci1tb2Ige1xyXG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIC5zbGlkZXItYWRhcHRpdmUtd3JhcCB7XHJcbiAgICB0cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuLnByb2R1Y3Qtc3dpcGVyLWRlc2Mge1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG4uc2xpZGVyLWFkYXB0aXZlLW5vbmUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLmNhcmQtaXRlbS1jb250YWluZXItYWRhcHRpdmUge1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDU2cHg7XHJcbiAgfVxyXG59XHJcbi5jYXJkLWl0ZW0taW5kZW50IHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAtMTVweDtcclxuICAgIG1hcmdpbi1yaWdodDogLTE1cHg7XHJcbiAgfVxyXG59XHJcblxyXG4uZmVhdHVyZXMtbGFiZWwtbG9uZyB7XHJcbiAgLmZlYXR1cmVzLWxhYmVsLXdyYXBwZXIge1xyXG4gICAgd2lkdGg6IGluaXRpYWwgIWltcG9ydGFudDtcclxuICAgIG1heC13aWR0aDogaW5pdGlhbCAhaW1wb3J0YW50O1xyXG4gICAgbWluLXdpZHRoOiA1NnB4O1xyXG4gIH1cclxuICAuZmVhdHVyZXMtbGFiZWwge1xyXG4gICAgd2lkdGg6IGluaXRpYWwgIWltcG9ydGFudDtcclxuICAgIG1heC13aWR0aDogaW5pdGlhbCAhaW1wb3J0YW50O1xyXG4gICAgbWluLXdpZHRoOiA1NnB4ICFpbXBvcnRhbnQ7XHJcbiAgICAvLyBsaW5lLWhlaWdodDogMy41O1xyXG4gIH1cclxufVxyXG4vLyAuZmVhdHVyZXMtbGFiZWw6Y2hlY2tlZCB+IGlucHV0IHtcclxuLy8gICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcclxuLy8gfVxyXG4ucHJvZHVjdC1zd2lwZXItZGVzYy1pbnRlcmVzdCB7XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgLnN3aXBlci13cmFwcGVyIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDBweCwgMHB4KSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4ucHJvZHVjdC1zd2lwZXItZGVzYy1jYXRhbG9nIHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAuc3dpcGVyLXdyYXBwZXIge1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi8vIC5tZnAtY29udGVudCB7XHJcbi8vICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4vLyAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4vLyAgICAgbGVmdDogMDtcclxuLy8gICAgIHRvcDogMDtcclxuLy8gICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbi8vICAgICB3aWR0aDogMTAwJTtcclxuLy8gICAgIGhlaWdodDogMTAwJTtcclxuLy8gICAgIG92ZXJmbG93OiBzY3JvbGw7XHJcbi8vICAgfVxyXG4vLyB9XHJcblxyXG4ucG9wdXAtcHJldmlldy1zbGlkZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBhZGRpbmc6IDQ4cHggNjRweDtcclxuXHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDY1MHB4KSB7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgLnBvcHVwLXByZXZpZXctc2xpZGVyLXZlcnRpYyB7XHJcbiAgICB3aWR0aDogMTklO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgd2lkdGg6IDgwJTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5wb3B1cC1wcmV2aWV3LXNsaWRlci1tYWluIHtcclxuICAgIHdpZHRoOiA3NSU7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZy10b3A6IDI1cHg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICB3aWR0aDogODAlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnN3aXBlciB7XHJcbiAgICBtYXJnaW46IDA7XHJcblxyXG4gICAgJi52ZXJ0aWNhbC1zbGlkZXIge1xyXG4gICAgICBoZWlnaHQ6IDcwMHB4O1xyXG5cclxuICAgICAgLnN3aXBlci13cmFwcGVyIHtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgfVxyXG5cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XHJcbiAgICAgICAgaGVpZ2h0OiAyODBweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgLnN3aXBlci1zbGlkZSB7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNmZmY7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLWFjdGl2ZSB7XHJcbiAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjZmZjMTAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLnN3aXBlci1wYWdpbmF0aW9uIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG5cclxuICBAbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxufVxyXG5cclxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XHJcbiAgd2lkdGg6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC13aWR0aCwgdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LXNpemUsIDI0cHgpKTtcclxuICBoZWlnaHQ6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1oZWlnaHQsIHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1zaXplLCAycHgpKTtcclxuICBib3JkZXItcmFkaXVzOiAycHg7XHJcbn1cclxuXHJcbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMkE0NDU1O1xyXG59XHJcblxyXG4uc2xpZGVyLXByZXZpZXMtY29udGFpbmVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgcGFkZGluZzogNDVweCAwcHg7XHJcblxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbi5wcmV2aWV3LWJ0bi1uZXh0IHtcclxuICBjb2xvcjogIzA3MWMyODtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoMjcwZGVnKTtcclxuICB0b3A6IDEwcHg7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgbGVmdDogNDVweDtcclxuICAmOmFmdGVyIHtcclxuICAgIGZvbnQtc2l6ZTogcmVtKDIwKTtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICB0b3A6IDEwMHB4O1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBsZWZ0OiAtNDVweDtcclxuICB9XHJcbn1cclxuLnByZXZpZXctYnRuLXByZXYge1xyXG4gIGNvbG9yOiAjMDcxYzI4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpO1xyXG4gIC8vIGJvdHRvbTogMTBweDtcclxuICB0b3A6IDk1JTtcclxuICByaWdodDogMDtcclxuICBsZWZ0OiA0NXB4O1xyXG4gICY6YWZ0ZXIge1xyXG4gICAgZm9udC1zaXplOiByZW0oMjApO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcclxuICAgIHRvcDogMjglO1xyXG4gICAgcmlnaHQ6IDBweDtcclxuICAgIGxlZnQ6IDEwMCU7XHJcbiAgfVxyXG59XHJcbi5tYWluLXNpbGRlci1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBwYWRkaW5nOiAwcHggMzBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xyXG4gICAgcGFkZGluZzogMDtcclxuICB9XHJcbn1cclxuXHJcbi5tYWluLWJ1dHRvbi1uZXh0IHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHRvcDogNTAlO1xyXG4gIHdpZHRoOiAyNXB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi9pbWFnZXMvaWNvbnMvYXJyb3ctc2xpZGVyLXByZXZpZXctbmV4dC5zdmcpO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogYXV0bztcclxuXHJcbiAgJi5zd2lwZXItYnV0dG9uLWRpc2FibGVkIHtcclxuICAgIG9wYWNpdHk6IC4zNTtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbn1cclxuLm1haW4tYnV0dG9uLXByZXYge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogMDtcclxuICB0b3A6IDUwJTtcclxuICB3aWR0aDogMjVweDtcclxuICBoZWlnaHQ6IDQwcHg7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uLy4vaW1hZ2VzL2ljb25zL2Fycm93LXNsaWRlci1wcmV2aWV3LW5leHQuc3ZnKTtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogYXV0bztcclxuXHJcbiAgJi5zd2lwZXItYnV0dG9uLWRpc2FibGVkIHtcclxuICAgIG9wYWNpdHk6IC4zNTtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbi5zd2lwZXItdmVydGljYWw+LnN3aXBlci13cmFwcGVyIHtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufSIsIi5wb3B1cCB7XHJcbiAgJi1zZXJ0IHtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XHJcbiAgICBtYXgtd2lkdGg6IDYxNnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuXHJcbiAgICAubWZwLWNsb3NlIHtcclxuICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgIGZvbnQtc2l6ZTogNDJweDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLnBvcHVwLXByZXZpZXcge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXgtd2lkdGg6IDE0MDBweDtcclxuICBtYXJnaW46IDBweCBhdXRvO1xyXG4gIHBhZGRpbmctbGVmdDogNDBweDtcclxuICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xyXG4gIC5tZnAtY2xvc2UtYnRuLWluIC5tZnAtY2xvc2Uge1xyXG4gICAgZm9udC1zaXplOiAzNXB4O1xyXG4gICAgY29sb3I6ICM4NDg0ODQ7XHJcbiAgICByaWdodDogMTEycHg7XHJcbiAgICB0b3A6IDMycHg7XHJcbiAgfVxyXG59XHJcblxyXG4ucG9wdXAtZm9ybS1yZXZpZXdzIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbWFyZ2luOiAyMHB4IGF1dG87XHJcbiAgbWF4LXdpZHRoOiA2OTZweDtcclxuICBAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiAgLy8gLm1mcC1jbG9zZSB7XHJcbiAgLy8gICBmb250LXNpemU6IDUwcHg7XHJcbiAgLy8gICB0b3A6IDI2cHg7XHJcbiAgLy8gICByaWdodDogMjZweDtcclxuICAvLyAgIEBtZWRpYSAobWF4LXdpZHRoOiA3ODBweCkge1xyXG4gIC8vICAgICAvLyBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgLy8gICB9XHJcbiAgLy8gfVxyXG5cclxuICAucG9wdXAtYWdyZWVtZW50LXR4dCB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIH1cclxuXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiBcItCd0LDQttC40LzQsNGPINC60L3QvtC/0LrRgyDCq9Ce0YLQv9GA0LDQstC40YLRjCDQvtGC0LfRi9Cywrsg0LLRiyDRgdC+0LPQu9Cw0YjQsNC10YLQtdGB0YxcIjtcclxuICAgIH1cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiBcItCvINGB0L7Qs9C70LDRiNCw0Y7RgdGMINGBXCI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5mb3JtLXJldmlld3Mge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc4MHB4KSB7XHJcbiAgICAgIC8vIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICBib3R0b206IDA7XHJcbiAgICAgIC8vIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG4gICAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgICB9XHJcblxyXG4gICAgJi1jb250ZW50IHtcclxuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgICAgbWF4LXdpZHRoOiA2OTZweDtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBtYXJnaW46IDBweCBhdXRvO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG5cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDY4MHB4KSB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWhlYWRlciB7XHJcbiAgICAgIHBhZGRpbmc6IDM0cHggNDhweDtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkM2QzZDM7XHJcblxyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcclxuICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLXRpdGxlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLWl0ZW0ge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XHJcblxyXG4gICAgICAgIHNwYW46bnRoLWNoaWxkKDEpIHtcclxuICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2ODBweCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc3BhbjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgIGNvbG9yOiAjMWE2NmFlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtYm9keSB7XHJcbiAgICAgIHBhZGRpbmc6IDM0cHggNDhweDtcclxuXHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2ODBweCkge1xyXG4gICAgICAgIHBhZGRpbmc6IDI0cHggMTVweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgLmZvcm0tY2VsbCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTdweDtcclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDY4MHB4KSB7XHJcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxhYmVsIHtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICBjb2xvcjogIzAwMDtcclxuXHJcbiAgICAgICAgICBzcGFuIHtcclxuICAgICAgICAgICAgY29sb3I6ICNiYzAwMDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAudXJsIHtcclxuICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuY3VzdG9tQ2hlY2tib3gge1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmN1c3RvbUNoZWNrYm94ICsgbGFiZWwge1xyXG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5jdXN0b21DaGVja2JveCArIGxhYmVsOjpiZWZvcmUge1xyXG4gICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgIHdpZHRoOiAxZW07XHJcbiAgICAgICAgICBoZWlnaHQ6IDFlbTtcclxuICAgICAgICAgIGZsZXgtc2hyaW5rOiAwO1xyXG4gICAgICAgICAgZmxleC1ncm93OiAwO1xyXG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2FkYjViZDtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcclxuICAgICAgICAgIG1hcmdpbi1yaWdodDogMC41ZW07XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogNTAlIDUwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5jdXN0b21DaGVja2JveDpjaGVja2VkICsgbGFiZWw6OmJlZm9yZSB7XHJcbiAgICAgICAgICBib3JkZXItY29sb3I6ICMwNzFjMjg7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDcxYzI4O1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA4IDgnJTNlJTNjcGF0aCBmaWxsPSclMjNmZmYnIGQ9J002LjU2NC43NWwtMy41OSAzLjYxMi0xLjUzOC0xLjU1TDAgNC4yNiAyLjk3NCA3LjI1IDggMi4xOTN6Jy8lM2UlM2Mvc3ZnJTNlXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaW5wdXQge1xyXG4gICAgICAgICAgd2lkdGg6IDI4OHB4O1xyXG4gICAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICAgICAgICAgIHBhZGRpbmc6IDEwcHggMTZweDtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuXHJcbiAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNjgwcHgpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjpmb2N1cyB7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM4MDgwODA7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM4MDgwODA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuY2FyZC1pdGVtLXJhdGluZy1pdGVtIHtcclxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuYnRuLXN1Ym1pdCB7XHJcbiAgICAgICAgICBwYWRkaW5nOiA5cHggMzBweDtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyYTQ0NTU7XHJcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcblxyXG4gICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDY4MHB4KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1pbmZvIHtcclxuICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2ODBweCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG5cclxuICAgICAgICAgICAgaW5wdXQge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHNwYW4uZXJyb3Ige1xyXG4gICAgICAgICAgICBjb2xvcjogcmVkO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDAuNzVyZW07XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtZmllbGQge1xyXG4gICAgICAgICAgJi10ZXh0YXJlYSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2ODBweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRleHRhcmVhIHtcclxuICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDE2cHg7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwMHB4O1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTA0cHg7XHJcbiAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICAgICAgcmVzaXplOiBub25lO1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuXHJcbiAgICAgICAgICAgICAgJjpmb2N1cyB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjODA4MDgwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICYtcXVhbGl0eSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2ODBweCkge1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW5wdXQge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTlweDtcclxuXHJcbiAgICAgICAgICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLnBsdXMge1xyXG4gICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM1NTllNTM7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5taW51cyB7XHJcbiAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2JjMDAwMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICYtbG9hZCB7XHJcbiAgICAgICAgICAgIGlucHV0W3R5cGU9XCJmaWxlXCJdIHtcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZXJyb3ItZmlsZSB7XHJcbiAgICAgICAgICAgICAgY29sb3I6ICNiYzAwMDA7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuaW1nLWZpbGUge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA4OHB4O1xyXG4gICAgICAgICAgICAgIGhlaWdodDogNjRweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmxvYWQtZmlsZSB7XHJcbiAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICAgICAgICAgICAgcGFkZGluZzogMTVweCAxNnB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAyODhweDtcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDY4MHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBzcGFuIHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgIHRvcDogLTEycHg7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTZweDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmLXVybCB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgIHotaW5kZXg6IDEwO1xyXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDE4cHg7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlucHV0IHtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgIHotaW5kZXg6IDk7XHJcbiAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA2NnB4O1xyXG5cclxuICAgICAgICAgICAgICAmOjpwbGFjZWhvbGRlciB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogI2JjMDAwMDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmLXNlbmQge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNDBweDtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAucG9wdXAtYWdyZWVtZW50LXR4dCB7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDMyMHB4O1xyXG4gICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5jaGVja2JveCB7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICAgICAgICB0b3A6IDVweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1yYXRpbmcge1xyXG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cclxuICAgICAgICAgIC5yYXRpbmctbGFiZWwge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAucmF0aW5nLXNldCB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgICAgIC5jYXJkLWl0ZW0tcmF0aW5nLWJvZHkge1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogcmVtKDUwKTtcclxuXHJcbiAgICAgICAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjZjlkZThlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmVycm9yIHtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgYm90dG9tOiAtMTVweDtcclxuICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGNvbG9yOiByZWQ7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAwLjc1cmVtO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuY2FyZC1pdGVtLXJhdGluZy12YWx1ZSB7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBzcGFuLmVycm9yIHtcclxuICAgICAgICAgICAgLy8gICBjb2xvcjogcmVkO1xyXG4gICAgICAgICAgICAvLyAgIGZvbnQtc2l6ZTogMC43NXJlbTtcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vICYtdmFsaWQge1xyXG4gICAgLy8gICBzcGFuLmVycm9yIHtcclxuICAgIC8vICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAvLyAgICAgYm90dG9tOiAtMTVweDtcclxuICAgIC8vICAgICBsZWZ0OiAwO1xyXG4gICAgLy8gICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIC8vICAgICBjb2xvcjogcmVkO1xyXG4gICAgLy8gICB9XHJcbiAgICAvLyB9XHJcbiAgfVxyXG59XHJcblxyXG4uYWxsLWZpbGVzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uYWxsLWZpbGVzLWl0ZW0ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW4tcmlnaHQ6IDEycHg7XHJcbn1cclxuXHJcbi5yZW1vdmUtZmlsZSB7XHJcbiAgd2lkdGg6IDIwcHg7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBjb2xvcjogI2ZmZjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB6LWluZGV4OiA5OTk7XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICNmZmMxMDA7XHJcbiAgfVxyXG59XHJcblxyXG4udHlwZS1maWxlIHtcclxuICBwYWRkaW5nOiA1cHg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJvdHRvbTogNnB4O1xyXG4gIGxlZnQ6IDA7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB6LWluZGV4OiA5OTk7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG59XHJcblxyXG4ub3Blbi1maWxlcyB7XHJcbiAgd2lkdGg6IDg4cHg7XHJcbiAgaGVpZ2h0OiA2NHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nOiAxOHB4IDA7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMztcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG5cclxuICBpbWcge1xyXG4gICAgd2lkdGg6IDI2cHg7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgfVxyXG59XHJcblxyXG4ucG9wdXAtY2xvc2Uge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgcmlnaHQ6IDI2cHg7XHJcbiAgZm9udC1zaXplOiA1MHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgJjpob3ZlciB7XHJcbiAgICBvcGFjaXR5OiAwLjM1O1xyXG4gIH1cclxufVxyXG5cclxuLnBvcHVwLXNlY29uZCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0b3A6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICB3aWR0aDogNTEycHg7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBwYWRkaW5nOiAzNHB4IDQ4cHg7XHJcblxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG59XHJcblxyXG4ucG9wdXAtc2Vjb25kLWJsb2NrIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnBvcHVwLXNlY29uZC1iZyB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjksIDM4LCA0NCwgMC4zNSk7XHJcbiAgei1pbmRleDogOTk5OTtcclxufVxyXG5cclxuLnBvcHVwLXNlY29uZC10aXRsZSB7XHJcbiAgbWFyZ2luOiAwIDAgMTVweCAwO1xyXG59XHJcblxyXG4ucG9wdXAtc2Vjb25kLXRleHQge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5wb3B1cC1zZWNvbmQge1xyXG4gIC51aS1idG4ge1xyXG4gICAgd2lkdGg6IDQ4JTtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgcGFkZGluZzogMzRweCAxNXB4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcbn1cclxuXHJcbi5wb3B1cC1zZWNvbmQtYnRuLWV4aXQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMyYTQ0NTU7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG5cclxuICBAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDhweDtcclxuXHJcbiAgICAmLnVpLWJ0biB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLnBvcHVwLXNlY29uZC1idG4tY2FuY2VsIHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcclxuICAgICYudWktYnRuIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ucG9wdXAtc2Vjb25kLWJ0bi1jYW5jZWwge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgY29sb3I6ICMwMDA7XHJcbn1cclxuXHJcbiNjdXN0b21DaGVja2JveC1lcnJvciB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICB0b3A6IDM1cHg7XHJcbiAgbGVmdDogMjRweDtcclxuICB3aWR0aDogMTUwcHg7XHJcbiAgY29sb3I6IHJlZDtcclxuXHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDMyN3B4KSB7XHJcbiAgICB0b3A6IDUwcHg7XHJcbiAgfVxyXG59XHJcbiIsIi5wb3B1cCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiA1MjBweDtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIHBhZGRpbmc6IDM0cHggNDhweCA0MHB4IDQ4cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA1MjBweCkge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbiAgfVxyXG4gIC5tZnAtY2xvc2Uge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgfVxyXG5cclxuICAmLWl0ZW0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgICYtaW1nIHtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gICAgfVxyXG4gICAgJi1pbmZvIHtcclxuICAgICAgLnBvcHVwLXByb2R1Y3QtbGluayB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgIH1cclxuICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuICAgIH1cclxuICB9XHJcbiAgJi10aXRsZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgZm9udC1zaXplOiByZW0oMjgpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjM1O1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUyMHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDIyKTtcclxuICAgIH1cclxuICB9XHJcbiAgJi1wcm9kdWN0IHtcclxuICAgIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjdweDtcclxuICAgIG9wYWNpdHk6IDAuODtcclxuICAgICYtbGluayB7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgIGNvbG9yOiAjMWE2NmFlO1xyXG4gICAgICBsaW5lLWhlaWdodDogMS4zO1xyXG4gICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAmLWxpbmUge1xyXG4gICAgbWFyZ2luOiAwIC00OHB4IDIzcHggLTQ4cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDNkM2QzO1xyXG4gICAgaGVpZ2h0OiAxcHg7XHJcbiAgfVxyXG4gICYtdHh0IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIycHg7XHJcbiAgICBvcGFjaXR5OiAwLjc7XHJcbiAgfVxyXG4gICYtbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICBsaW5lLWhlaWdodDogMS4zO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gIH1cclxuICAvLyAmLWJhY2tjYWxsOm50aC1sYXN0LWNoaWxkKC1uICsgMikge1xyXG4gIC8vICAgbWFyZ2luLWJvdHRvbTogMjdweDtcclxuICAvLyB9XHJcbiAgJi1iYWNrY2FsbC1pbnB1dHMge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTdweDtcclxuICB9XHJcbiAgJi1pbnB1dCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIHBhZGRpbmctbGVmdDogMTZweDtcclxuICAgIGZvbnQtd2VpZ2h0OiByZW0oMTQpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgLy8gbWFyZ2luLWJvdHRvbTogMTdweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgLy8gJjpsYXN0LWNoaWxkIHtcclxuICAgIC8vICAgbWFyZ2luLWJvdHRvbTogMjdweDtcclxuICAgIC8vIH1cclxuICAgICY6Zm9jdXMge1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwO1xyXG4gICAgfVxyXG4gIH1cclxuICAmLWFncmVlbWVudCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICYtdHh0IHtcclxuICAgICAgbWFyZ2luLWxlZnQ6IC04cHg7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDEyKTtcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuMztcclxuICAgIH1cclxuICAgICYtbGluayB7XHJcbiAgICAgIGNvbG9yOiAjMWE2NmFlO1xyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAmLWJ0biB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGhlaWdodDogNDhweDtcclxuICAgIGxpbmUtaGVpZ2h0OiA0OHB4O1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JEYXJrO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5jaGVja2JveCB7XHJcbiAgLy8gICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgJi1pbnB1dCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgJjpjaGVja2VkICsgLmNoZWNrYm94LWxhYmVsOjpiZWZvcmUge1xyXG4gICAgICAvLyAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvckN5YW47XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwNzFjMjg7XHJcbiAgICB9XHJcbiAgICAmOmNoZWNrZWQgKyAuY2hlY2tib3gtbGFiZWw6OmFmdGVyIHtcclxuICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuICB9XHJcbiAgJi1sYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAvLyB2ZXJ0aWNhbC1hbGlnbjogc3ViO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAzOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICY6OmJlZm9yZSB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB3aWR0aDogMTZweDtcclxuICAgICAgaGVpZ2h0OiAxNnB4O1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZTVlZGY3O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgICB6LWluZGV4OiAxO1xyXG4gICAgfVxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgd2lkdGg6IDE4cHg7XHJcbiAgICAgIGhlaWdodDogMThweDtcclxuXHJcbiAgICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy9pY29ucy9jaGVja2JveC1hcnJvdy5zdmdcIikgbm8tcmVwZWF0O1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDEwcHggOHB4O1xyXG4gICAgICAvLyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgei1pbmRleDogMjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuLnBvcHVwLWl0ZW0taW5mby1jb3VudGVyIHtcclxuICAuY2FyZC1pdGVtLWNvdW50ZXIge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gIH1cclxuICAuY2FyZC1pdGVtLXByaWNlLWN1cnJlbnQge1xyXG4gICAgZm9udC1zaXplOiByZW0oMjIpO1xyXG4gICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICBsaW5lLWhlaWdodDogMTtcclxuICB9XHJcbiAgLmNhcmQtaXRlbS1wcmljZSB7XHJcbiAgICBtYXJnaW4tdG9wOiAtNXB4O1xyXG4gIH1cclxuICAvLyAuY2FyZC1pdGVtLXByaWNlLW9sZCB7XHJcbiAgLy8gICBsaW5lLWhlaWdodDogO1xyXG4gIC8vIH1cclxufVxyXG4ucG9wdXAtZmFzdE9kZXIge1xyXG4gIHNwYW4ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgLy8gdG9wOiAtMTdweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgfVxyXG59XHJcbi5wb3B1cC1xdWVyeSB7XHJcbiAgc3BhbiB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAvLyB0b3A6IC0xN3B4O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgY29sb3I6IHJlZDtcclxuICB9XHJcbn1cclxuLnBvcHVwLWJhY2tjYWxsIHtcclxuICBzcGFuIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC8vIHRvcDogLTE3cHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gIH1cclxufVxyXG4ucG9wdXAtcHJpY2Uge1xyXG4gIHNwYW4ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgLy8gdG9wOiAtMTdweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgfVxyXG59XHJcbi5wb3B1cC1sYWJlbCB7XHJcbiAgc3BhbiB7XHJcbiAgICB0b3A6IDA7XHJcbiAgfVxyXG59XHJcbi5mb3JtLWNlbGwtZmllbGQtc2VuZCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBtYXJnaW4tcmlnaHQ6IDQwcHg7XHJcblxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgfVxyXG5cclxuICAucG9wdXAtYWdyZWVtZW50LXR4dCB7XHJcbiAgICB3aWR0aDogMzIwcHg7XHJcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gIH1cclxuXHJcbiAgLmNoZWNrYm94IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB0b3A6IDVweDtcclxuICB9XHJcbn1cclxuIiwiLnBvcHVwIHtcclxuICAmLXJldiB7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1hcmdpbjogMjBweCBhdXRvO1xyXG4gICAgbWF4LXdpZHRoOiA2MTZweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcblxyXG4gICAgLm1mcC1jbG9zZSB7XHJcbiAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICBmb250LXNpemU6IDQycHg7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLnBvcHVwIHtcclxuICAmLXJldiB7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1hcmdpbjogMjBweCBhdXRvO1xyXG4gICAgbWF4LXdpZHRoOiA2MTZweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcblxyXG4gICAgLm1mcC1jbG9zZSB7XHJcbiAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICBmb250LXNpemU6IDQycHg7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLnBvcHVwIHtcclxuICAmLWNhcmQge1xyXG4gICAgd2lkdGg6IDc4JTtcclxuICAgIHBhZGRpbmc6IDMycHggNjRweDtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcclxuICAgICAgcGFkZGluZzogMzJweCA0OHB4O1xyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xyXG4gICAgICAuY2FyZC1pdGVtLXByaWNlLWN1cnJlbnQge1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjM7XHJcbiAgICAgICAgZm9udC1zaXplOiByZW0oMjIpO1xyXG4gICAgICB9XHJcbiAgICAgIC5jYXJkLWl0ZW0tcHJpY2UtY3VycmVuY3kge1xyXG4gICAgICAgIGNvbG9yOiAjMDAwMDAwNzU7XHJcbiAgICAgIH1cclxuICAgICAgLnBvcHVwLWNhcmQtaW5mbyB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1pbWcge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMjRweDtcclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgICAgIG1heC13aWR0aDogODhweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1pbmZvIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgICAmLWxpbmsge1xyXG4gICAgICAgIGNvbG9yOiAjMDAwMDAwYTg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtdGl0bGUge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi13cmFwcGVyOm50aC1vZi10eXBlKDIpIHtcclxuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgIG1heC13aWR0aDogMjQwcHg7XHJcbiAgICAgIC8vIG1hcmdpbi1ib3R0b206IDMycHg7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtd3JhcHBlcjpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLWNvbnRhbnQge1xyXG4gICAgICBwYWRkaW5nLXRvcDogMjRweDtcclxuICAgICAgcGFkZGluZzogMjRweCA2NHB4IDMycHggNjRweDtcclxuICAgICAgbWFyZ2luOiAwIC02NHB4IC0zMnB4IC02NHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgICAgICBtYXJnaW46IDAgLTQ4cHggLTMycHggLTQ4cHg7XHJcbiAgICAgIH1cclxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgICAgICBtYXJnaW46IDAgLTQ4cHggLTMycHggLTQ4cHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1vcHRpb25hbCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIG92ZXJmbG93LXg6IGF1dG87XHJcbiAgICAgICAgb3ZlcmZsb3cteTogaGlkZGVuO1xyXG4gICAgICB9XHJcbiAgICAgICYtbGluayB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDE1cHgpO1xyXG4gICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMzhweDtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICBjb2xvcjogIzAwMDAwMDtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xyXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgIC8vIGZsZXgtd3JhcDogbm93cmFwO1xyXG4gICAgICAgICAgbWluLXdpZHRoOiAxODRweDtcclxuICAgICAgICAgIHdpZHRoOiAxODRweDtcclxuICAgICAgICAgIGhlaWdodDogODBweDtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgICAgICAgICBwYWRkaW5nOiAxOHB4IDE2cHg7XHJcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS4zO1xyXG4gICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIGNvbG9yOiAjMmE0NDU1O1xyXG4gICAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgIG1hcmdpbi1yaWdodDogMjRweDtcclxuICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmNhcmQtaXRlbS1wcmljZS1jdXJyZW50IHtcclxuICAgICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICB9XHJcbiAgICAuY2FyZC1pdGVtLWJ0biB7XHJcbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gMTVweCk7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgICAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgIG1hcmdpbi1yaWdodDogMjRweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC5jYXJkLWl0ZW0tZmVhdHVyZXMge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XHJcbiAgICAgICAgb3ZlcmZsb3cteDogYXV0bztcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5wb3B1cC1saW5lLWJpZyB7XHJcbiAgICBtYXJnaW46IDAgLTY0cHggMjNweCAtNjRweDtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgICAgbWFyZ2luOiAwIC00OHB4IDIzcHggLTQ4cHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5wcm9kdWN0LWl0ZW0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkge1xyXG4gICAgICAucHJvZHVjdC1pdGVtIHtcclxuICAgICAgICBtYXgtd2lkdGg6IGluaXRpYWw7XHJcbiAgICAgICAgbWluLXdpZHRoOiBub25lO1xyXG4gICAgICAgICYtdGl0bGUge1xyXG4gICAgICAgICAgZm9udC1zaXplOiByZW0oMTQpO1xyXG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjhweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1wcmljZSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IHJlbSgxOCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTAwcHgpIHtcclxuICAgICAgLnByb2R1Y3Qge1xyXG4gICAgICAgICYtaXRlbSB7XHJcbiAgICAgICAgICAmLWltZyB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmLWxpbmtzIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICYtcmFpdCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmLWxpa2Uge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgJi1hZGQge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgJi1idG4ge1xyXG4gICAgICAgICAgICB3aWR0aDogODRweDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogLTE4cHg7XHJcbiAgICAgICAgICAgICYtc3BhbiB7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJi1wcmljZSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgLnByb2R1Y3Qtc3dpcGVyIHtcclxuICAgIGhlaWdodDogaW5pdGlhbDtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAubWZwLWNvbnRlbnQge1xyXG4gICAgYmFja2dyb3VuZDogbm9uZTtcclxuICB9XHJcbn1cclxuLnBvcHVwLWxpbmUtc2hvdyB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgfVxyXG59XHJcbi5wb3B1cC10aXRsZSB7XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XHJcbiAgICBmb250LXNpemU6IHJlbSgyMik7XHJcbiAgfVxyXG59XHJcbi5wcm9kdWN0LXN3aXBlci1tb2ItaXRlbSB7XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgLnN3aXBlci13cmFwcGVyIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDBweCwgMHB4KSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4ucG9wdXAtY2FyZC13cmFwcGVyLWFkYXB0aXZlIHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICBwYWRkaW5nOiAxNnB4IDMycHggMTZweCAzMnB4O1xyXG4gICAgbWFyZ2luOiAtMTZweCAtMzJweCAtMTZweCAtMzJweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICB9XHJcbn1cclxuLnByb2R1Y3Qtc3dpcGVyLW1vYi1pdGVtIHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgfVxyXG59XHJcblxyXG4uY2FyZC1pdGVtLWZlYXR1cmVzOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgd2lkdGg6IDA7XHJcbn1cclxuLyogaWUgMTArICovXHJcblxyXG4uY2FyZC1pdGVtLWZlYXR1cmVzIHtcclxuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XHJcbn1cclxuLyog0YTRhCAo0YHQstC+0LnRgdGC0LLQviDQsdC+0LvRjNGI0LUg0L3QtSDRgNCw0LHQvtGC0LDQtdGCLCDQtNGA0YPQs9C40YUg0YHQv9C+0YHQvtCx0L7QsiDRgtC+0LbQtSDQvdC10YIpKi9cclxuXHJcbi5jYXJkLWl0ZW0tZmVhdHVyZXMge1xyXG4gIG92ZXJmbG93OiAtbW96LXNjcm9sbGJhcnMtbm9uZTtcclxufVxyXG4ucG9wdXAtY2FyZC1vcHRpb25hbDo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gIHdpZHRoOiAwO1xyXG59XHJcbi8qIGllIDEwKyAqL1xyXG4ucG9wdXAtY2FyZC1vcHRpb25hbCB7XHJcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xyXG59XHJcbi8qINGE0YQgKNGB0LLQvtC50YHRgtCy0L4g0LHQvtC70YzRiNC1INC90LUg0YDQsNCx0L7RgtCw0LXRgiwg0LTRgNGD0LPQuNGFINGB0L/QvtGB0L7QsdC+0LIg0YLQvtC20LUg0L3QtdGCKSovXHJcbi5wb3B1cC1jYXJkLW9wdGlvbmFsIHtcclxuICBvdmVyZmxvdzogLW1vei1zY3JvbGxiYXJzLW5vbmU7XHJcbn1cclxuIiwiLnBvcHVwLXNpbWlsYXIge1xyXG4gIHdpZHRoOiA3OCU7XHJcblxyXG4gIHBhZGRpbmc6IDM0cHggNjRweCA0MHB4IDY0cHg7XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgcGFkZGluZzogMzRweCA0OHB4IDQwcHggNDhweDtcclxuICB9XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XHJcbiAgICBwYWRkaW5nOiAzNHB4IDE1cHggNDBweCAxNXB4O1xyXG4gICAgLnBvcHVwLXRpdGxlIHtcclxuICAgICAgZm9udC1zaXplOiByZW0oMjIpO1xyXG4gICAgfVxyXG4gICAgLnBvcHVwLXByb2R1Y3Qtc3BhbiB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG4gICYtd3JhcHBlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjdweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNjBweCkge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuICAgIC5jYXJkLWl0ZW0tb3B0aW9ucyB7XHJcbiAgICAgIG1heC13aWR0aDogNDI0cHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gICYtY29udGFudCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xyXG4gICAgcGFkZGluZzogMjNweCA2NHB4IDQwcHggNjRweDtcclxuICAgIG1hcmdpbjogLTIzcHggLTY0cHggLTQwcHggLTY0cHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgIG1hcmdpbjogMDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgICAgLnByb2R1Y3QtaXRlbSB7XHJcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMCkge1xyXG4gICAgICAucHJvZHVjdC1pdGVtIHtcclxuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDhweCByZ2IoMCAwIDAgLyAxMCUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucG9wdXAtbGluZS1iaWcge1xyXG4gICAgbWFyZ2luOiAwIC02NHB4IDIzcHggLTY0cHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgIG1hcmdpbjogMCAtNDhweCAyM3B4IC00OHB4O1xyXG4gICAgfVxyXG4gIH1cclxuICAucHJvZHVjdC1pdGVtIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICAucHJvZHVjdC1pdGVtIHtcclxuICAgICAgbWF4LXdpZHRoOiBpbml0aWFsO1xyXG4gICAgICBtaW4td2lkdGg6IG5vbmU7XHJcbiAgICAgICYtdGl0bGUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyOHB4O1xyXG4gICAgICB9XHJcbiAgICAgICYtcHJpY2Uge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcmVtKDE4KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDUwMHB4KSB7XHJcbiAgICAgIC5wcm9kdWN0IHtcclxuICAgICAgICAmLWl0ZW0ge1xyXG4gICAgICAgICAgJi1pbWcge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgJi1saW5rcyB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmLXJhaXQge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgJi1saWtlIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICYtYWRkIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICYtYnRuIHtcclxuICAgICAgICAgICAgd2lkdGg6IDg0cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0xOHB4O1xyXG4gICAgICAgICAgICAmLXNwYW4ge1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtcHJpY2Uge1xyXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5wcm9kdWN0LXN3aXBlciB7XHJcbiAgICBoZWlnaHQ6IGluaXRpYWw7XHJcbiAgfVxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcclxuICAgIC5zd2lwZXItc2xpZGUge1xyXG4gICAgICB3aWR0aDogMjY0cHggIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIC5wcm9kdWN0LWl0ZW0ge1xyXG4gICAgICBtaW4td2lkdGg6IDI2NHB4O1xyXG4gICAgICBtYXgtd2lkdGg6IDMxMnB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLnByb2R1Y3Qtc3dpcGVyLW1vYi1zaW1pbGFyIHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAuc3dpcGVyLXdyYXBwZXIge1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5wb3B1cC1maWx0ZXJzIHtcclxuICBsZWZ0OiAwO1xyXG4gIHRvcDogMDtcclxuICBib3JkZXItcmFkaXVzOiAwO1xyXG4gIG1hcmdpbjogaW5pdGlhbDtcclxuICBwYWRkaW5nOiAwcHggNDVweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIG1heC13aWR0aDogNDc1cHg7XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XHJcbiAgICBwYWRkaW5nOiAwcHggMjBweDtcclxuICB9XHJcbiAgJi10aXRsZSB7XHJcbiAgICBmb250LXNpemU6IHJlbSgyOCk7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgbWFyZ2luOiAwIC0yNTBweDtcclxuICAgIHBhZGRpbmc6IDE2cHggMjUwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkM2QzZDM7XHJcbiAgfVxyXG4gIC5tZnAtY2xvc2Uge1xyXG4gICAgZm9udC1zaXplOiAwO1xyXG4gICAgdG9wOiAyNHB4O1xyXG4gICAgcmlnaHQ6IDI0cHg7XHJcbiAgICBoZWlnaHQ6IDI0cHg7XHJcbiAgICB3aWR0aDogMjRweDtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uL2ltYWdlcy9pY29ucy9DbG9zZS5zdmcpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICB9XHJcbn1cclxuLnBvcHVwLXdyYXAge1xyXG4gIG1heC13aWR0aDogNDc1cHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIC5jYWxjdWxhdG9yLWJ0bi13cmFwcGVyIHtcclxuICAgIG1heC13aWR0aDogNDc1cHg7XHJcbiAgICAuY2FsY3VsYXRvci1idG4ge1xyXG4gICAgICBmbGV4OiAwIDAgODQuNyU7XHJcbiAgICAgIG1heC13aWR0aDogODQuNyU7XHJcbiAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDBweDtcclxuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMHB4O1xyXG4gICAgICBwYWRkaW5nOiAwcHggMjBweDtcclxuICAgIH1cclxuICAgIC5jYWxjdWxhdG9yLXJlbG9hZCB7XHJcbiAgICAgIGZsZXg6IDAgMCAxNS4zJTtcclxuICAgICAgbWF4LXdpZHRoOiAxNS4zJTtcclxuICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDBweDtcclxuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDBweDtcclxuICAgICAgdGV4dC1vdmVyZmxvdzogaW5pdGlhbDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5tZnAtd3JhcCB7XHJcbiAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7XHJcbiAgdG9wOiAwICFpbXBvcnRhbnQ7XHJcbiAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbiBhdXRvICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tZnAtYmcge1xyXG4gIHBvc2l0aW9uOiBmaXhlZCAhaW1wb3J0YW50O1xyXG4gIHRvcDogMCAhaW1wb3J0YW50O1xyXG59XHJcbiIsIi5wb3B1cCB7XHJcbiAgJi1pbWcge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxufVxyXG4uemFnbHVzaGthLXBob25lIHtcclxuICAucG9wdXAge1xyXG4gICAgJi10aXRsZSB7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgICYtdGV4dCB7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICB9XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICB9XHJcbiAgLm1mcC1jbG9zZSB7XHJcbiAgICBmb250LXNpemU6IDA7XHJcbiAgICB0b3A6IDI0cHg7XHJcbiAgICByaWdodDogMjRweDtcclxuICAgIGhlaWdodDogMjRweDtcclxuICAgIHdpZHRoOiAyNHB4O1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uLy4vaW1hZ2VzL2ljb25zL0Nsb3NlLnN2Zyk7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gIH1cclxuICAucGFnZS1zdGlja2VycyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgICBvdmVyZmxvdy14OiBpbml0aWFsO1xyXG4gICAgd2hpdGUtc3BhY2U6IGluaXRpYWw7XHJcbiAgICAudWktc3RpY2tlciB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDhweDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19 */
>>>>>>> 614968b2abe6e5b7a4b2f40d33650f27625af6ab
>>>>>>> main
